{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Kora Kora is an open source, web based digital repository platform designed for cultural heritage institutions, projects, and scholars interested in cataloging, curating, managing, preserving, sharing, and displaying digital objects and associated metadata. Kora allows users to build digital repository projects around a variety of digitized and born-digital objects, such as documents, images, audio, video, and 3D models. Beyond digital objects, Kora also allows users to include non-material culture entities, such as events or people, in their digital repository project. Kora\u2019s architecture and user experience is centered around providing an unprecedented level of flexibility in a project's metadata structure. This flexibility allows users to create multiple forms for managing records , each with their own robust structure and metadata scheme. This flexibility allows institutions, projects, and individual scholars to customize Kora to meet the unique needs of their particular project or collection. Kora is designed for distributed record creation and management among multiple collaborators. Users can work on the same project from anywhere in the world as long as they have access to the web. Each project in a Kora installation includes granular control over user permissions. Project administrators aren\u2019t locked into specific types of users with fixed permissions. Instead, they can flexibly create different types of user permission groups to meet the needs of their project and collaborators. Users can be added and removed from those permission groups as the needs of the project dictates. A single installation of Kora can support any number of discreet digital repository projects, thereby making it a perfect solution for institutions and individuals looking for a single solution to support a variety of digital collections. While each project in a Kora installation is a silo with its own users and records, users can search across all projects for which they have access within an installation. This makes Kora a perfect solution for institutions interested in managing separate collections or projects under the same institutional umbrella. In addition, the Kora API can be used to display records (including searching and browsing) in a public facing website from across multiple projects in one Kora installation. In order to support data portability and project workflows, Kora includes powerful import and export tools. Records (object + metadata) can be imported as XML, JSON, and CSV and exported as XML or JSON individually or in a batch. In keeping with the need to ensure authenticity and integrity of uploaded and imported files, Kora automatically generates fixity information on all ingested files, which can be used to verify that files are free from tampering and corruption. Developed and actively maintained by Michigan State University\u2019s Matrix: The Center for Digital Humanities and Social Sciences , Kora is released under a GNU GPL 2.0 open source license and available for download from GitHub at https://github.com/matrix-msu/kora .","title":"Home"},{"location":"#about-kora","text":"Kora is an open source, web based digital repository platform designed for cultural heritage institutions, projects, and scholars interested in cataloging, curating, managing, preserving, sharing, and displaying digital objects and associated metadata. Kora allows users to build digital repository projects around a variety of digitized and born-digital objects, such as documents, images, audio, video, and 3D models. Beyond digital objects, Kora also allows users to include non-material culture entities, such as events or people, in their digital repository project. Kora\u2019s architecture and user experience is centered around providing an unprecedented level of flexibility in a project's metadata structure. This flexibility allows users to create multiple forms for managing records , each with their own robust structure and metadata scheme. This flexibility allows institutions, projects, and individual scholars to customize Kora to meet the unique needs of their particular project or collection. Kora is designed for distributed record creation and management among multiple collaborators. Users can work on the same project from anywhere in the world as long as they have access to the web. Each project in a Kora installation includes granular control over user permissions. Project administrators aren\u2019t locked into specific types of users with fixed permissions. Instead, they can flexibly create different types of user permission groups to meet the needs of their project and collaborators. Users can be added and removed from those permission groups as the needs of the project dictates. A single installation of Kora can support any number of discreet digital repository projects, thereby making it a perfect solution for institutions and individuals looking for a single solution to support a variety of digital collections. While each project in a Kora installation is a silo with its own users and records, users can search across all projects for which they have access within an installation. This makes Kora a perfect solution for institutions interested in managing separate collections or projects under the same institutional umbrella. In addition, the Kora API can be used to display records (including searching and browsing) in a public facing website from across multiple projects in one Kora installation. In order to support data portability and project workflows, Kora includes powerful import and export tools. Records (object + metadata) can be imported as XML, JSON, and CSV and exported as XML or JSON individually or in a batch. In keeping with the need to ensure authenticity and integrity of uploaded and imported files, Kora automatically generates fixity information on all ingested files, which can be used to verify that files are free from tampering and corruption. Developed and actively maintained by Michigan State University\u2019s Matrix: The Center for Digital Humanities and Social Sciences , Kora is released under a GNU GPL 2.0 open source license and available for download from GitHub at https://github.com/matrix-msu/kora .","title":"About Kora"},{"location":"_docmap/","text":"Documentation Map admin dashboard glossary settings users content: items item sets media resource templates vocabularies sites sites management pages management modules modules (managing) individual modules documentation","title":" docmap"},{"location":"about/","text":"About This Documentation This documentation, which covers the current version of Kora (v3), was developed as a part of the Cultural Heritage Informatics Initiative , and was written and edited primarily by: Zachary Francis-Hapner , PhD student, MSU Department of Anthropology Brian Samuel Geyer , PhD Candidate, MSU Department of Anthropology Autumn Painter , PhD Candidate, MSU Department of Anthropology Additional writing and editing by: Ethan Watrall , Associate Professor, Department of Anthropology; Director, Cultural Heritage Informatics Initiative; Associate Director, Matrix: The Center for Digital Humanities & Social Sciences. This work is licensed under Creative Commons Attribution-NonCommercial (CC BY-NC)","title":"About this Documentation"},{"location":"about/#about-this-documentation","text":"This documentation, which covers the current version of Kora (v3), was developed as a part of the Cultural Heritage Informatics Initiative , and was written and edited primarily by: Zachary Francis-Hapner , PhD student, MSU Department of Anthropology Brian Samuel Geyer , PhD Candidate, MSU Department of Anthropology Autumn Painter , PhD Candidate, MSU Department of Anthropology Additional writing and editing by: Ethan Watrall , Associate Professor, Department of Anthropology; Director, Cultural Heritage Informatics Initiative; Associate Director, Matrix: The Center for Digital Humanities & Social Sciences. This work is licensed under Creative Commons Attribution-NonCommercial (CC BY-NC)","title":"About This Documentation"},{"location":"contributing/","text":"Contribute to this Guide This documentation website is designed to allow for input from readers and contributing to it is a fairly straightforward process. GitHub, the website on which this documentation is built, is built using Git, a version control system that tracks file changes over time and allows multiple users to make alterations to files and present those alterations to the owners for review and acceptance or rejection. In the case of this guide, any suggested alterations will be sent to the Kora documentation team for consideration prior to being officially added to this documentation website. To contribute, you will need to sign up for a GitHub account . (If using an educational email address, you may also considering signing up for a GitHub Education account , which will give you access to a number of useful tools.) Once you have completed the process for creating an account \u2013 including verifying your email address via the link that will be emailed to you \u2013 you will be able to make changes to this documentation and submit them for review. The kinds of contributions that readers can make fall into two broad categories. The first would be any changes related to grammar, syntax, very minor page layout changes (such as splitting one paragraph into two), or other small-scale copy-edits. The second would be suggestions to include any new reference images or data files, entirely new guide entries, or significant rewrites of existing guide entries. Copy-Editing and Other Minor Changes When making minor changes to pages in this documentation website, please keep the changes for each page within its own pull request. To add additional edits to the same page, when the pull request has already been created, pleas see the sub-section, \" Additional Minor Edits to the Same Page \" below. Pull requests remain open until a documentation team member is able to review it for inclusion, rejection, or make requests for alterations. Please watch the email address associated with your GitHub account for notifications of messages from the documentation team, which may ask you to adjust your proposed changes before they will be accepted. First-Time Page Edit To make minor changes to any page in this guide, click \"Edit on GitHub\" in the top-right of the page to be edited. Do this for each separate page to be edited. This will take you to GitHub's website. If not logged in, you will be asked to do so. Once (or if) logged in, you will be directed to a notification informing you that you will need to \"fork\" the kora-documentation repository before you can make edit suggestions. Note In Git nomenclature, \"fork\" is both a noun and a verb: a fork is a copy of another account's repository; and to make that copy is to fork it. You have control over your fork. The version control system tracks the differences between your repository, the repository from which you forked, and any other forks that are traced back to the original repository. Your fork is identical to the repository from which you forked it only until either you change your fork, or the originating repository is changed. The page notifying you of the need to fork looks like the screenshot below. Click on \"Fork this repository\": The page that loads will be the Markdown code for the page you are intending to edit. GitHub will again provide a notification at the top of this page, that you are editing a fork of the kora-documentation repository, rather than the original one managed by the chi-initiative GitHub account. This notification also notifies you that, when you save any changes you make in this code, the system will create a new \"branch,\" from which you can send a \"pull request\" to the main kora-documentation repository for review by the documentation team. These words are highlighted below. Note Within a repository, there is at least one \"branch,\" or version, of the repository code. Many repositories have multiple branches, which the owners use to keep track of different versions of their projects. This term is used for both Git and GitHub. In the case of your newly-forked repository, the system will be creating a new branch each time you click on \"Edit on GitHub,\" make some changes, and save those changes in your repository. In the GitHub page that has opened, find the parts of the page you wish to edit and make your changes. The Kora Documentation pages are written in a plain-text syntax system called \"Markdown,\" which is meant for use on the internet. Many find it intuitive to use. To learn how to use Markdown syntax to style your edits appropriately, please consult this Markdown style guide . One acceptable addition to a page that you might find useful would be an admonition, also called a call-out, to highlight a key explanation of some concept or idea. These look like this: Note This is a note admonition. Tip This is a tip admonition. Caution This is a caution admonition. Warning This is a warning admonition. To insert an admonition, follow this code example: !!! [admonition type] This is the descriptive paragraph for the admonition This is a second paragraph inside the same admonition In this example code, replace the bracketed portion \u2013 including the brackets temselves \u2013 with one of the four types noted above. To change the admonition's default title, add the new title in quotations next to the admonition type: !!! [admonition type] \"[Example Title]\" Descriptive paragraph. Once you have made your edits using Markdown syntax, scroll to the bottom of the page, to the \"Propose changes\" section. In the first text box, give a short summary description of your proposed changes (this is basically a \"title\" for your proposed changes). In the second, larger box, describe your changes in more detail. These boxes are important to your proposed changes because an either too-long or too-vague summary (the first box) may lead to a documentation team member rejecting your suggestions, since they may not understand your summary correctly. The detailed explanation, though less important, can still serve as a great way to expound upon your summary, so that any vagueness can be better summarized, but without adding to the \"title.\" Once you have filled in at least the first box (and hopefully the second), click on \"Propose changes\" to complete the editing for this page. GitHub will then take you to a page to create a \"pull request\" containing your pages, from the newly-created branch in your forked repository and leading to the main kora-documentation repository. Note In GitHub nomenclature, a \"pull request\" (known as a \"request-pull\" in Git) is a request to bring content TO a particular branch FROM another particular branch. As long as the branches are within the same system of connected repositories, then anyone who has one of those repositories can make a pull request for content from one branch to another (even two forked repositories). Though anyone can create the pull request, only the owner of the repository where the content is going TO can accept the request. Highlighted below is, from left-to-right, the repository where the changes are going TO (owned by chi-initiative), the branch of that repository it is going TO (master), the arrow indicating the direction of the change, then the repository it is coming FROM (your own repository, or in the case of the example, one owned by the bsgeyer account), and then the branch of the repository it is coming FROM (the newly-created \"patch-1\" branch). Click on the green \"Create pull request\" button. Clicking on this button will again change the view on the page, putting the short summary you wrote before into the pull request title box, and the longer description from before into the pull request description. If you wish to change either of these (such as to fix typos, like the one in the example screenshots presented here), feel free to do so. Click on the new, green \"Create pull request\" button that appears below these boxes to finalize the pull request. This will officially create the pull request in the main kora-documentation repository, for the documentation team to review. If all has been done correctly, it will look similar to this: Additional Minor Edits to the Same Page If, after creating a pull request, you decide you wish to make further edits to the same page, you will need to find your pull request in the chi-initiative-owned kora-documentation repository . When viewing the list of pull requests, you can filter them by author, and select your own account from the list. GitHub puts the user's account at the top of such dropdown lists, for ease of use. Once you find your pull request and click on it, its page will open. Click on the \"Files changed\" tab. The view will change to show a summary of the edits you previously made for this page's file. To reopen this file and add more edits, click on the three-dot menu icon, then select \"Edit file\" to be directed to the file's edit page. Make any desired additional changes. Once finished, scroll down to the bottom of the page, to write a summary and description for this \"commit.\" Be sure to leave the default option, to \"Commit directly to the patch-1 branch,\" which will add your changes to your already-opened pull request. Click the green \"Commit changes\" button to finish adding it. Note In Git (and GitHub) nomenclature, a \"commit\" is the smallest version of change tracked in the system. Doing this will add one's changes to the already-existing pull request for this page. Major Edit or New File Proposals In cases where you would like to suggest new documentation pages, images, or data files, you will need to submit these requests via GitHub's \"Issues\" feature; if submitted as a pull request, they will likely be rejected. To open a new Issue for the kora-documentation, visit the repository's Issue's page](https://github.com/chi-initiative/kora-documentation/issues). On this page, click the green \"New issue\" button on the right-hand side of the page. This will open a list of templates to use for proposing your changes. Select the template that corresponds to the changes you would like to suggest by clicking the green \"Get started\" button next to it, and fill in the requested information. When complete, click the green \"Submit new issue\" button at the bottom. Tip When suggesting a new page, write your page's code using the following template: # [Page Title] introductory text ## [First Page Section Title] section text ## [Second Page Section Title] section text Someone from the Kora documentation team will review your suggestions and take appropriate action, including through comments. Please continue to watch your GitHub-associated email for any such comments.","title":"How to Contribute"},{"location":"contributing/#contribute-to-this-guide","text":"This documentation website is designed to allow for input from readers and contributing to it is a fairly straightforward process. GitHub, the website on which this documentation is built, is built using Git, a version control system that tracks file changes over time and allows multiple users to make alterations to files and present those alterations to the owners for review and acceptance or rejection. In the case of this guide, any suggested alterations will be sent to the Kora documentation team for consideration prior to being officially added to this documentation website. To contribute, you will need to sign up for a GitHub account . (If using an educational email address, you may also considering signing up for a GitHub Education account , which will give you access to a number of useful tools.) Once you have completed the process for creating an account \u2013 including verifying your email address via the link that will be emailed to you \u2013 you will be able to make changes to this documentation and submit them for review. The kinds of contributions that readers can make fall into two broad categories. The first would be any changes related to grammar, syntax, very minor page layout changes (such as splitting one paragraph into two), or other small-scale copy-edits. The second would be suggestions to include any new reference images or data files, entirely new guide entries, or significant rewrites of existing guide entries.","title":"Contribute to this Guide"},{"location":"contributing/#copy-editing-and-other-minor-changes","text":"When making minor changes to pages in this documentation website, please keep the changes for each page within its own pull request. To add additional edits to the same page, when the pull request has already been created, pleas see the sub-section, \" Additional Minor Edits to the Same Page \" below. Pull requests remain open until a documentation team member is able to review it for inclusion, rejection, or make requests for alterations. Please watch the email address associated with your GitHub account for notifications of messages from the documentation team, which may ask you to adjust your proposed changes before they will be accepted.","title":"Copy-Editing and Other Minor Changes"},{"location":"contributing/#first-time-page-edit","text":"To make minor changes to any page in this guide, click \"Edit on GitHub\" in the top-right of the page to be edited. Do this for each separate page to be edited. This will take you to GitHub's website. If not logged in, you will be asked to do so. Once (or if) logged in, you will be directed to a notification informing you that you will need to \"fork\" the kora-documentation repository before you can make edit suggestions. Note In Git nomenclature, \"fork\" is both a noun and a verb: a fork is a copy of another account's repository; and to make that copy is to fork it. You have control over your fork. The version control system tracks the differences between your repository, the repository from which you forked, and any other forks that are traced back to the original repository. Your fork is identical to the repository from which you forked it only until either you change your fork, or the originating repository is changed. The page notifying you of the need to fork looks like the screenshot below. Click on \"Fork this repository\": The page that loads will be the Markdown code for the page you are intending to edit. GitHub will again provide a notification at the top of this page, that you are editing a fork of the kora-documentation repository, rather than the original one managed by the chi-initiative GitHub account. This notification also notifies you that, when you save any changes you make in this code, the system will create a new \"branch,\" from which you can send a \"pull request\" to the main kora-documentation repository for review by the documentation team. These words are highlighted below. Note Within a repository, there is at least one \"branch,\" or version, of the repository code. Many repositories have multiple branches, which the owners use to keep track of different versions of their projects. This term is used for both Git and GitHub. In the case of your newly-forked repository, the system will be creating a new branch each time you click on \"Edit on GitHub,\" make some changes, and save those changes in your repository. In the GitHub page that has opened, find the parts of the page you wish to edit and make your changes. The Kora Documentation pages are written in a plain-text syntax system called \"Markdown,\" which is meant for use on the internet. Many find it intuitive to use. To learn how to use Markdown syntax to style your edits appropriately, please consult this Markdown style guide . One acceptable addition to a page that you might find useful would be an admonition, also called a call-out, to highlight a key explanation of some concept or idea. These look like this: Note This is a note admonition. Tip This is a tip admonition. Caution This is a caution admonition. Warning This is a warning admonition. To insert an admonition, follow this code example: !!! [admonition type] This is the descriptive paragraph for the admonition This is a second paragraph inside the same admonition In this example code, replace the bracketed portion \u2013 including the brackets temselves \u2013 with one of the four types noted above. To change the admonition's default title, add the new title in quotations next to the admonition type: !!! [admonition type] \"[Example Title]\" Descriptive paragraph. Once you have made your edits using Markdown syntax, scroll to the bottom of the page, to the \"Propose changes\" section. In the first text box, give a short summary description of your proposed changes (this is basically a \"title\" for your proposed changes). In the second, larger box, describe your changes in more detail. These boxes are important to your proposed changes because an either too-long or too-vague summary (the first box) may lead to a documentation team member rejecting your suggestions, since they may not understand your summary correctly. The detailed explanation, though less important, can still serve as a great way to expound upon your summary, so that any vagueness can be better summarized, but without adding to the \"title.\" Once you have filled in at least the first box (and hopefully the second), click on \"Propose changes\" to complete the editing for this page. GitHub will then take you to a page to create a \"pull request\" containing your pages, from the newly-created branch in your forked repository and leading to the main kora-documentation repository. Note In GitHub nomenclature, a \"pull request\" (known as a \"request-pull\" in Git) is a request to bring content TO a particular branch FROM another particular branch. As long as the branches are within the same system of connected repositories, then anyone who has one of those repositories can make a pull request for content from one branch to another (even two forked repositories). Though anyone can create the pull request, only the owner of the repository where the content is going TO can accept the request. Highlighted below is, from left-to-right, the repository where the changes are going TO (owned by chi-initiative), the branch of that repository it is going TO (master), the arrow indicating the direction of the change, then the repository it is coming FROM (your own repository, or in the case of the example, one owned by the bsgeyer account), and then the branch of the repository it is coming FROM (the newly-created \"patch-1\" branch). Click on the green \"Create pull request\" button. Clicking on this button will again change the view on the page, putting the short summary you wrote before into the pull request title box, and the longer description from before into the pull request description. If you wish to change either of these (such as to fix typos, like the one in the example screenshots presented here), feel free to do so. Click on the new, green \"Create pull request\" button that appears below these boxes to finalize the pull request. This will officially create the pull request in the main kora-documentation repository, for the documentation team to review. If all has been done correctly, it will look similar to this:","title":"First-Time Page Edit"},{"location":"contributing/#additional-minor-edits-to-the-same-page","text":"If, after creating a pull request, you decide you wish to make further edits to the same page, you will need to find your pull request in the chi-initiative-owned kora-documentation repository . When viewing the list of pull requests, you can filter them by author, and select your own account from the list. GitHub puts the user's account at the top of such dropdown lists, for ease of use. Once you find your pull request and click on it, its page will open. Click on the \"Files changed\" tab. The view will change to show a summary of the edits you previously made for this page's file. To reopen this file and add more edits, click on the three-dot menu icon, then select \"Edit file\" to be directed to the file's edit page. Make any desired additional changes. Once finished, scroll down to the bottom of the page, to write a summary and description for this \"commit.\" Be sure to leave the default option, to \"Commit directly to the patch-1 branch,\" which will add your changes to your already-opened pull request. Click the green \"Commit changes\" button to finish adding it. Note In Git (and GitHub) nomenclature, a \"commit\" is the smallest version of change tracked in the system. Doing this will add one's changes to the already-existing pull request for this page.","title":"Additional Minor Edits to the Same Page"},{"location":"contributing/#major-edit-or-new-file-proposals","text":"In cases where you would like to suggest new documentation pages, images, or data files, you will need to submit these requests via GitHub's \"Issues\" feature; if submitted as a pull request, they will likely be rejected. To open a new Issue for the kora-documentation, visit the repository's Issue's page](https://github.com/chi-initiative/kora-documentation/issues). On this page, click the green \"New issue\" button on the right-hand side of the page. This will open a list of templates to use for proposing your changes. Select the template that corresponds to the changes you would like to suggest by clicking the green \"Get started\" button next to it, and fill in the requested information. When complete, click the green \"Submit new issue\" button at the bottom. Tip When suggesting a new page, write your page's code using the following template: # [Page Title] introductory text ## [First Page Section Title] section text ## [Second Page Section Title] section text Someone from the Kora documentation team will review your suggestions and take appropriate action, including through comments. Please continue to watch your GitHub-associated email for any such comments.","title":"Major Edit or New File Proposals"},{"location":"forms/adding_users_to_forms/","text":"Adding Users to Forms Adding a user to a form gives certain form permissions to users already in your KORA organization . Form permissions allow users to create, edit, and delete fields as well as records, depending on the permissions given to them. Users added as administrators will automatically have all of these permissions, but Kora allows you to create different permission groups for different users. Limiting the amount of form permissions granted to other users is useful in cases where you only want users to be able to enter data and create records. Adding Users to Forms Before adding users to a form, you will have to navigate to the project home page and select the edit form info button located in the form block you want to edit. The edit form info button will take you to the Edit Form page where you can press Go to Form Permissions Page add additional users to a form and create new permission groups. From the Form Permissions page, you can follow these steps to add new users to a permissions group for a form: The Admin Group will be the first block in the Form Permissions page. If you want a fuller explanation on how to handle admins, then check out the documentation on form administrators . Below the admin block is the Default Group block where new users with new permissions can be added. Click on Default Group to open it up. Once the block is open, click Add New User(s) to Group to add new users to this group. A box will appear prompting you to Select User(s) to Add to Permissions Group . Click on the Search and Select Users to be Added to the Permission Group drop-down list. Select the users you wanted added to this group from the list that appears below the box. You may also remove accidently selected users by clicking on the x next to their name. Finish adding users to the group by clicking the Add User(s) to Group Button. Creating a New Permission group You may also create new permission groups to further customize the types of permissions that form users use. From the Form Permissions page (see previous section), you may select Create a New Permissions Group located just above the admin group. Kora will prompt you for information on the new permissions group. Fill out a new name for the group. Select the particular form permissions that you want the new group to have by checking the boxes next to the particular permissions you want to give. Then select the particular users that you want included in this permission group, and finish the group by selecting Create New Permission Group . Your new permission group will appear as the bottom block on the Form Permissions page. Editing Permissions for users You are able to select particular form permissions for users by checking the boxes next to the permissions located in permissions groups. The options allow you to stop certain users from creating , editing , or deleting fields while still giving them the ability to create , edit or delete records. Any combination of these permissions are available.","title":"Adding Users to a Form"},{"location":"forms/adding_users_to_forms/#adding-users-to-forms","text":"Adding a user to a form gives certain form permissions to users already in your KORA organization . Form permissions allow users to create, edit, and delete fields as well as records, depending on the permissions given to them. Users added as administrators will automatically have all of these permissions, but Kora allows you to create different permission groups for different users. Limiting the amount of form permissions granted to other users is useful in cases where you only want users to be able to enter data and create records.","title":"Adding Users to Forms"},{"location":"forms/adding_users_to_forms/#adding-users-to-forms_1","text":"Before adding users to a form, you will have to navigate to the project home page and select the edit form info button located in the form block you want to edit. The edit form info button will take you to the Edit Form page where you can press Go to Form Permissions Page add additional users to a form and create new permission groups. From the Form Permissions page, you can follow these steps to add new users to a permissions group for a form: The Admin Group will be the first block in the Form Permissions page. If you want a fuller explanation on how to handle admins, then check out the documentation on form administrators . Below the admin block is the Default Group block where new users with new permissions can be added. Click on Default Group to open it up. Once the block is open, click Add New User(s) to Group to add new users to this group. A box will appear prompting you to Select User(s) to Add to Permissions Group . Click on the Search and Select Users to be Added to the Permission Group drop-down list. Select the users you wanted added to this group from the list that appears below the box. You may also remove accidently selected users by clicking on the x next to their name. Finish adding users to the group by clicking the Add User(s) to Group Button.","title":"Adding Users to Forms"},{"location":"forms/adding_users_to_forms/#creating-a-new-permission-group","text":"You may also create new permission groups to further customize the types of permissions that form users use. From the Form Permissions page (see previous section), you may select Create a New Permissions Group located just above the admin group. Kora will prompt you for information on the new permissions group. Fill out a new name for the group. Select the particular form permissions that you want the new group to have by checking the boxes next to the particular permissions you want to give. Then select the particular users that you want included in this permission group, and finish the group by selecting Create New Permission Group . Your new permission group will appear as the bottom block on the Form Permissions page.","title":"Creating a New Permission group"},{"location":"forms/adding_users_to_forms/#editing-permissions-for-users","text":"You are able to select particular form permissions for users by checking the boxes next to the permissions located in permissions groups. The options allow you to stop certain users from creating , editing , or deleting fields while still giving them the ability to create , edit or delete records. Any combination of these permissions are available.","title":"Editing Permissions for users"},{"location":"forms/additional_form_administrators/","text":"Additional Form Administrators Form administrators are individuals that are able to modify a form, including the ability to create, edit, and delete forms and records. Adding Form Administrators when Creating a New Form Before you finish creating your new form, you have the option to add additional form administrators. Administrators that are already a part of your project are automatically added (including yourself). Adding additional people will allow non-project adminstrator individuals to be able to modify this form. Click on the dropdown menu option: Select Additional Form Admins . The dropdown menu will list everyone who has a Kora account. Either scroll and choose the users you would like to add as form administrators, or you can type name(s)in to search the list. Once your additional form admins are selected, press the Create Form button at the bottom of the page. Adding Form Administrators to an Existing Form It is possible to add additional form administrators to an existing form. Adding adminstrators to an existing form will give them the ability Go to your project and find the form you are going to add additional administrators to, and click the button Edit Form Info . Scroll down on the Edit Form page until you see Need to Edit Form Permissions? and click the button to the right: Go to Form Permissions Page . At the top of the Form permissions page, you will see a box that lists the Admin Group , this is where you can add user(s) as additonal form admins, giving them full access to create, edit, and delete fields and records. Click the Add User(s) to Group button. A pop-up window will appear that will allow you to add user(s) to the administrator group. Click on the dropdown menu option: Select User(s) to Add to Permissions Group . The dropdown menu will list everyone who has a Kora account. You can add as many additional administrators as you need during this step. Either scroll and choose the users you would like to add as form administrators, or you can type name(s) in to search the list. When you are finished, click the Add User(s) to Group button. A pop-up window will appear on the top right of the screen notifying you that your user(s) were successfully added. Removing Form Administrators on an Existing Form It is possible to remove form adminstrators on an existing form. This will remove that user's ability to interact with a form. Go to your project and find the form you are going to add additional administrators to, and click the button Edit Form Info . Scroll down on the Edit Form page until you see \" Need to Edit Form Permissions? \" and click the button to the right: Go to Form Permissions Page . At the top of the Form permissions page, you will see a box that lists the Admin Group . Within this box it will list names that have access to create, edit, and delete fields and records within this form. To remove a user, press the ' X ' next the the name you wish to remove. A pop-up window will appear asking to confirm removing the user from this group. Click the red Remove User From Group button. A pop-up will appear on the top right corner of your screen notifying you that the user was successfully removed. Users will not be notified when removed from being a form administrator.","title":"Adding Additional Form Administrators"},{"location":"forms/additional_form_administrators/#additional-form-administrators","text":"Form administrators are individuals that are able to modify a form, including the ability to create, edit, and delete forms and records.","title":"Additional Form Administrators"},{"location":"forms/additional_form_administrators/#adding-form-administrators-when-creating-a-new-form","text":"Before you finish creating your new form, you have the option to add additional form administrators. Administrators that are already a part of your project are automatically added (including yourself). Adding additional people will allow non-project adminstrator individuals to be able to modify this form. Click on the dropdown menu option: Select Additional Form Admins . The dropdown menu will list everyone who has a Kora account. Either scroll and choose the users you would like to add as form administrators, or you can type name(s)in to search the list. Once your additional form admins are selected, press the Create Form button at the bottom of the page.","title":"Adding Form Administrators when Creating a New Form"},{"location":"forms/additional_form_administrators/#adding-form-administrators-to-an-existing-form","text":"It is possible to add additional form administrators to an existing form. Adding adminstrators to an existing form will give them the ability Go to your project and find the form you are going to add additional administrators to, and click the button Edit Form Info . Scroll down on the Edit Form page until you see Need to Edit Form Permissions? and click the button to the right: Go to Form Permissions Page . At the top of the Form permissions page, you will see a box that lists the Admin Group , this is where you can add user(s) as additonal form admins, giving them full access to create, edit, and delete fields and records. Click the Add User(s) to Group button. A pop-up window will appear that will allow you to add user(s) to the administrator group. Click on the dropdown menu option: Select User(s) to Add to Permissions Group . The dropdown menu will list everyone who has a Kora account. You can add as many additional administrators as you need during this step. Either scroll and choose the users you would like to add as form administrators, or you can type name(s) in to search the list. When you are finished, click the Add User(s) to Group button. A pop-up window will appear on the top right of the screen notifying you that your user(s) were successfully added.","title":"Adding Form Administrators to an Existing Form"},{"location":"forms/additional_form_administrators/#removing-form-administrators-on-an-existing-form","text":"It is possible to remove form adminstrators on an existing form. This will remove that user's ability to interact with a form. Go to your project and find the form you are going to add additional administrators to, and click the button Edit Form Info . Scroll down on the Edit Form page until you see \" Need to Edit Form Permissions? \" and click the button to the right: Go to Form Permissions Page . At the top of the Form permissions page, you will see a box that lists the Admin Group . Within this box it will list names that have access to create, edit, and delete fields and records within this form. To remove a user, press the ' X ' next the the name you wish to remove. A pop-up window will appear asking to confirm removing the user from this group. Click the red Remove User From Group button. A pop-up will appear on the top right corner of your screen notifying you that the user was successfully removed. Users will not be notified when removed from being a form administrator.","title":"Removing Form Administrators on an Existing Form"},{"location":"forms/batch_assigning_field_values/","text":"Batch Assigning Field Values When entering records into a form , there may be times where you want to assign a value to a field across multiple records. For instance, you may know the name of a site for multiple artifacts within that site. You can enter the site name for each record individually, or you can save time by batch assigning field values to all the records contained within that site. This will fill in the designated field with the desired record across all records or selected records. Batch Assigning Field Values Within A Form For steps on how to batch assign fields to specific records, go to the next section. If you want to batch assign fields to all records located within a form then follow these steps: Navigate to the form that you want to batch assign field values and select either the menu for your form, or side navigation bar. Select the Batch Assign Field Values options from either menu option. This will bring you to the Batch Assign Field Options page. Here you will select the Search and Select a Field to Batch Assign bar to search and select your desired field. A drop down menu will appear for you to select your desired field. Once you select a field to batch assign, an interface will appear for you to enter your desired value. For this example, a text field was selected. After entering your desired value, you have the option to select whether or not this value overwrites values already written into records. Select the Inputted values will be overwritten option if you want previously entered values to be deleted and replaced. After selecting all the desired options for the batch assignment, select the Batch Assigned Field Values button at the bottom of the page to carry out the batch assignment. This will bring you to the Form Record & Search page where a notification will confirm that you have been successful at batch assigning field records to all records within your form. From this page you may also batch assign to only selection of records (start at step 3 of the next section). Selecting Specific Records for Batch Assigning Sometimes you will want to batch assign only a selection of records rather than all the records within that form. Follow these steps to do so: Navigate to the form that you want to batch assign field values and select either the menu for your form, or side navigation bar. Select the Form Records & Search option from either navigation menu to go to that page. Additionally, you may also get to the Form Records & Search page by clicking the Form Records and Search () button at the form home. From the Form Records & Search page, you will be able to browse and search through records that you have already entered. You may browse through all records or search for a particular subset of records that you want to work with. You may select your chosen records by using the circle option to the left of each record. Once you've selected the records that you want to batch assign field values to, click on the batch assign () button that appears at the bottom of the page. You have now selected a subset of all your record to batch assign fields to and will be brought to the batch assign field option page. From the batch assign field options page you will follow the steps to batch assign field values as outlined in the previous section (start at step 3). Note that you will not have the option to overwrite previous values, because all field values in the selected record will be batch assigned your given value.","title":"Batch Assigning Field Values"},{"location":"forms/batch_assigning_field_values/#batch-assigning-field-values","text":"When entering records into a form , there may be times where you want to assign a value to a field across multiple records. For instance, you may know the name of a site for multiple artifacts within that site. You can enter the site name for each record individually, or you can save time by batch assigning field values to all the records contained within that site. This will fill in the designated field with the desired record across all records or selected records.","title":"Batch Assigning Field Values"},{"location":"forms/batch_assigning_field_values/#batch-assigning-field-values-within-a-form","text":"For steps on how to batch assign fields to specific records, go to the next section. If you want to batch assign fields to all records located within a form then follow these steps: Navigate to the form that you want to batch assign field values and select either the menu for your form, or side navigation bar. Select the Batch Assign Field Values options from either menu option. This will bring you to the Batch Assign Field Options page. Here you will select the Search and Select a Field to Batch Assign bar to search and select your desired field. A drop down menu will appear for you to select your desired field. Once you select a field to batch assign, an interface will appear for you to enter your desired value. For this example, a text field was selected. After entering your desired value, you have the option to select whether or not this value overwrites values already written into records. Select the Inputted values will be overwritten option if you want previously entered values to be deleted and replaced. After selecting all the desired options for the batch assignment, select the Batch Assigned Field Values button at the bottom of the page to carry out the batch assignment. This will bring you to the Form Record & Search page where a notification will confirm that you have been successful at batch assigning field records to all records within your form. From this page you may also batch assign to only selection of records (start at step 3 of the next section).","title":"Batch Assigning Field Values Within A Form"},{"location":"forms/batch_assigning_field_values/#selecting-specific-records-for-batch-assigning","text":"Sometimes you will want to batch assign only a selection of records rather than all the records within that form. Follow these steps to do so: Navigate to the form that you want to batch assign field values and select either the menu for your form, or side navigation bar. Select the Form Records & Search option from either navigation menu to go to that page. Additionally, you may also get to the Form Records & Search page by clicking the Form Records and Search () button at the form home. From the Form Records & Search page, you will be able to browse and search through records that you have already entered. You may browse through all records or search for a particular subset of records that you want to work with. You may select your chosen records by using the circle option to the left of each record. Once you've selected the records that you want to batch assign field values to, click on the batch assign () button that appears at the bottom of the page. You have now selected a subset of all your record to batch assign fields to and will be brought to the batch assign field option page. From the batch assign field options page you will follow the steps to batch assign field values as outlined in the previous section (start at step 3). Note that you will not have the option to overwrite previous values, because all field values in the selected record will be batch assigned your given value.","title":"Selecting Specific Records for Batch Assigning"},{"location":"forms/creating_a_form/","text":"Creating a Form A form is the mechanism by which you are able to generate records. It is similar to a form that you would fill out to catalog an artifact or object. It can contain multiple pages and various input fields. A form will determine the types of metadata that is generated for a project. Each project can have multiple forms depending on the types of objects you are recording or who your target audience(s) are. For example, you may have a form for text-based artifacts (such as archival documents) and another for physical objects. Follow the steps below to create a form. Open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Click the Create a New Form button. This button is located below the description of your repository. This will bring you to a New Form page. Enter the name of your form under Form Name . This is a required field. For example: Artifact, Document, and Media can all be form names. Enter the form's description within the blank text area under Description . This is where you describe the purpose of this form. You are limited to a maximum of 500 characters. After you are finished filling out the page, click the Create Form button. This will create and then bring you to your form. Note : At the bottom of this page you may also select any additional form adminstrators, individuals that will be able to modify the form you are creating. Administrators that are already a part of your project are automatically added (including yourself). Adding additional people will allow non-project adminstrator individuals to be able to modify this form. You can choose individuals from the dropdown menu, or you can type in a name to search the list. For more information, visit the Additional Form Administrators Guide .","title":"Creating a Form"},{"location":"forms/creating_a_form/#creating-a-form","text":"A form is the mechanism by which you are able to generate records. It is similar to a form that you would fill out to catalog an artifact or object. It can contain multiple pages and various input fields. A form will determine the types of metadata that is generated for a project. Each project can have multiple forms depending on the types of objects you are recording or who your target audience(s) are. For example, you may have a form for text-based artifacts (such as archival documents) and another for physical objects. Follow the steps below to create a form. Open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Click the Create a New Form button. This button is located below the description of your repository. This will bring you to a New Form page. Enter the name of your form under Form Name . This is a required field. For example: Artifact, Document, and Media can all be form names. Enter the form's description within the blank text area under Description . This is where you describe the purpose of this form. You are limited to a maximum of 500 characters. After you are finished filling out the page, click the Create Form button. This will create and then bring you to your form. Note : At the bottom of this page you may also select any additional form adminstrators, individuals that will be able to modify the form you are creating. Administrators that are already a part of your project are automatically added (including yourself). Adding additional people will allow non-project adminstrator individuals to be able to modify this form. You can choose individuals from the dropdown menu, or you can type in a name to search the list. For more information, visit the Additional Form Administrators Guide .","title":"Creating a Form"},{"location":"forms/creating_a_multipage_form/","text":"Creating a Multipage Form A form allows you to organize fields in order to customize how your data is entered as a record . In some instances you may want to split your data entry into multiple sections. For instance, you may want information about the physical dimensions of an artifact entered into one section and its associated time period entered into another. Separating fields into multiple pages allows you to organize your form with these concepts in mind. Creating multiple pages In order to create multiple pages in a form you will need to create a form . This will initially provide you with a single page labeled (Your Form Name) Default Page . This default page will initially contain no fields. Soon, however, you may find yourself creating a large number of fields in an attempt to capture as much data as possible. In many cases, it may be better for the readability of your form to separate these fields into multiple pages based on their content. Follow these steps to create and organize new pages: Below the default page, press the Create New Form Page Here button. The first new page will appear below the default page, but you can add as many pages as you need for your data entry, including in between existing pages. A new Page will appear wherever you click to add a new page. You may also reorganize where your pages appear by clicking on the navigation arrow in the top left corner of each page. Clicking on the top arrow will switch that page with the page above it, and the bottom arrow it will switch the selected page with the page below it. You can rename pages by clicking on the title located at the top-center of the page, and typing in the new title. Moving Fields Between Pages You may create a new field within any page, or move a field from one page to another. You move fields between pages by clicking on the field and dragging it to the desired page: Click on the field you want to move. Drag the field with your mouse. Place the field in the desired page. This will automatically save in Kora.","title":"Creating a Multipage Form"},{"location":"forms/creating_a_multipage_form/#creating-a-multipage-form","text":"A form allows you to organize fields in order to customize how your data is entered as a record . In some instances you may want to split your data entry into multiple sections. For instance, you may want information about the physical dimensions of an artifact entered into one section and its associated time period entered into another. Separating fields into multiple pages allows you to organize your form with these concepts in mind.","title":"Creating a Multipage Form"},{"location":"forms/creating_a_multipage_form/#creating-multiple-pages","text":"In order to create multiple pages in a form you will need to create a form . This will initially provide you with a single page labeled (Your Form Name) Default Page . This default page will initially contain no fields. Soon, however, you may find yourself creating a large number of fields in an attempt to capture as much data as possible. In many cases, it may be better for the readability of your form to separate these fields into multiple pages based on their content. Follow these steps to create and organize new pages: Below the default page, press the Create New Form Page Here button. The first new page will appear below the default page, but you can add as many pages as you need for your data entry, including in between existing pages. A new Page will appear wherever you click to add a new page. You may also reorganize where your pages appear by clicking on the navigation arrow in the top left corner of each page. Clicking on the top arrow will switch that page with the page above it, and the bottom arrow it will switch the selected page with the page below it. You can rename pages by clicking on the title located at the top-center of the page, and typing in the new title.","title":"Creating multiple pages"},{"location":"forms/creating_a_multipage_form/#moving-fields-between-pages","text":"You may create a new field within any page, or move a field from one page to another. You move fields between pages by clicking on the field and dragging it to the desired page: Click on the field you want to move. Drag the field with your mouse. Place the field in the desired page. This will automatically save in Kora.","title":"Moving Fields Between Pages"},{"location":"forms/creating_fields/","text":"Creating Fields Fields are the metadata items that can be documented in a record . These can include catalog numbers, site names, item descriptions, images, archival documents, etc. Once you have created your form , you have the ability to add and organize your fields. Follow these steps to create a new field: After you have created your form, it will bring you to that form's page. Below the title, you will see a section labeled (Your Form's Name) Default Page . Click the Create New Field Here button. This will bring you to the New Field page. Here you will need to add your Field Name and the Description of the field. Then select your field type by clicking on the dropdown icon located on the right side of the box. Options include text, number, list, date, file, and specialty fields. To learn more about individual field types, visit the Understanding Field Types documentation. The second half of the New Field form lists seven options related to the searchability, viewability, and requirement of the field. If you would like to select one of the following options, click the circle on the left of the button. This will highlight the outline of the button in blue and show a checkmark in the circle. Required? Choose whether this field will be required when entering a record. This means that every record entered in this form will need to have this field type recorded before it is accepted. Searchable? Data in this field will be able to be analyzed in searches inside of Kora. Advance Searchable? Data in this field will be able to be analyzed in advanced searches inside of Kora. Externally Searchable? Data in this field will be analyzed in searches from outside of Kora. Viewable? Data in this field will be shown in all records belonging to this form. Viewable in Results? Data in this field will be shown in all search results within Kora when viewing and browsing records . Externally Viewable Data in this field will be shown in all searches, outside of Kora, containing records belonging to this form. Once you have completed your field form, click the blue Create Field button on the bottom of the page. You can continue adding new fields to your form from the form page. If you would like to re-organize your fields into multiple pages, visit the Creating a Multipage Form documentation. This guide will show you how to rearrange your fields within a page or move them to additional pages.","title":"Creating Fields"},{"location":"forms/creating_fields/#creating-fields","text":"Fields are the metadata items that can be documented in a record . These can include catalog numbers, site names, item descriptions, images, archival documents, etc. Once you have created your form , you have the ability to add and organize your fields. Follow these steps to create a new field: After you have created your form, it will bring you to that form's page. Below the title, you will see a section labeled (Your Form's Name) Default Page . Click the Create New Field Here button. This will bring you to the New Field page. Here you will need to add your Field Name and the Description of the field. Then select your field type by clicking on the dropdown icon located on the right side of the box. Options include text, number, list, date, file, and specialty fields. To learn more about individual field types, visit the Understanding Field Types documentation. The second half of the New Field form lists seven options related to the searchability, viewability, and requirement of the field. If you would like to select one of the following options, click the circle on the left of the button. This will highlight the outline of the button in blue and show a checkmark in the circle. Required? Choose whether this field will be required when entering a record. This means that every record entered in this form will need to have this field type recorded before it is accepted. Searchable? Data in this field will be able to be analyzed in searches inside of Kora. Advance Searchable? Data in this field will be able to be analyzed in advanced searches inside of Kora. Externally Searchable? Data in this field will be analyzed in searches from outside of Kora. Viewable? Data in this field will be shown in all records belonging to this form. Viewable in Results? Data in this field will be shown in all search results within Kora when viewing and browsing records . Externally Viewable Data in this field will be shown in all searches, outside of Kora, containing records belonging to this form. Once you have completed your field form, click the blue Create Field button on the bottom of the page. You can continue adding new fields to your form from the form page. If you would like to re-organize your fields into multiple pages, visit the Creating a Multipage Form documentation. This guide will show you how to rearrange your fields within a page or move them to additional pages.","title":"Creating Fields"},{"location":"forms/editing_a_form/","text":"Editing a Form A form is the mechanism by which you are able to generate records . It is similar to a form that you would fill out to catalog an artifact or object. It can contain multiple pages and various field types . A form will determine the types of metadata that is generated for a project. Each project can have multiple forms depending on the types of objects you are recording or who your target audience(s) are. You may want to edit a form you have previously created, either to change the name of the form, edit the description, make the form a preset, edit users and administrators of the form, or to delete the form. Follow the steps below to edit a form: Open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Scroll and choose the form you would like to edit, then click the button Edit Form Info . This will bring you to the Edit Form page. Here you can edit the Form Name and Description . You also have the option of setting this form as a Preset , which will allow you to apply this forms information and layout structure to a new form. Here you also have the option of editing form permissions. This is where you can add new administrators and users to your form. For more information, visit the Additional Form Administrators Guide and Adding Users to Forms Guide . Once you are done editing your form, click the Update Form button at the bottom of the page. Deleting a Form If you wish to delete a form follow the step-by-step instructions below: Open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Scroll and choose the form you would like to edit, then click the button: Edit Form Info . This will bring you to the Edit Form page. Scroll to the bottom of this page until you see the red trashcan button (located below the blue Update Form button). Click the trashcan button. A popup will appear asking you to confirm that you would like to delete the form. Click the red Delete Form button. A pop-up will appear on the top right corner of your screen notifying you that the form was successfully deleted.","title":"Editing a Form"},{"location":"forms/editing_a_form/#editing-a-form","text":"A form is the mechanism by which you are able to generate records . It is similar to a form that you would fill out to catalog an artifact or object. It can contain multiple pages and various field types . A form will determine the types of metadata that is generated for a project. Each project can have multiple forms depending on the types of objects you are recording or who your target audience(s) are. You may want to edit a form you have previously created, either to change the name of the form, edit the description, make the form a preset, edit users and administrators of the form, or to delete the form. Follow the steps below to edit a form: Open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Scroll and choose the form you would like to edit, then click the button Edit Form Info . This will bring you to the Edit Form page. Here you can edit the Form Name and Description . You also have the option of setting this form as a Preset , which will allow you to apply this forms information and layout structure to a new form. Here you also have the option of editing form permissions. This is where you can add new administrators and users to your form. For more information, visit the Additional Form Administrators Guide and Adding Users to Forms Guide . Once you are done editing your form, click the Update Form button at the bottom of the page.","title":"Editing a Form"},{"location":"forms/editing_a_form/#deleting-a-form","text":"If you wish to delete a form follow the step-by-step instructions below: Open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Scroll and choose the form you would like to edit, then click the button: Edit Form Info . This will bring you to the Edit Form page. Scroll to the bottom of this page until you see the red trashcan button (located below the blue Update Form button). Click the trashcan button. A popup will appear asking you to confirm that you would like to delete the form. Click the red Delete Form button. A pop-up will appear on the top right corner of your screen notifying you that the form was successfully deleted.","title":"Deleting a Form"},{"location":"forms/editing_fields/","text":"Editing Fields A form can contain a number of different field types which allow you to customize how data is entered into a record . In addition to field types, there are further customizations to fields that can be made in order to manipulate how data is entered. This documentation will cover how and where to edit your fields, and what options are available during this editing. Editing Fields from the Form Home Page There are a two ways to edit the fields that you've created , from the form page and within the field page. This section will cover how to edit your fields from the form home . From the form home, open up a field box by pressing the arrow button located in the right of all field boxes. The first field within your form pages should already be open. Once you have opened up a field, there are seven boxes that you are able to check that will give your field certain attributes. Which boxes you check should be automatically saved by Kora. See the section on Field Options Descriptions below for a better understanding of what these options do. The last option that you are able to take advantage of from the Form Home page is the ability to delete fields. Simply press the red trash can to delete any unwanted fields. You will be asked if you are sure if you want to delete this field in a pop-up. Editing in the Field Options Page You can edit additional information about the field by clicking on the name of the field or the field options button from the Form Home page. There are three sections available to edit from the Field Page : The Field Name , Alternative Name and Description can all be modified from whatever values were put in when creating the field . Clicking on the name of the field or the field options button. Each field type will then have its own specialized set of advanced options available in the next section. Go to the Understanding Field Types documentation to get a better understanding of how these advanced options work. The last section available when editing a form will be the same options available in step 2 of \"Editing Fields from the Form Home Page\". These are seven options which can be checked to give your field certain attributes. See the section on Field Options Descriptions below for a better understanding of what these options do. Click Update Field at the bottom of the page to save any changes that you've made while editing your fields. If you wish to delete the field, click on the red trash can at the very bottom of the page. You will be asked if you are sure if you want to delete this field. Field Options Descriptions There are seven options which can be edited from both the Form Home page, and the Field Options page. These are labeled as: Required , Searchable , Advanced Searchable , Externally Searchable , Viewable , Viewable in Results , and Externally Viewable . Required : checking the Required option will force anybody creating a record for this form to fill out this field. A value will have to be entered in order for Kora to accept the record, or a new value will have to be entered if a default value is deleted. Searchable : checking the Searchable option will allow Kora to see any data that is entered into this field when conducting any searches . Advanced Searchable : checking the Advanced Searchable * option will allow Kora to search for any data entered into this field when conducting advanced searches. Externally Searchable : checking the Externally Searchable option will allow programs which have access to Kora's API to search for data located within this field in records. This is especially useful when you have a website that you want to be able to pull data from KORA. Viewable : checking the Viewable option will make this field appear when you are creating or viewing a record with this field. This may come in use if you are unsure of a particular field you have created. You may make it unviewable to those creating records until you have time to come back to it in the future. Viewable in Results : Checking this box affects only how the data from this field shows up when browsing or searching records . This option is incredibly useful for managing the readability of your records in Kora. Instead of having 20 fields of data show up for each record you search for, you are able to narrow it down to fields such as name, id, or whatever is useful to you. It is important to note that this option will not affect whether or not this field is searchable, and all fields will be viewable from the full record page. Externally Viewable : checking the Externally Viewable option will allow programs which have access to Kora's API to view the data located within this field in your Kora records. This is especially useful when you have a website that you want to be able to pull data from KORA.","title":"Editing Fields"},{"location":"forms/editing_fields/#editing-fields","text":"A form can contain a number of different field types which allow you to customize how data is entered into a record . In addition to field types, there are further customizations to fields that can be made in order to manipulate how data is entered. This documentation will cover how and where to edit your fields, and what options are available during this editing.","title":"Editing Fields"},{"location":"forms/editing_fields/#editing-fields-from-the-form-home-page","text":"There are a two ways to edit the fields that you've created , from the form page and within the field page. This section will cover how to edit your fields from the form home . From the form home, open up a field box by pressing the arrow button located in the right of all field boxes. The first field within your form pages should already be open. Once you have opened up a field, there are seven boxes that you are able to check that will give your field certain attributes. Which boxes you check should be automatically saved by Kora. See the section on Field Options Descriptions below for a better understanding of what these options do. The last option that you are able to take advantage of from the Form Home page is the ability to delete fields. Simply press the red trash can to delete any unwanted fields. You will be asked if you are sure if you want to delete this field in a pop-up.","title":"Editing Fields from the Form Home Page"},{"location":"forms/editing_fields/#editing-in-the-field-options-page","text":"You can edit additional information about the field by clicking on the name of the field or the field options button from the Form Home page. There are three sections available to edit from the Field Page : The Field Name , Alternative Name and Description can all be modified from whatever values were put in when creating the field . Clicking on the name of the field or the field options button. Each field type will then have its own specialized set of advanced options available in the next section. Go to the Understanding Field Types documentation to get a better understanding of how these advanced options work. The last section available when editing a form will be the same options available in step 2 of \"Editing Fields from the Form Home Page\". These are seven options which can be checked to give your field certain attributes. See the section on Field Options Descriptions below for a better understanding of what these options do. Click Update Field at the bottom of the page to save any changes that you've made while editing your fields. If you wish to delete the field, click on the red trash can at the very bottom of the page. You will be asked if you are sure if you want to delete this field.","title":"Editing in the Field Options Page"},{"location":"forms/editing_fields/#field-options-descriptions","text":"There are seven options which can be edited from both the Form Home page, and the Field Options page. These are labeled as: Required , Searchable , Advanced Searchable , Externally Searchable , Viewable , Viewable in Results , and Externally Viewable . Required : checking the Required option will force anybody creating a record for this form to fill out this field. A value will have to be entered in order for Kora to accept the record, or a new value will have to be entered if a default value is deleted. Searchable : checking the Searchable option will allow Kora to see any data that is entered into this field when conducting any searches . Advanced Searchable : checking the Advanced Searchable * option will allow Kora to search for any data entered into this field when conducting advanced searches. Externally Searchable : checking the Externally Searchable option will allow programs which have access to Kora's API to search for data located within this field in records. This is especially useful when you have a website that you want to be able to pull data from KORA. Viewable : checking the Viewable option will make this field appear when you are creating or viewing a record with this field. This may come in use if you are unsure of a particular field you have created. You may make it unviewable to those creating records until you have time to come back to it in the future. Viewable in Results : Checking this box affects only how the data from this field shows up when browsing or searching records . This option is incredibly useful for managing the readability of your records in Kora. Instead of having 20 fields of data show up for each record you search for, you are able to narrow it down to fields such as name, id, or whatever is useful to you. It is important to note that this option will not affect whether or not this field is searchable, and all fields will be viewable from the full record page. Externally Viewable : checking the Externally Viewable option will allow programs which have access to Kora's API to view the data located within this field in your Kora records. This is especially useful when you have a website that you want to be able to pull data from KORA.","title":"Field Options Descriptions"},{"location":"forms/exporting_a_form/","text":"Exporting a Form Exporting a form allows you to save the form as a .kForm file onto your computer. Another benefit of exporting a form is that it allows you to import that form into another Kora project , instead of having to recreate the form and its fields . Follow the steps below to export a form: Navigate to the form you would like to export. Click the Form Name in the menu bar to open a dropdown menu. At the bottom of this dropdown menu, click the Export Form option. This will automatically download the form onto your computer as a .kForm file type.","title":"Exporting a Form"},{"location":"forms/exporting_a_form/#exporting-a-form","text":"Exporting a form allows you to save the form as a .kForm file onto your computer. Another benefit of exporting a form is that it allows you to import that form into another Kora project , instead of having to recreate the form and its fields . Follow the steps below to export a form: Navigate to the form you would like to export. Click the Form Name in the menu bar to open a dropdown menu. At the bottom of this dropdown menu, click the Export Form option. This will automatically download the form onto your computer as a .kForm file type.","title":"Exporting a Form"},{"location":"forms/field_value_presets/","text":"Field Value Presets Field Value Presets are predefined field options that can be used repeatedly across all projects and forms. For example, \"Language\" and \"Country\" fields will consistently have the same options available across multiple projects. Using a Field Value Preset for languages allows you to easily incorporate the same controlled vocabulary every time you use this category in a form. Navigating to the Field Value Presets Page Navigating to Field Value Presets can take place from either the dashboard or from a project's homepage. From the dashboard, you are able to navigate to the field value presets page from a project block using the Quick Action icon. Alternatively, you may select Field Value Presets from the project homepage using the Kora menu. Either of these options will bring you to the field value presets page where you can create or edit the predefined options for fields across all projects and forms Field Value Preset Types There are three levels of availability for field value presets: project, shared and stock. Selecting the appropriate tab on the field value presets tab will organize the presets into their type of availability. The availability of field value presets is characterized in the following ways: Project presets will be available for the project for which the field value preset was created. Shared presets will be available across multiple projects. Stock presets are field value presets provided by us, that can be used and edited by administrators in any kora installation. The following stock presets are always originally available: URL_URI : this regex provides a pattern that helps with the entering of URLs. Boolean : Provides True or False options for a field. Countries : Provides a list of all possible countries for a field. Languages : Provides a list of languages for a field US States : Provides a list of all states located within the United States of America. Creating Field Value Presets There are two types of field value presets you can create: a regex preset or a list preset. Regex presets allow fields to check for a pattern that will accept certain types of field entries. List presets, on the other hand, allow predetermined list options to be used as field options. To create a field value preset, follow these steps: Click the Create a New Preset on the Field Value Presets page. This will bring you to the page for creating field value presets. You may start by entering a name for your new preset. Next select the Field Value Preset Type . You may select either a regex or list preset. If you are building a regex preset, then a text box will appear asking you to provide the necessary text pattern you are looking to search for. If you are building a list preset, then a box will appear asking you to enter the options that you want to be available for this preset option. Once you have created the desired characteristics for your field value presets, you have the option to make this preset available to all other projects within your kora installation. To do so, select the Select to share with all projects checkbox. Click Create Field Value Preset to create your field Value Preset!","title":"Using Field Value Presets"},{"location":"forms/field_value_presets/#field-value-presets","text":"Field Value Presets are predefined field options that can be used repeatedly across all projects and forms. For example, \"Language\" and \"Country\" fields will consistently have the same options available across multiple projects. Using a Field Value Preset for languages allows you to easily incorporate the same controlled vocabulary every time you use this category in a form.","title":"Field Value Presets"},{"location":"forms/field_value_presets/#navigating-to-the-field-value-presets-page","text":"Navigating to Field Value Presets can take place from either the dashboard or from a project's homepage. From the dashboard, you are able to navigate to the field value presets page from a project block using the Quick Action icon. Alternatively, you may select Field Value Presets from the project homepage using the Kora menu. Either of these options will bring you to the field value presets page where you can create or edit the predefined options for fields across all projects and forms","title":"Navigating to the Field Value Presets Page"},{"location":"forms/field_value_presets/#field-value-preset-types","text":"There are three levels of availability for field value presets: project, shared and stock. Selecting the appropriate tab on the field value presets tab will organize the presets into their type of availability. The availability of field value presets is characterized in the following ways: Project presets will be available for the project for which the field value preset was created. Shared presets will be available across multiple projects. Stock presets are field value presets provided by us, that can be used and edited by administrators in any kora installation. The following stock presets are always originally available: URL_URI : this regex provides a pattern that helps with the entering of URLs. Boolean : Provides True or False options for a field. Countries : Provides a list of all possible countries for a field. Languages : Provides a list of languages for a field US States : Provides a list of all states located within the United States of America.","title":"Field Value Preset Types"},{"location":"forms/field_value_presets/#creating-field-value-presets","text":"There are two types of field value presets you can create: a regex preset or a list preset. Regex presets allow fields to check for a pattern that will accept certain types of field entries. List presets, on the other hand, allow predetermined list options to be used as field options. To create a field value preset, follow these steps: Click the Create a New Preset on the Field Value Presets page. This will bring you to the page for creating field value presets. You may start by entering a name for your new preset. Next select the Field Value Preset Type . You may select either a regex or list preset. If you are building a regex preset, then a text box will appear asking you to provide the necessary text pattern you are looking to search for. If you are building a list preset, then a box will appear asking you to enter the options that you want to be available for this preset option. Once you have created the desired characteristics for your field value presets, you have the option to make this preset available to all other projects within your kora installation. To do so, select the Select to share with all projects checkbox. Click Create Field Value Preset to create your field Value Preset!","title":"Creating Field Value Presets"},{"location":"forms/importing_a_form/","text":"Importing a Form Importing a form allows you to import a .kForm file from your computer into a Kora Project. You can obtain a .kform file from another project by exporting a form . Importing a form allows you to use a previously created form in a new or different project without having to recreate the form and its fields . Follow the steps below to import a form: Open the project you would like to import your form into. From that project's page, click the project name in the menu bar to open the dropdown options. Click the Import Form Setup option. In the Import Form Setup page, either drag and drop your form file from you computer into the box or choose the Select the Form File here option to choose it through a file browser. Click the Upload Form File button. Under the Form Information section, you have the option to enter a form name and description, or you can leave these options blank to use the name and description from the original form. Press the Import Form & Information button. This will automatically upload the form into your project.","title":"Importing a Form"},{"location":"forms/importing_a_form/#importing-a-form","text":"Importing a form allows you to import a .kForm file from your computer into a Kora Project. You can obtain a .kform file from another project by exporting a form . Importing a form allows you to use a previously created form in a new or different project without having to recreate the form and its fields . Follow the steps below to import a form: Open the project you would like to import your form into. From that project's page, click the project name in the menu bar to open the dropdown options. Click the Import Form Setup option. In the Import Form Setup page, either drag and drop your form file from you computer into the box or choose the Select the Form File here option to choose it through a file browser. Click the Upload Form File button. Under the Form Information section, you have the option to enter a form name and description, or you can leave these options blank to use the name and description from the original form. Press the Import Form & Information button. This will automatically upload the form into your project.","title":"Importing a Form"},{"location":"forms/navigating_to_a_form/","text":"Navigating to a Form You may need to navigate to a form to begin creating a record, to edit a form, or to add users to a form, among others. There are several ways to do this. Navigating to a Form from Your Dashboard From your dashboard, choose the project that houses the form you are navigating to. Click on the name of that project. Within your project, scroll through the list of the forms until you find the one you would like to select. You can either click on the name of the form, or click Go to Form . Both of these options will bring you to that form. Navigating to a Form from Your Projects List From your projects list, scroll and find the project that houses the form you are navigating to. Click on the name of that project. Within your project, scroll through the list of the forms until you find the one you would like to select. You can either click on the name of the form, or click Go to Form . Both of these options will bring you to that form. Navigating to a Form using the Search Function When you are logged into Kora, you have the ability to search for any form by name using the search bar function. Click the magnifying glass or search icon in the top right corner of your screen. This will make a grey search box appear below the blue menu. Type your form name into the search box. If the form you would like to navigate to appears in a list below the search box, click the form name. If it does not appear, press enter on your keyboard. This will bring you to the Search Kora page. Here you can adjust the keyword(s) entered and gives you the ability to select specific project(s) to filter the search results (if needed). Results of your search will be listed below the blue Search button. It will list results of your search by presence as a Record , Form , Field , and Project . Click on the Forms option to show the list of forms that match your search criteria. Choose the form that you would like to navigate to by clicking on the form name.","title":"Navigating to a Form"},{"location":"forms/navigating_to_a_form/#navigating-to-a-form","text":"You may need to navigate to a form to begin creating a record, to edit a form, or to add users to a form, among others. There are several ways to do this.","title":"Navigating to a Form"},{"location":"forms/navigating_to_a_form/#navigating-to-a-form-from-your-dashboard","text":"From your dashboard, choose the project that houses the form you are navigating to. Click on the name of that project. Within your project, scroll through the list of the forms until you find the one you would like to select. You can either click on the name of the form, or click Go to Form . Both of these options will bring you to that form.","title":"Navigating to a Form from Your Dashboard"},{"location":"forms/navigating_to_a_form/#navigating-to-a-form-from-your-projects-list","text":"From your projects list, scroll and find the project that houses the form you are navigating to. Click on the name of that project. Within your project, scroll through the list of the forms until you find the one you would like to select. You can either click on the name of the form, or click Go to Form . Both of these options will bring you to that form.","title":"Navigating to a Form from Your Projects List"},{"location":"forms/navigating_to_a_form/#navigating-to-a-form-using-the-search-function","text":"When you are logged into Kora, you have the ability to search for any form by name using the search bar function. Click the magnifying glass or search icon in the top right corner of your screen. This will make a grey search box appear below the blue menu. Type your form name into the search box. If the form you would like to navigate to appears in a list below the search box, click the form name. If it does not appear, press enter on your keyboard. This will bring you to the Search Kora page. Here you can adjust the keyword(s) entered and gives you the ability to select specific project(s) to filter the search results (if needed). Results of your search will be listed below the blue Search button. It will list results of your search by presence as a Record , Form , Field , and Project . Click on the Forms option to show the list of forms that match your search criteria. Choose the form that you would like to navigate to by clicking on the form name.","title":"Navigating to a Form using the Search Function"},{"location":"forms/searching_for_a_form/","text":"Searching for a Form As your digital repository grows and expands, you may find yourself forgetting where you put a form . Or maybe you are unfamiliar with a colleagues repository and need to find some of the records they've created for a particular project. Kora will allow you to search for these forms to find these records in no time. The documentation on Navigating to a Form is useful for when you know what project the form should be in, but sometimes you may want to search across Kora to find the exact form that you need. There are several ways to do this. The main difference is whether you want to search for a form across an entire installation, or if you are looking for a form within a particular project. Searching Across a Kora Installation At the navigation bar at the top of the page, is a magnifying glass icon. No matter what page you are on, this navigation bar and icon should be available, clicking on it will allow you to search for any forms within the Kora Installation that you have access to. Follow these steps to search for a form using this method: Click on the magnifying glass icon in the top right corner within the navigation bar. A search bar will appear which will allow you to enter keywords found within the form title you are searching for. If you are able to enter the name of your form, the option to Go to Form will be made available under the search bar. Simply click on your form name to go to that form. However, sometimes you will not know the exact name of the form. In these cases, if you get close to the spelling of the form, Kora may still be able to provide options for you to jump to. If Kora still is not able to find your form in the initial typing into the search bar, then you will have to click the right-facing arrow in the search bar to perform a proper search. This search will examine records, forms, fields and projects for any results which may match your search. In this case, by clicking on the Forms() tab, you'll be able to see which forms match your search. Searching for a Form within a Project If you know what project a form may be in, it might be easier to search within a particular project for a form. There are a couple of ways to do this. The first option is to use the Find a Form search option located on the Project Home page. Navigate to the project you want to search and click on the Find a Form search bar. Entering the title of your form will eliminate all forms that do not match its spelling You are able to use a fewer amount of characters to broaden the possible forms that you will find. The other option for searching for a form involves jumping to a form using the navigation bar. This will create a list of forms that you can peruse to see if you find the form that you are looking for. Go to the arrow next to your project name in the navigation bar, or open up the dropdown menu to the very right. Select Jump to Form + and scroll through the possible forms. After locating your form, click on the name of your form to jump to that form.","title":"Searching for a Form"},{"location":"forms/searching_for_a_form/#searching-for-a-form","text":"As your digital repository grows and expands, you may find yourself forgetting where you put a form . Or maybe you are unfamiliar with a colleagues repository and need to find some of the records they've created for a particular project. Kora will allow you to search for these forms to find these records in no time. The documentation on Navigating to a Form is useful for when you know what project the form should be in, but sometimes you may want to search across Kora to find the exact form that you need. There are several ways to do this. The main difference is whether you want to search for a form across an entire installation, or if you are looking for a form within a particular project.","title":"Searching for a Form"},{"location":"forms/searching_for_a_form/#searching-across-a-kora-installation","text":"At the navigation bar at the top of the page, is a magnifying glass icon. No matter what page you are on, this navigation bar and icon should be available, clicking on it will allow you to search for any forms within the Kora Installation that you have access to. Follow these steps to search for a form using this method: Click on the magnifying glass icon in the top right corner within the navigation bar. A search bar will appear which will allow you to enter keywords found within the form title you are searching for. If you are able to enter the name of your form, the option to Go to Form will be made available under the search bar. Simply click on your form name to go to that form. However, sometimes you will not know the exact name of the form. In these cases, if you get close to the spelling of the form, Kora may still be able to provide options for you to jump to. If Kora still is not able to find your form in the initial typing into the search bar, then you will have to click the right-facing arrow in the search bar to perform a proper search. This search will examine records, forms, fields and projects for any results which may match your search. In this case, by clicking on the Forms() tab, you'll be able to see which forms match your search.","title":"Searching Across a Kora Installation"},{"location":"forms/searching_for_a_form/#searching-for-a-form-within-a-project","text":"If you know what project a form may be in, it might be easier to search within a particular project for a form. There are a couple of ways to do this. The first option is to use the Find a Form search option located on the Project Home page. Navigate to the project you want to search and click on the Find a Form search bar. Entering the title of your form will eliminate all forms that do not match its spelling You are able to use a fewer amount of characters to broaden the possible forms that you will find. The other option for searching for a form involves jumping to a form using the navigation bar. This will create a list of forms that you can peruse to see if you find the form that you are looking for. Go to the arrow next to your project name in the navigation bar, or open up the dropdown menu to the very right. Select Jump to Form + and scroll through the possible forms. After locating your form, click on the name of your form to jump to that form.","title":"Searching for a Form within a Project"},{"location":"forms/understanding_field_types/","text":"Understanding Field Types Each form has to ability to add any number of different fields across multiple pages . This includes text, number, list, data, file and specialty fields. Understanding what these field types bring to the table will allow you to create spaces for data entry that are relevant to your digital repository. Creating a field is the first step towards understanding field types. After choosing to create a field and selecting the Field Type drop-down menu, you'll find the field type options available. These options will determine what types of data are entered into a record . The headings below will discuss the field types by their category: text, number, list, date, file, and specialty. After selecting your field type, you can click on Show Advanced Field Options . This is where you will be able to view many of the options for customizing your fields discussed below. Text Fields Text field are fields in which you enter text. There are two types of text field: text field and rich text field . Text A text field allows users to enter any plain text into a record. This can include characters, numbers, and symbols from your keyboard. The advanced field options available include: a Default value, a Regex pattern and whether or not to make the field Multilined . Default : inputting a default value for a text field will create a value that is always present in that field when creating a record. This value can be deleted and replaced, but it will be initially present for every record containing this text field . Regex : A Regex pattern allows you to customize how a text field is searched for within Kora. For instance, if a word has multiple ways of being spelled, you can specify the different ways that a text field may be entered: the regular expression seriali[sz]e matches both \"serialise\" and \"serialize\". There are also much more complex regex expressions you can learn how to write. Multilined? : The multilined option allows you to enter more than one line of plain text, by clicking the enter button. There is no set limit to the number of lines you can enter, and a scroll bar will appear if the lines appear out of the text field's view. Rich Text A rich text field allows you write text that can be stylized and edited with the CKE editor. There are numerous options available in this editor to manipulate text. Users will be able to italicize, bold, underline, and strikethrough their text. They can also insert tables and images headings, bulleted lists and numbered lists into text. Users are then able to run spellcheck, insert links, and change other aspects of their text. The user guide for the CKE editor can be found here (They do not have a user guide up and running yet) . There are no advanced options available for this field besides the creation of a default value. Default : Default text can be entered into this field. The entered text will always be present in that field when creating a record. This value can be deleted and replaced, but will always be initially present for every record containing this rich text field . Number Fields Number fields allows you to enter numbers. Users may enter the numbers manually into this field using a keyboard. Alternatively, users are able to use arrow keys or scroll with their mouse wheel to move the number value up or down by 1. There are two types of number fields: integer field and float field . Integer Integer fields use whole numbers as their values. These are numbers without decimal points, and they can include negative numbers. If you attempt to enter a value that is not a whole number, then the value will not appear in the record. The advanced field options available include: a Default value, a Minimum Value , a Max Value and Unit of Measurement . Default : A default number can be entered into this field. The entered number will always be present in that field when creating a record. This value can be deleted and replaced, but will always be initially present for every record containing this integer field . Minimum Value : This specifies the lowest value that can be entered for this field. If a value is entered that is lower than this minimum value, Kora will not accept the minimum value. The record will either not be created, or it will shift to the minimum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified minimum value. Max Value : This specifies the highest value that can be entered for this field. If a value is entered that is higher than this Max value, Kora will not accept the maximum value. The record will either not be created, or shift to the maximum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified max value. Unit of Measurement : A unit of measurement can be specified for the integer value. Any plaintext value can be entered and will show up to the field name in parentheses when entering the record. Float Float fields can take in any real numbers as their value. These real numbers can include integers and negative numbers. The advanced field options are exactly the same as the previous section and include: a Default value, a Minimum Value , a Max Value and Unit of Measurement . Default : A default number can be entered into this field. The entered number will always be present in that field when creating a record. This value can be deleted and replaced, but will always be initially present for every record containing this float field . Minimum Value : This specifies the lowest value that can be entered for this field. If a value is entered that is lower than this minimum value, Kora will not accept the minimum value. The record will either not be created, or it will shift to the minimum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified minimum value. Max Value : This specifies the highest value that can be entered for this field. If a value is entered that is higher than this Max value, Kora will not accept the maximum value. The record will either not be created, or shift to the maximum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified max value. Unit of Measurement : A unit of measurement can be specified for the float value. Any plaintext value can be entered and will show up to the field name in parentheses when entering the record. List Fields The Lists field allow users to create lists of data or select list options from a controlled vocabulary. Users are also able to generate a list, or create a list of objects associated with other objects. Perhaps the greatest strength of lists is the ability to force users to enter in controlled vocabulary for data fields. Controlled vocabulary refers to the use of a specific terms to refer to your data. If you only have three possible options for a particular value, then that makes it easier to characterize and analyze the data. You don't have to worry about the particular differences in how people describe objects or spelling errors. The trade-off is a loss of nuance. It is up to form creators to decide which goals are important to them. Their are four types of list fields available: list field , multi-select list , generated list and combo list . Note, if your list item contains any commas you must encapsulate the entire list item within quotation marks. List A list field is the most straightforward list option available. You may create a list of possible values (a.k.a a controlled vocabulary) from which users may select one value for the data field. A list field will appear as a dropdown menu from which you can select one of these values when creating a record. Many of the options mentioned here are available for all lists and so will refer back to this section. So, when creating any list you may follow these steps in the advanced options to create that list: Under list options, enter your possible values in the green box labeled Type here and hit the enter key or \"ADD\" to add a new list option . From there hit enter or press the \"ADD\" button to add your value to the list. Your new value (\"Option 1\" in the image below) will be added to the list options above the green box you entered your data into. You can continue to add values in the bottom green box which will appear in the order created. You may also Copy All List Options or Delete All List Options . Copying list options will put all list options into your clipboard, separated by commas. Deleting all list options will delete all the values you have entered into a list. You will receive a notification asking you to confirm that you really do want to delete all your list options in a pop-up. You are able to move your list options around by clicking on the arrows next to the list options you have created. Clicking on an up arrow will switch that list option with the option below it, while clicking on a down arrow will switch that list option with the option below it. You may also click and drag a list option to a different part of the list. Once you have added all your list options, you are able to save your controlled vocabulary as preset for other lists by pressing the Create a New Value Preset button. You will have to give your list a name and decide if you want forms across your project to be able to use your preset list. You may also select Use a Value Preset for these List Options to select any preset lists that have been created and made available. You may also select from a selection of default preset lists made available across Kora which includes: Boolean, Country, Languages, and U.S States. At the bottom of list options, you will see that you can specify default values for your list. For the list field type, you may only specify one default value. In other multi-select, generated, and combo lists, you are able to specify more than one value. The default value for any list can be changed by the person making the record, but the default value will always be initially chosen when creating a record. Multi-Select List A multi-select list field creates a list of possible values (a.k.a. a controlled vocabulary) from which users may select multiple values for the data field. This field follows the same setup as a list field (see steps 1-5 for list field above), but the end result is the ability to select multiple list options from a single list. You may select list options from a multi-select list by clicking them in the drop-down menu. You may also remove selected items by clicking the x * next to the field option. Generated List A generated list enables users to create and edit a list while creating a record. Users enter their own list options as if they were creating their own list field. This means that there are steps to create a generated list in a record, and steps to create a generated list in a form. The process of creating a generated list in a record is outlined in steps 1-3 of the list field section above. Users will enter, delete and rearrange their list options in the same way that list options are created when making a list field. Creating a generated list field in a form provides you with similar advanced options as other lists (steps 1-5 in the list field above), but there are a couple of key differences. First, there is the ability to add a regex expression, which can modify how Kora searches for your field. Secondly, it is important to note that any list options that you add in the advanced options will not show in the generated list that appears when creating a record. That means no default values can be specified or already existing list options added. Users will always have to generate the list from scratch when using a generated list. Combo List A combo list field type allows users to select values from two different field types and associate those values with each other in one list. It is the only list field option that does not follow the steps outlined in the list field above. Instead, follow these steps to create a combo list: In the advanced options of a combo list, you will find the boxes shown in the image below available. The two boxes on the left named Combo List Field Type allow you to select the field types you want for this list. You may select any field type except for File Fields. The boxes on the right named Combo List Field Name allow you to give names to those fields. Here is an example setup in the advanced options. This combo list will use text and date fields to combine the names and birthdays of individuals into a single list. Note that you are unable to edit the advanced options of these individual fields. You Combo List will appear empty when creating a record as shown below. To add paired values to this list, click on the Add New Value button. The individual options for the field types you have selected will be available when adding a new value. In name and birthday example from the previous step, a text field is available for 'Name', while a date field is available for 'Birthday'. Click Create Combo Value to add the desired values to the list. You may add any number of combined values. Date Fields Date fields allow users to enter temporal data when creating records. There are three field types available for these purposes: Date , Date Time and Historical Date . Date The date field allows users to enter a month, day and year. The advanced field options available include: Default month, day and year; Date Format , Start Year , End Year and the ability to specify the current year as the start or end year. Default : a default month, day and/or year can be chosen for the date field type . Default dates are changeable, but will appear initially every time a record using that date field is created. Date Format : use this option to rearrange the order of how the month, date and year appear when making the record. Start Year : this option allows you to specify the earliest year available for users to enter. Users will not be able to enter dates before the start year into records. End Year : this option allows you to specify the latest year that is available for users to enter. Users will not be able to enter dates after this end year into records. Use Current Year as Start Year : if you only want users to be able to enter recent dates, you can select the current year as the start year for dates to be entered. Use Current Year as End Year : if you want users to be able to enter dates up to the current year, select this option to make dates up to this year available. Date Time The date time field type provides everything that the date field type provides, plus time. The Advanced options for a date time field also follow this same logic. Default hour, minutes and seconds are the only advanced option which differ for this field type and they are outlined in the image below. Check out the section on the date field type above to learn more about the other advanced options Default : the date time field type gives the additional option to specify a default hour, minute and second. Default times are changeable, but will appear initially every time a record using that date time field is created. Historical date A historical date field type provides everything that the date field type provides, plus the ability to add prefixes and calendar notation to the dates. The advanced options for this field type are similar to the date time field, except a few advanced options: Select Prefix(Optional) , Select Calendar/Date Notation , Show Prefixes? and Show Calendar/Date Notation? . The advanced options unique to the historical date field type are outlined below. Check out the section on the date field type above to learn more about the other advanced options. Select Prefix(Optional) : prefixes are selected by clicking the circle to the left of their name. The prefixes available include circa, pre and post. Circa refers to approximate or estimated dates. Pre refers to times before the specified date. Post refers to times after the date. You may only select one prefix. Select Calendar/Date Notation : calendar and date notation are selected by clicking the circle to the left of their name. CE refers to common era; BCE refers to before common era, BP refers to before present (oftentimes this means the year 1950 CE); and KYA years often refers to thousands of years before present. You must select one calendar/date notation. Show Prefixes? : If you want your selected prefix to appear when creating and viewing records, then select 'yes' from the drop-down menu. Show Calendar/Date Notation? if you want your selected notation to appear when creating and viewing records then select 'yes' from the drop-down menu. File Fields File Fields allow you to create fields were users can upload files to a record. This includes documents, images, audio, video and 3D models. The image below shows what a typical file field looks like. There will be a title, a space to upload your file, and a description below. The File Field Types are: Documents , Gallery , Playlist , Video and 3D-Model . Note: When you are uploading any files, there are some restrictions on filenames. They are limited to a-z , A-Z , 0-9 , . , - and _ . No spaces are permitted in filenames. Documents The documents file field creates a space for document files to be uploaded. Since there are multiple types of files that documents can come in, you must select the document file types that you want to upload. You can customize the types of files you want uploaded and how you want them uploaded with the advanced options available: Max File Size (kb) ; Max File Amount ; and Allowed File Types (MIME): . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types (MIME): : this is were you will select the types of files that you want to accept for a document upload. You may want only .pdf or .png files to be uploaded. Due to the wide variety of formats that documents typically come in, no default values are selected for document uploads and there are a wide variety of file types available for selection. This differs from other file fields in because you must choose a document type for it to be possible to upload files. Gallery The gallery file field creates a data field which allows users to upload images. Standard file formats are already selected for this field and include: .jpg, .gif, .png, and .bmp image files. The advanced options available are similar to other file fields: Max File Size (kb) ; Max File Amount ; and Allowed File Types . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types: : the file types provided are already optimized for typical image file formats including: jpg, gif and png and bmp image files. These are the only file types you may choose from. Playlist The playlist file field creates a space for users to upload audio files when making a record. Standard file formats are already selected for this field and include: MP3 and WAV audio files. The advanced options available are similar to other file fields: Max File Size (kb) ; Max File Amount ; and Allowed File Types . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types : the file types provided are already optimized for typical audio file formats including: MP3 and WAV audio files. These are the only file types you may choose from. Video The video file field creates a space for users to upload video files when making a record. There is only one standard file formats selected for this field which is MP4. The advanced options available are similar to other file fields: Max File Size (kb) ; Max File Amount ; and Allowed File Types . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types: : the MP4 file type provided is the only file format available for videos. This is the only file types you may choose from. 3D model The 3D model file field creates a space for users to upload 3D models into a record. There are standard file formats already selected for 3D models which include: OBJ, STL, JPEG Texture, PNG Texture, and other. The advanced options available are similar to other file fields, but include some notable differences: Max File Size (kb) , Allowed File Types , Model Color , Background Color One , and Background Color Two . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Allowed File Types: : the file types provided are already optimized for typical 3D model file formats including: OBJ, STL, JPEG Texture, PNG Texture and other. Model Color : allows you to choose the color of the 3D Model Background Color One : allows you to choose the first background color of the model environment Background Color Two : allows you to choose the second background color of the model environment. Specialty Fields There are a number of different Specialty Fields which serve specific functions for form creators. These functions allow users to create true or false options, describe geographic location and associate records with other records. These field types are referred to respectively as: Boolean , Geolocator , and Associator fields. Boolean The boolean field refers to a true or false field option. You are able to make a title and description for a boolean field, which the person entering data may check or uncheck by clicking on the circle. You may automatically have the boolean field selected by checking the default option in the advanced options of the boolean field you are creating or editing. Geolocator The geolocator field allows users to enter geographic data through the use of latitude/longitude (lat/long), and address data. When entering new geolocator data, users enter the name of the new location, what type of geographic data they are entering (lat/long or address) and then the actual data. This field provides three advanced options when customizing this field: Default Locations , Map Display and Displayed Data . Default Locations : this advanced field option allows you to enter default locations for a geolocator field. You will enter the location name, location type and data in the same way as a new record. The image below shows the pop-up that appears for entering new locations into a geolocator field. Map Display : This advanced option allows you to display a map with points using entered location data. The points will appear on an interactive map which will automatically zoom to fit all of your points. Viewing records with map display active will show this map when examining records. If map display is inactive then no interactive map will be available for locations entered using Geolocator data. Instead, the raw text for the name of the location, and it's location data will be displayed. Displayed Data : If you choose not to display a map using the Map Display option, then Kora will display your data as text. There are two types of location data that you are able to display when viewing records: Lat Long and Address . Displaying Lat Long will display the coordinates of your location using latitude and longitude coordinates. Likewise, selecting Address will display the address of your locations. If a record provides latitude and longitude, Kora will still be able to look up an associated address to display if that is the option that is chosen. The opposite is also true. Associator An associator field creates connections between records. Let's say, for example, that you want to create a form that keeps track of people associated with a museum project. This could include supervisors, volunteers, archaeologists, etc. Individual records could be created with their names and roles. Now let's say you want to create another form for objects associated with this project. You could create records which include data on these objects and the people involved with the curation of those objects. This could potentially be a lot of data reentry, however. One solution Kora offers for this hypothetical problem is the ability to associate the object records from the one form with the people records from the other form. When an association is created within a record, the associator field displays your selected, associated record as a clickable link within that original record. This link will bring you to the record page for that associated record. The possible association are extremely flexible, in that you are able to associate records with other records from the same form or even records from another project's form. In order to do this, however, you will need to give forms the ability to search each other through Form association permissions . What follows are directions for: creating association permissions between forms; setting up the search configurations for an associator field, and how to use an associator field. Associator Permissions Follow these steps to set up associator permissions: First, you will want to navigate to the desired form that you want to associate other records with. From there you will have to select Association Permissions from either dropdown menu shown below. This will bring you to the Form Associations Page which allows you to grant association access with other forms. If you have administrative access to the forms that you want to associate, select Create a New Form Association . A new box will appear asking you Create a New Form Association . The dropdown menu will initially ask you to select a form. Forms will be displayed here from any project you have access to through a \"project name - form name\" format. Select the form you want to create an association with and click Create a New Form Association . Forms that are allowed to be associated with will be listed at the bottom of the Form Associations Page . If you do not have administrative permissions to a form, you may select the Request Form Access tab. Clicking Request Form Access on that page will allow you to select a form, after which Kora will send an email to all administrators requesting access to form associations. Association Search Configuration Now that you have the correct association permissions set up for your form, you can create an association field that will be able to search records from other forms. In the directions below, we will be creating an associator field that is able to search for records through another form called \"Form 2\". These setup steps will work for any associator field: First go to the advanced options for the associator when creating the field . There you will find the Association Search Configuration , which will have the forms that you are able to search through available to be checked off. Once you have selected the form that you want this field to associate with, you will have the option to select preview values. Preview values will show any values from the selected fields you choose when searching for records. If you do not select a preview value, then the internal Kora Identification (KID) will be the only value that is shown when searching for records with this associator. It is recommended that you choose a field such as \"name\", \"id\", etc. that will allow you to more easily identify what record you are looking at. After your search configuration is set up, you can create a default value for the associator field. Go to the next section for directions on how to use an associator field. How to Use an Associator Field After setting up the permissions and search configurations for an associator field as outlined in the previous sections, you will now be able to associate records from your form with records from other desired forms. Follow these steps to associate records using an associator field: When using an associator field, the first thing you must do is search for a record to associate with. You must search for records by entering key terms or a known KID (Kora Identification number) under Search Associations . In the image below, we search for \"Jane Doe\" Results of your search will show up in the next section labeled Association Results . Results will show up as the KID separated from any preview values you have chosen (step 2 in search configuration). Because we selected a preview value to display a name, we are extra sure that this is the correct record for \"Jane Doe\". Click on the record(s) that you want to appear as associations. Selected association will then appear in the Selected Associations section. You may continue to search for new records to associate by repeating steps 1 & 2. You may also remove selected associations by clicking on the x next to their text.","title":"Understanding Field Types"},{"location":"forms/understanding_field_types/#understanding-field-types","text":"Each form has to ability to add any number of different fields across multiple pages . This includes text, number, list, data, file and specialty fields. Understanding what these field types bring to the table will allow you to create spaces for data entry that are relevant to your digital repository. Creating a field is the first step towards understanding field types. After choosing to create a field and selecting the Field Type drop-down menu, you'll find the field type options available. These options will determine what types of data are entered into a record . The headings below will discuss the field types by their category: text, number, list, date, file, and specialty. After selecting your field type, you can click on Show Advanced Field Options . This is where you will be able to view many of the options for customizing your fields discussed below.","title":"Understanding Field Types"},{"location":"forms/understanding_field_types/#text-fields","text":"Text field are fields in which you enter text. There are two types of text field: text field and rich text field .","title":"Text Fields"},{"location":"forms/understanding_field_types/#text","text":"A text field allows users to enter any plain text into a record. This can include characters, numbers, and symbols from your keyboard. The advanced field options available include: a Default value, a Regex pattern and whether or not to make the field Multilined . Default : inputting a default value for a text field will create a value that is always present in that field when creating a record. This value can be deleted and replaced, but it will be initially present for every record containing this text field . Regex : A Regex pattern allows you to customize how a text field is searched for within Kora. For instance, if a word has multiple ways of being spelled, you can specify the different ways that a text field may be entered: the regular expression seriali[sz]e matches both \"serialise\" and \"serialize\". There are also much more complex regex expressions you can learn how to write. Multilined? : The multilined option allows you to enter more than one line of plain text, by clicking the enter button. There is no set limit to the number of lines you can enter, and a scroll bar will appear if the lines appear out of the text field's view.","title":"Text"},{"location":"forms/understanding_field_types/#rich-text","text":"A rich text field allows you write text that can be stylized and edited with the CKE editor. There are numerous options available in this editor to manipulate text. Users will be able to italicize, bold, underline, and strikethrough their text. They can also insert tables and images headings, bulleted lists and numbered lists into text. Users are then able to run spellcheck, insert links, and change other aspects of their text. The user guide for the CKE editor can be found here (They do not have a user guide up and running yet) . There are no advanced options available for this field besides the creation of a default value. Default : Default text can be entered into this field. The entered text will always be present in that field when creating a record. This value can be deleted and replaced, but will always be initially present for every record containing this rich text field .","title":"Rich Text"},{"location":"forms/understanding_field_types/#number-fields","text":"Number fields allows you to enter numbers. Users may enter the numbers manually into this field using a keyboard. Alternatively, users are able to use arrow keys or scroll with their mouse wheel to move the number value up or down by 1. There are two types of number fields: integer field and float field .","title":"Number Fields"},{"location":"forms/understanding_field_types/#integer","text":"Integer fields use whole numbers as their values. These are numbers without decimal points, and they can include negative numbers. If you attempt to enter a value that is not a whole number, then the value will not appear in the record. The advanced field options available include: a Default value, a Minimum Value , a Max Value and Unit of Measurement . Default : A default number can be entered into this field. The entered number will always be present in that field when creating a record. This value can be deleted and replaced, but will always be initially present for every record containing this integer field . Minimum Value : This specifies the lowest value that can be entered for this field. If a value is entered that is lower than this minimum value, Kora will not accept the minimum value. The record will either not be created, or it will shift to the minimum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified minimum value. Max Value : This specifies the highest value that can be entered for this field. If a value is entered that is higher than this Max value, Kora will not accept the maximum value. The record will either not be created, or shift to the maximum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified max value. Unit of Measurement : A unit of measurement can be specified for the integer value. Any plaintext value can be entered and will show up to the field name in parentheses when entering the record.","title":"Integer"},{"location":"forms/understanding_field_types/#float","text":"Float fields can take in any real numbers as their value. These real numbers can include integers and negative numbers. The advanced field options are exactly the same as the previous section and include: a Default value, a Minimum Value , a Max Value and Unit of Measurement . Default : A default number can be entered into this field. The entered number will always be present in that field when creating a record. This value can be deleted and replaced, but will always be initially present for every record containing this float field . Minimum Value : This specifies the lowest value that can be entered for this field. If a value is entered that is lower than this minimum value, Kora will not accept the minimum value. The record will either not be created, or it will shift to the minimum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified minimum value. Max Value : This specifies the highest value that can be entered for this field. If a value is entered that is higher than this Max value, Kora will not accept the maximum value. The record will either not be created, or shift to the maximum value. If a user is utilizing arrows or a mouse wheel, the value will stop changing at the specified max value. Unit of Measurement : A unit of measurement can be specified for the float value. Any plaintext value can be entered and will show up to the field name in parentheses when entering the record.","title":"Float"},{"location":"forms/understanding_field_types/#list-fields","text":"The Lists field allow users to create lists of data or select list options from a controlled vocabulary. Users are also able to generate a list, or create a list of objects associated with other objects. Perhaps the greatest strength of lists is the ability to force users to enter in controlled vocabulary for data fields. Controlled vocabulary refers to the use of a specific terms to refer to your data. If you only have three possible options for a particular value, then that makes it easier to characterize and analyze the data. You don't have to worry about the particular differences in how people describe objects or spelling errors. The trade-off is a loss of nuance. It is up to form creators to decide which goals are important to them. Their are four types of list fields available: list field , multi-select list , generated list and combo list . Note, if your list item contains any commas you must encapsulate the entire list item within quotation marks.","title":"List Fields"},{"location":"forms/understanding_field_types/#list","text":"A list field is the most straightforward list option available. You may create a list of possible values (a.k.a a controlled vocabulary) from which users may select one value for the data field. A list field will appear as a dropdown menu from which you can select one of these values when creating a record. Many of the options mentioned here are available for all lists and so will refer back to this section. So, when creating any list you may follow these steps in the advanced options to create that list: Under list options, enter your possible values in the green box labeled Type here and hit the enter key or \"ADD\" to add a new list option . From there hit enter or press the \"ADD\" button to add your value to the list. Your new value (\"Option 1\" in the image below) will be added to the list options above the green box you entered your data into. You can continue to add values in the bottom green box which will appear in the order created. You may also Copy All List Options or Delete All List Options . Copying list options will put all list options into your clipboard, separated by commas. Deleting all list options will delete all the values you have entered into a list. You will receive a notification asking you to confirm that you really do want to delete all your list options in a pop-up. You are able to move your list options around by clicking on the arrows next to the list options you have created. Clicking on an up arrow will switch that list option with the option below it, while clicking on a down arrow will switch that list option with the option below it. You may also click and drag a list option to a different part of the list. Once you have added all your list options, you are able to save your controlled vocabulary as preset for other lists by pressing the Create a New Value Preset button. You will have to give your list a name and decide if you want forms across your project to be able to use your preset list. You may also select Use a Value Preset for these List Options to select any preset lists that have been created and made available. You may also select from a selection of default preset lists made available across Kora which includes: Boolean, Country, Languages, and U.S States. At the bottom of list options, you will see that you can specify default values for your list. For the list field type, you may only specify one default value. In other multi-select, generated, and combo lists, you are able to specify more than one value. The default value for any list can be changed by the person making the record, but the default value will always be initially chosen when creating a record.","title":"List"},{"location":"forms/understanding_field_types/#multi-select-list","text":"A multi-select list field creates a list of possible values (a.k.a. a controlled vocabulary) from which users may select multiple values for the data field. This field follows the same setup as a list field (see steps 1-5 for list field above), but the end result is the ability to select multiple list options from a single list. You may select list options from a multi-select list by clicking them in the drop-down menu. You may also remove selected items by clicking the x * next to the field option.","title":"Multi-Select List"},{"location":"forms/understanding_field_types/#generated-list","text":"A generated list enables users to create and edit a list while creating a record. Users enter their own list options as if they were creating their own list field. This means that there are steps to create a generated list in a record, and steps to create a generated list in a form. The process of creating a generated list in a record is outlined in steps 1-3 of the list field section above. Users will enter, delete and rearrange their list options in the same way that list options are created when making a list field. Creating a generated list field in a form provides you with similar advanced options as other lists (steps 1-5 in the list field above), but there are a couple of key differences. First, there is the ability to add a regex expression, which can modify how Kora searches for your field. Secondly, it is important to note that any list options that you add in the advanced options will not show in the generated list that appears when creating a record. That means no default values can be specified or already existing list options added. Users will always have to generate the list from scratch when using a generated list.","title":"Generated List"},{"location":"forms/understanding_field_types/#combo-list","text":"A combo list field type allows users to select values from two different field types and associate those values with each other in one list. It is the only list field option that does not follow the steps outlined in the list field above. Instead, follow these steps to create a combo list: In the advanced options of a combo list, you will find the boxes shown in the image below available. The two boxes on the left named Combo List Field Type allow you to select the field types you want for this list. You may select any field type except for File Fields. The boxes on the right named Combo List Field Name allow you to give names to those fields. Here is an example setup in the advanced options. This combo list will use text and date fields to combine the names and birthdays of individuals into a single list. Note that you are unable to edit the advanced options of these individual fields. You Combo List will appear empty when creating a record as shown below. To add paired values to this list, click on the Add New Value button. The individual options for the field types you have selected will be available when adding a new value. In name and birthday example from the previous step, a text field is available for 'Name', while a date field is available for 'Birthday'. Click Create Combo Value to add the desired values to the list. You may add any number of combined values.","title":"Combo List"},{"location":"forms/understanding_field_types/#date-fields","text":"Date fields allow users to enter temporal data when creating records. There are three field types available for these purposes: Date , Date Time and Historical Date .","title":"Date Fields"},{"location":"forms/understanding_field_types/#date","text":"The date field allows users to enter a month, day and year. The advanced field options available include: Default month, day and year; Date Format , Start Year , End Year and the ability to specify the current year as the start or end year. Default : a default month, day and/or year can be chosen for the date field type . Default dates are changeable, but will appear initially every time a record using that date field is created. Date Format : use this option to rearrange the order of how the month, date and year appear when making the record. Start Year : this option allows you to specify the earliest year available for users to enter. Users will not be able to enter dates before the start year into records. End Year : this option allows you to specify the latest year that is available for users to enter. Users will not be able to enter dates after this end year into records. Use Current Year as Start Year : if you only want users to be able to enter recent dates, you can select the current year as the start year for dates to be entered. Use Current Year as End Year : if you want users to be able to enter dates up to the current year, select this option to make dates up to this year available.","title":"Date"},{"location":"forms/understanding_field_types/#date-time","text":"The date time field type provides everything that the date field type provides, plus time. The Advanced options for a date time field also follow this same logic. Default hour, minutes and seconds are the only advanced option which differ for this field type and they are outlined in the image below. Check out the section on the date field type above to learn more about the other advanced options Default : the date time field type gives the additional option to specify a default hour, minute and second. Default times are changeable, but will appear initially every time a record using that date time field is created.","title":"Date Time"},{"location":"forms/understanding_field_types/#historical-date","text":"A historical date field type provides everything that the date field type provides, plus the ability to add prefixes and calendar notation to the dates. The advanced options for this field type are similar to the date time field, except a few advanced options: Select Prefix(Optional) , Select Calendar/Date Notation , Show Prefixes? and Show Calendar/Date Notation? . The advanced options unique to the historical date field type are outlined below. Check out the section on the date field type above to learn more about the other advanced options. Select Prefix(Optional) : prefixes are selected by clicking the circle to the left of their name. The prefixes available include circa, pre and post. Circa refers to approximate or estimated dates. Pre refers to times before the specified date. Post refers to times after the date. You may only select one prefix. Select Calendar/Date Notation : calendar and date notation are selected by clicking the circle to the left of their name. CE refers to common era; BCE refers to before common era, BP refers to before present (oftentimes this means the year 1950 CE); and KYA years often refers to thousands of years before present. You must select one calendar/date notation. Show Prefixes? : If you want your selected prefix to appear when creating and viewing records, then select 'yes' from the drop-down menu. Show Calendar/Date Notation? if you want your selected notation to appear when creating and viewing records then select 'yes' from the drop-down menu.","title":"Historical date"},{"location":"forms/understanding_field_types/#file-fields","text":"File Fields allow you to create fields were users can upload files to a record. This includes documents, images, audio, video and 3D models. The image below shows what a typical file field looks like. There will be a title, a space to upload your file, and a description below. The File Field Types are: Documents , Gallery , Playlist , Video and 3D-Model . Note: When you are uploading any files, there are some restrictions on filenames. They are limited to a-z , A-Z , 0-9 , . , - and _ . No spaces are permitted in filenames.","title":"File Fields"},{"location":"forms/understanding_field_types/#documents","text":"The documents file field creates a space for document files to be uploaded. Since there are multiple types of files that documents can come in, you must select the document file types that you want to upload. You can customize the types of files you want uploaded and how you want them uploaded with the advanced options available: Max File Size (kb) ; Max File Amount ; and Allowed File Types (MIME): . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types (MIME): : this is were you will select the types of files that you want to accept for a document upload. You may want only .pdf or .png files to be uploaded. Due to the wide variety of formats that documents typically come in, no default values are selected for document uploads and there are a wide variety of file types available for selection. This differs from other file fields in because you must choose a document type for it to be possible to upload files.","title":"Documents"},{"location":"forms/understanding_field_types/#gallery","text":"The gallery file field creates a data field which allows users to upload images. Standard file formats are already selected for this field and include: .jpg, .gif, .png, and .bmp image files. The advanced options available are similar to other file fields: Max File Size (kb) ; Max File Amount ; and Allowed File Types . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types: : the file types provided are already optimized for typical image file formats including: jpg, gif and png and bmp image files. These are the only file types you may choose from.","title":"Gallery"},{"location":"forms/understanding_field_types/#playlist","text":"The playlist file field creates a space for users to upload audio files when making a record. Standard file formats are already selected for this field and include: MP3 and WAV audio files. The advanced options available are similar to other file fields: Max File Size (kb) ; Max File Amount ; and Allowed File Types . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types : the file types provided are already optimized for typical audio file formats including: MP3 and WAV audio files. These are the only file types you may choose from.","title":"Playlist"},{"location":"forms/understanding_field_types/#video","text":"The video file field creates a space for users to upload video files when making a record. There is only one standard file formats selected for this field which is MP4. The advanced options available are similar to other file fields: Max File Size (kb) ; Max File Amount ; and Allowed File Types . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Max File Amount : allows you to determine the maximum number of files that you want uploaded with each record. Allowed File Types: : the MP4 file type provided is the only file format available for videos. This is the only file types you may choose from.","title":"Video"},{"location":"forms/understanding_field_types/#3d-model","text":"The 3D model file field creates a space for users to upload 3D models into a record. There are standard file formats already selected for 3D models which include: OBJ, STL, JPEG Texture, PNG Texture, and other. The advanced options available are similar to other file fields, but include some notable differences: Max File Size (kb) , Allowed File Types , Model Color , Background Color One , and Background Color Two . Max File Size (kb) : allows you to determine the maximum size of a file that can be uploaded. Allowed File Types: : the file types provided are already optimized for typical 3D model file formats including: OBJ, STL, JPEG Texture, PNG Texture and other. Model Color : allows you to choose the color of the 3D Model Background Color One : allows you to choose the first background color of the model environment Background Color Two : allows you to choose the second background color of the model environment.","title":"3D model"},{"location":"forms/understanding_field_types/#specialty-fields","text":"There are a number of different Specialty Fields which serve specific functions for form creators. These functions allow users to create true or false options, describe geographic location and associate records with other records. These field types are referred to respectively as: Boolean , Geolocator , and Associator fields.","title":"Specialty Fields"},{"location":"forms/understanding_field_types/#boolean","text":"The boolean field refers to a true or false field option. You are able to make a title and description for a boolean field, which the person entering data may check or uncheck by clicking on the circle. You may automatically have the boolean field selected by checking the default option in the advanced options of the boolean field you are creating or editing.","title":"Boolean"},{"location":"forms/understanding_field_types/#geolocator","text":"The geolocator field allows users to enter geographic data through the use of latitude/longitude (lat/long), and address data. When entering new geolocator data, users enter the name of the new location, what type of geographic data they are entering (lat/long or address) and then the actual data. This field provides three advanced options when customizing this field: Default Locations , Map Display and Displayed Data . Default Locations : this advanced field option allows you to enter default locations for a geolocator field. You will enter the location name, location type and data in the same way as a new record. The image below shows the pop-up that appears for entering new locations into a geolocator field. Map Display : This advanced option allows you to display a map with points using entered location data. The points will appear on an interactive map which will automatically zoom to fit all of your points. Viewing records with map display active will show this map when examining records. If map display is inactive then no interactive map will be available for locations entered using Geolocator data. Instead, the raw text for the name of the location, and it's location data will be displayed. Displayed Data : If you choose not to display a map using the Map Display option, then Kora will display your data as text. There are two types of location data that you are able to display when viewing records: Lat Long and Address . Displaying Lat Long will display the coordinates of your location using latitude and longitude coordinates. Likewise, selecting Address will display the address of your locations. If a record provides latitude and longitude, Kora will still be able to look up an associated address to display if that is the option that is chosen. The opposite is also true.","title":"Geolocator"},{"location":"forms/understanding_field_types/#associator","text":"An associator field creates connections between records. Let's say, for example, that you want to create a form that keeps track of people associated with a museum project. This could include supervisors, volunteers, archaeologists, etc. Individual records could be created with their names and roles. Now let's say you want to create another form for objects associated with this project. You could create records which include data on these objects and the people involved with the curation of those objects. This could potentially be a lot of data reentry, however. One solution Kora offers for this hypothetical problem is the ability to associate the object records from the one form with the people records from the other form. When an association is created within a record, the associator field displays your selected, associated record as a clickable link within that original record. This link will bring you to the record page for that associated record. The possible association are extremely flexible, in that you are able to associate records with other records from the same form or even records from another project's form. In order to do this, however, you will need to give forms the ability to search each other through Form association permissions . What follows are directions for: creating association permissions between forms; setting up the search configurations for an associator field, and how to use an associator field.","title":"Associator"},{"location":"forms/understanding_field_types/#associator-permissions","text":"Follow these steps to set up associator permissions: First, you will want to navigate to the desired form that you want to associate other records with. From there you will have to select Association Permissions from either dropdown menu shown below. This will bring you to the Form Associations Page which allows you to grant association access with other forms. If you have administrative access to the forms that you want to associate, select Create a New Form Association . A new box will appear asking you Create a New Form Association . The dropdown menu will initially ask you to select a form. Forms will be displayed here from any project you have access to through a \"project name - form name\" format. Select the form you want to create an association with and click Create a New Form Association . Forms that are allowed to be associated with will be listed at the bottom of the Form Associations Page . If you do not have administrative permissions to a form, you may select the Request Form Access tab. Clicking Request Form Access on that page will allow you to select a form, after which Kora will send an email to all administrators requesting access to form associations.","title":"Associator Permissions"},{"location":"forms/understanding_field_types/#association-search-configuration","text":"Now that you have the correct association permissions set up for your form, you can create an association field that will be able to search records from other forms. In the directions below, we will be creating an associator field that is able to search for records through another form called \"Form 2\". These setup steps will work for any associator field: First go to the advanced options for the associator when creating the field . There you will find the Association Search Configuration , which will have the forms that you are able to search through available to be checked off. Once you have selected the form that you want this field to associate with, you will have the option to select preview values. Preview values will show any values from the selected fields you choose when searching for records. If you do not select a preview value, then the internal Kora Identification (KID) will be the only value that is shown when searching for records with this associator. It is recommended that you choose a field such as \"name\", \"id\", etc. that will allow you to more easily identify what record you are looking at. After your search configuration is set up, you can create a default value for the associator field. Go to the next section for directions on how to use an associator field.","title":"Association Search Configuration"},{"location":"forms/understanding_field_types/#how-to-use-an-associator-field","text":"After setting up the permissions and search configurations for an associator field as outlined in the previous sections, you will now be able to associate records from your form with records from other desired forms. Follow these steps to associate records using an associator field: When using an associator field, the first thing you must do is search for a record to associate with. You must search for records by entering key terms or a known KID (Kora Identification number) under Search Associations . In the image below, we search for \"Jane Doe\" Results of your search will show up in the next section labeled Association Results . Results will show up as the KID separated from any preview values you have chosen (step 2 in search configuration). Because we selected a preview value to display a name, we are extra sure that this is the correct record for \"Jane Doe\". Click on the record(s) that you want to appear as associations. Selected association will then appear in the Selected Associations section. You may continue to search for new records to associate by repeating steps 1 & 2. You may also remove selected associations by clicking on the x next to their text.","title":"How to Use an Associator Field"},{"location":"getting-started/advanced_configuration/","text":"Advanced Configuration of Kora This document explains some advanced features of Kora, which may only need to be configured in certain circumstances. Using mod_rewrite in Kora If your installation will exist at a URL with a subdirectory, it is important to adjust the \".htaccess\" file inside of \"public\" to reflect this. Note : This is only applicable to a Kora installation accessible by subdirectory and not for one existing at a domain-level or subdomain-level URL. For an explanation of these circumstances, please see the \"Create Kora Installation URLs\" part of the Reclaim/DoOO Installation guide . If you have not yet done so, confirm that mod_rewrite . See \" Enabling mod_rewrite \" section of the \"System Requirements\" documentation. Edit the \".htaccess\" file inside the \"public\" directory. If using a cPanel interface, follow the instructions for editing files in \" Upload and Prepare Kora Application Files via cPanel File Manager ,\" a section in the Installation guide. If using SSH or Terminal, navigate to \"kora/public\" and use sudo nano , this time to edit \".htaccess\". An explanation for using nano with super user privileges is also contained in the \" Enabling mod_rewrite \" section of the \"System Requirements\" documentation. The file's code will begin with: <IfModule mod_rewrite.c> <IfModule mod_negotiation.c> Options -MultiViews -Indexes </IfModule> RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] #RewriteBase /your_base_url Remove the # from the final line above and provide the subdirectory part of your URL for accessing your installation. For instance, if you installed Kora and created a symbolic link to a directory within your root called \"kora\", the last few lines might look like: RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] RewriteBase /kora Be sure to save your changes when exiting. Increasing Memory Usage and File Size Limits A Kora installation relies on default values for memory and storage usage by PHP. However, these will be set too low to handle Kora installations where large files will be uploaded to the installation, such as high-resolution images, image-dense pdfs, or 3D objects with detailed surface texture files. To deal with this, the \".htaccess\" file saved in the \"public\" directory contains a list of PHP attributes and associated increased values. In that file, they appear like this: #Recommended but only use these if your system allows overwrites #php_value upload_max_filesize 4998M #php_value post_max_size 4999M #php_value memory_limit 5000M #php_value max_execution_time 3000 #php_value max_input_time 3000 If your server environment allows overwrites via the .htaccess file, simply edit this file and remove the # before each attribute to enable the overwrite. For editing instructions, see links to multiple explanations in the section above, \" Using mod_rewrite in Kora \". In some cases however, such as in Domain of One's Own or other Reclaim Hosting -provided environments, these values cannot overwritten via this method. Instead, these values may be managed by the provided server graphical interface; in the case of Reclaim Hosting, this is the cPanel. In this example, these values are managed by a cPanel application called \"MultiPHP INI Editor.\" To adjust these values, begin by clicking on this application. Select the domain or subdomain where your installation is. All of the overwritable PHP attributes for the selected domain or subdomain will appear; find each of those listed in the code block above and adjust their values as necessary. Be sure to save the new settings. GitLab Integration Kora includes the option to allow users to sign up and log in using GitLab's authentication system, via their OAuth API. This can be implemented with any type of GitLab account or installation \u2013 including a gitlab.com free account, a GitLab Community Edition (CE) instance personally hosted, a GitLab Enterprise Edition (EE) instance managed through gitlab.com, etc. \u2013 and will allow any user who has a legitimate account for that GitLab location (whether privately hosted or through gitlab.com) to authenticate their Kora account. Individual GitLab User Integration This option will be tied to one specific user's GitLab account. Begin by navigating to the GitLab instance you wish to use for this process and log in, then go to the account's settings page. In the left-hand sidebar, click on \"Applications\". This will default to showing the options for \"Add new application\" Fill in the required information for adding a new application. The name will be whatever identifying name you wish to give this newly-created link; it is recommended you reference this Kora installation's URL for specificity, but any name you choose will work. In the \"Redirect URI\" text box, use the following example to put in the URI for your specific Kora instance. In this example URI, the Kora instance's URL is at https://example.org/kora/, so this creates the URI of: https://example.org/kora/login/gitlab/callback Notice that what has been added to the URL is \"/login/gitlab/callback\" in order to create the URI. Leave the box for the setting \"Confidential\" checked; this is the default setting. Check the box for the \"read_user\" scope and then click \"Save application\" after the list of scopes. You will be redirected to the page with your \"Application ID\" and \"Secret.\" You will be copying each of these into your Kora Configuration File page of your installation. When viewing your installation's Kora Configuration File page (accessible via the right sidebar, under the \"Management\" section), type in the GitLab instance's website into the \"GitLab Client\" box. For instance, for a free account on gitlab.com, use \"https://gitlab.com\" Copy the GitLab \"Application ID\" from Step 7 above into the Kora Configuration Page box for \"GitLab Client ID\"; copy \"Secret\" to \"GitLab Client Secret.\" Click \"Update Configuration File\" to save these settings. Warning The GitLab text boxes cannot contain any spaces in between characters (spaces at the beginning or end will be automatically removed); otherwise your Kora installation will 'break.'' To fix this, you will need to manually edit the .env file in Kora's main directory, to change the offending text to something without spaces in the middle. Doing so will restore your installation to working order. GitLab Instance Admin Integration GitLab integration may also be achieved at the Admin level in any GitLab instance with these settings available, such as a personally-hosted instance. This has the benefit of being manageable by any user with administrator privileges for the GitLab instance. Begin by navigating to the GitLab instance you wish to use for this process and log in, then go to the \"Admin Area.\" In the left-hand sidebar, click on \"Applications\". This will default to showing the options for \"Add new application\" Fill in the required information for adding a new application. The name will be whatever identifying name you wish to give this newly-created link; it is recommended you reference this Kora installation's URL for specificity, but any name you choose will work. In the \"Redirect URI\" text box, use the following example to put in the URI for your specific Kora instance. In this example URI, the Kora instance's URL is at https://example.org/kora/, so this creates the URI of: https://example.org/kora/login/gitlab/callback Notice that what has been added to the URL is \"/login/gitlab/callback\" in order to create the URI. Leave the box for the setting \"Confidential\" checked; this is the default setting. Check the box for the \"read_user\" scope and then click \"Save application\" after the list of scopes. You will be redirected to the page with your \"Application ID\" and \"Secret.\" You will be copying each of these into your Kora Configuration File page of your installation. When viewing your installation's Kora Configuration File page (accessible via the right sidebar, under the \"Management\" section), type in the GitLab instance's website into the \"GitLab Client\" box. For instance, for a personally hosted GitLab instance at another subdomain alongside your Kora instance, it could be \"https://gitlab.example.org.\" (For an image of this box and those for the next step, please see Step 8 in the section above, \" Individual GitLab User Integration \") \" Copy the GitLab \"Application ID\" from Step 7 into the Kora Configuration Page box for \"GitLab Client ID\"; copy \"Secret\" to \"GitLab Client Secret.\" Click \"Update Configuration File\" to save these settings. Warning The GitLab text boxes cannot contain any spaces in between characters (spaces at the beginning or end will be automatically removed); otherwise your Kora installation will 'break.'' To fix this, you will need to manually edit the .env file in Kora's main directory, to change the offending text to something without spaces in the middle. Doing so will restore your installation to working order. Removing GitLab Integration To remove GitLab integration, simply replace the URL in the \"GitLab Client\" box with a single word or random character string (without spaces). This will remove the \"Login with GitLab\" button on the login page. If you wish to also remove the ID and Secret, you can also replace these with a single word or random character string (again, without spaces). Warning The GitLab text boxes cannot contain any spaces in between characters (spaces at the beginning or end will be automatically removed); otherwise your Kora installation will 'break.'' To fix this, you will need to manually edit the .env file in Kora's main directory, to change the offending text to something without spaces in the middle. Doing so will restore your installation to working order.","title":"Advanced Configuration of Kora"},{"location":"getting-started/advanced_configuration/#advanced-configuration-of-kora","text":"This document explains some advanced features of Kora, which may only need to be configured in certain circumstances.","title":"Advanced Configuration of Kora"},{"location":"getting-started/advanced_configuration/#using-mod_rewrite-in-kora","text":"If your installation will exist at a URL with a subdirectory, it is important to adjust the \".htaccess\" file inside of \"public\" to reflect this. Note : This is only applicable to a Kora installation accessible by subdirectory and not for one existing at a domain-level or subdomain-level URL. For an explanation of these circumstances, please see the \"Create Kora Installation URLs\" part of the Reclaim/DoOO Installation guide . If you have not yet done so, confirm that mod_rewrite . See \" Enabling mod_rewrite \" section of the \"System Requirements\" documentation. Edit the \".htaccess\" file inside the \"public\" directory. If using a cPanel interface, follow the instructions for editing files in \" Upload and Prepare Kora Application Files via cPanel File Manager ,\" a section in the Installation guide. If using SSH or Terminal, navigate to \"kora/public\" and use sudo nano , this time to edit \".htaccess\". An explanation for using nano with super user privileges is also contained in the \" Enabling mod_rewrite \" section of the \"System Requirements\" documentation. The file's code will begin with: <IfModule mod_rewrite.c> <IfModule mod_negotiation.c> Options -MultiViews -Indexes </IfModule> RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] #RewriteBase /your_base_url Remove the # from the final line above and provide the subdirectory part of your URL for accessing your installation. For instance, if you installed Kora and created a symbolic link to a directory within your root called \"kora\", the last few lines might look like: RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] RewriteBase /kora Be sure to save your changes when exiting.","title":"Using mod_rewrite in Kora"},{"location":"getting-started/advanced_configuration/#increasing-memory-usage-and-file-size-limits","text":"A Kora installation relies on default values for memory and storage usage by PHP. However, these will be set too low to handle Kora installations where large files will be uploaded to the installation, such as high-resolution images, image-dense pdfs, or 3D objects with detailed surface texture files. To deal with this, the \".htaccess\" file saved in the \"public\" directory contains a list of PHP attributes and associated increased values. In that file, they appear like this: #Recommended but only use these if your system allows overwrites #php_value upload_max_filesize 4998M #php_value post_max_size 4999M #php_value memory_limit 5000M #php_value max_execution_time 3000 #php_value max_input_time 3000 If your server environment allows overwrites via the .htaccess file, simply edit this file and remove the # before each attribute to enable the overwrite. For editing instructions, see links to multiple explanations in the section above, \" Using mod_rewrite in Kora \". In some cases however, such as in Domain of One's Own or other Reclaim Hosting -provided environments, these values cannot overwritten via this method. Instead, these values may be managed by the provided server graphical interface; in the case of Reclaim Hosting, this is the cPanel. In this example, these values are managed by a cPanel application called \"MultiPHP INI Editor.\" To adjust these values, begin by clicking on this application. Select the domain or subdomain where your installation is. All of the overwritable PHP attributes for the selected domain or subdomain will appear; find each of those listed in the code block above and adjust their values as necessary. Be sure to save the new settings.","title":"Increasing Memory Usage and File Size Limits"},{"location":"getting-started/advanced_configuration/#gitlab-integration","text":"Kora includes the option to allow users to sign up and log in using GitLab's authentication system, via their OAuth API. This can be implemented with any type of GitLab account or installation \u2013 including a gitlab.com free account, a GitLab Community Edition (CE) instance personally hosted, a GitLab Enterprise Edition (EE) instance managed through gitlab.com, etc. \u2013 and will allow any user who has a legitimate account for that GitLab location (whether privately hosted or through gitlab.com) to authenticate their Kora account.","title":"GitLab Integration"},{"location":"getting-started/advanced_configuration/#individual-gitlab-user-integration","text":"This option will be tied to one specific user's GitLab account. Begin by navigating to the GitLab instance you wish to use for this process and log in, then go to the account's settings page. In the left-hand sidebar, click on \"Applications\". This will default to showing the options for \"Add new application\" Fill in the required information for adding a new application. The name will be whatever identifying name you wish to give this newly-created link; it is recommended you reference this Kora installation's URL for specificity, but any name you choose will work. In the \"Redirect URI\" text box, use the following example to put in the URI for your specific Kora instance. In this example URI, the Kora instance's URL is at https://example.org/kora/, so this creates the URI of: https://example.org/kora/login/gitlab/callback Notice that what has been added to the URL is \"/login/gitlab/callback\" in order to create the URI. Leave the box for the setting \"Confidential\" checked; this is the default setting. Check the box for the \"read_user\" scope and then click \"Save application\" after the list of scopes. You will be redirected to the page with your \"Application ID\" and \"Secret.\" You will be copying each of these into your Kora Configuration File page of your installation. When viewing your installation's Kora Configuration File page (accessible via the right sidebar, under the \"Management\" section), type in the GitLab instance's website into the \"GitLab Client\" box. For instance, for a free account on gitlab.com, use \"https://gitlab.com\" Copy the GitLab \"Application ID\" from Step 7 above into the Kora Configuration Page box for \"GitLab Client ID\"; copy \"Secret\" to \"GitLab Client Secret.\" Click \"Update Configuration File\" to save these settings. Warning The GitLab text boxes cannot contain any spaces in between characters (spaces at the beginning or end will be automatically removed); otherwise your Kora installation will 'break.'' To fix this, you will need to manually edit the .env file in Kora's main directory, to change the offending text to something without spaces in the middle. Doing so will restore your installation to working order.","title":"Individual GitLab User Integration"},{"location":"getting-started/advanced_configuration/#gitlab-instance-admin-integration","text":"GitLab integration may also be achieved at the Admin level in any GitLab instance with these settings available, such as a personally-hosted instance. This has the benefit of being manageable by any user with administrator privileges for the GitLab instance. Begin by navigating to the GitLab instance you wish to use for this process and log in, then go to the \"Admin Area.\" In the left-hand sidebar, click on \"Applications\". This will default to showing the options for \"Add new application\" Fill in the required information for adding a new application. The name will be whatever identifying name you wish to give this newly-created link; it is recommended you reference this Kora installation's URL for specificity, but any name you choose will work. In the \"Redirect URI\" text box, use the following example to put in the URI for your specific Kora instance. In this example URI, the Kora instance's URL is at https://example.org/kora/, so this creates the URI of: https://example.org/kora/login/gitlab/callback Notice that what has been added to the URL is \"/login/gitlab/callback\" in order to create the URI. Leave the box for the setting \"Confidential\" checked; this is the default setting. Check the box for the \"read_user\" scope and then click \"Save application\" after the list of scopes. You will be redirected to the page with your \"Application ID\" and \"Secret.\" You will be copying each of these into your Kora Configuration File page of your installation. When viewing your installation's Kora Configuration File page (accessible via the right sidebar, under the \"Management\" section), type in the GitLab instance's website into the \"GitLab Client\" box. For instance, for a personally hosted GitLab instance at another subdomain alongside your Kora instance, it could be \"https://gitlab.example.org.\" (For an image of this box and those for the next step, please see Step 8 in the section above, \" Individual GitLab User Integration \") \" Copy the GitLab \"Application ID\" from Step 7 into the Kora Configuration Page box for \"GitLab Client ID\"; copy \"Secret\" to \"GitLab Client Secret.\" Click \"Update Configuration File\" to save these settings. Warning The GitLab text boxes cannot contain any spaces in between characters (spaces at the beginning or end will be automatically removed); otherwise your Kora installation will 'break.'' To fix this, you will need to manually edit the .env file in Kora's main directory, to change the offending text to something without spaces in the middle. Doing so will restore your installation to working order.","title":"GitLab Instance Admin Integration"},{"location":"getting-started/advanced_configuration/#removing-gitlab-integration","text":"To remove GitLab integration, simply replace the URL in the \"GitLab Client\" box with a single word or random character string (without spaces). This will remove the \"Login with GitLab\" button on the login page. If you wish to also remove the ID and Secret, you can also replace these with a single word or random character string (again, without spaces). Warning The GitLab text boxes cannot contain any spaces in between characters (spaces at the beginning or end will be automatically removed); otherwise your Kora installation will 'break.'' To fix this, you will need to manually edit the .env file in Kora's main directory, to change the offending text to something without spaces in the middle. Doing so will restore your installation to working order.","title":"Removing GitLab Integration"},{"location":"getting-started/cloud_install/","text":"Installing Kora on Reclaim Cloud This guide is for installing Kora in a Reclaim Cloud environment. Set up Scalable Cloud Environment After creating an account, begin from your Dashboard. Select \"Create New Environment\" in the middle: Or \"NEW ENVIRONMENT\" in the top-left: In the modal that appears, Select PHP Tab. It will look like this: Turn on SSL by clicking \"SSL\" in left panel area, then toggling the switch at the top of the middle panel to \"On\". Return to the Apache Layer view by clicking on it, which is the blue block with a red feather in the middle. Leave Apache layer as-is; Click on \"SQL\" layer under it to add MySQL Layer. Use the dropdown on this block to change from MariaDB to MySQL SE 8.0.20. While still viewing the settings for the Apache layer, in middle panel area, use the PHP dropdown menu to change to version 7.2.32. In the same area area, use slider for \"Application Servers\" to set Scaling Limit to at least 8 cloudlets, which will set the max reserve to at least Kora's minimum RAM requirement of 1 GB. The reserve can be set higher than this, if desired; doing so will allow your environment to use more CPU and/or RAM if your installation requires it at some future time. You will only be charged for higher processing power if your Kora website has enough people using it simultaneously to require the extra resources. Leave the reserved level on 1 cloudlet. Click on \"SQL\" block to adjust the MySQL Layer settings. In middle panel area, use slider for \"Application Servers\" to set Scaling Limit to at least 8 cloudlets, which will set the max reserve to at least Kora's minimum RAM requirement of 1 GB. Either leave the reserved level at its default of 3 cloudlets, or drop it to 1 cloudlet. To note once again, the reserve can be set higher than this, if desired; doing so will allow your environment to use more CPU and/or RAM if your installation requires it at some future time. You will only be charged for higher processing power if your Kora website has enough people using it simultaneously to require the extra resources. The minimum settings would look like this: Feel free to review all these settings again, but you can always adjust these later if needed (see the section, \" Alter Cloud Environment After Creation \" below). When ready, click \"Create\" in lower-right to initialize the environment. Set up MySQL Database After the environment initializes, you'll receive emails. One, with subject similar to \"New Reclaim Cloud Environment... Created\" lets you know the process has completed. Other email, with subject similar to \"MySQL Node Successfully Added to Your Reclaim Cloud Environment,\" contains important login information for MySQL. Do not delete this email without first saving the host, username, and password contained within. In your dashboard, your newly initialized environment's components will be visible. There will be a notification on the right-hand side informing you that this process has completed. you can hover on that notification to make the \"X\" visible, then click on it to dismiss this notification. Hover over the \"Node\" contained within \"SQL Databases\" and click icon for \"Open in Browser\". This will open a new tab with a phpMyAdmin login screen. Use credentials from the MySQL email to log into phpMyAdmin; the username is commonly root. Once logged in, the main dashboard will load. Click the tab for \"User Accounts\" in the top menu, highlighted in the screenshot above. This will bring up the list of existing users. Click on \"Add user account\" (highlighted in the previous screenshot) to reach the page for adding new database users. In \"User name\" field, write kora. Leave the \"Host name\" defaulted to the \"Any host\" dropdown selection and the default text field content. For the password, click the \"Generate\" button for \"Generate password.\" This will populate both password text boxes and provide a plain-text display of the generated password. Copy this password somewhere safe as you will need it when setting up Kora. Finally, check the box for \"Create database with same name and grant all privileges.\" Scroll to bottom and click \"Go\" button in lower-right. Close this browser tab and return to the main Reclaim Cloud tab. Configure PHP Modules In the dashboard, hover over \"Application Servers\" and click on the wrench icon, for \"Config.\" This will bring up a panel at the bottom of the window, with a tab labeled \"Application Servers : Configs\". On left-hand side of this panel, scroll down and select \"php.ini.\" The file will load on the right-hand side, as a new tab labeled \"php.ini.\" Use the built-in \"Search\" function to locate each of these modules: gd , imagick , imap , intl , ldap , pgsql (NOT \"pdo_pgsql\"), snmp , soap , wddx , xmlrpc , xsl Each of their code blocks will look similar to this one, for gd : Some modules will have more lines in their block than others. For instance, imagick has a comment line with the url where the module is found, the line for enabling the extension, and then two lines for configuring the module. [imagick] ; http://php.net/manual/en/book.imagick.php ;extension=imagick.so imagick.locale_fix = 0 ; Fixes a drawing bug with locales that use ',' as float separators imagick.progress_monitor = 0 ; Used to enable the image progress monitor In this case, enable imagick by removing the ; from the line ;extension=imagick.so so that the section looks like: [imagick] ; http://php.net/manual/en/book.imagick.php extension=imagick.so imagick.locale_fix = 0 ; Fixes a drawing bug with locales that use ',' as float separators imagick.progress_monitor = 0 ; Used to enable the image progress monitor Do this for all 11 of the listed modules. For wddx , remove the # which is there instead of ; . Enable the mail function. Search for \"smtp\" to find the section that begins with: [mail] ;SMTP = {mail host} ;port = {port-number} The first two lines of this module defines the server location and the port. The full code of this section is not reproduced here and portions have been changed, for security purposes. Remove the ; from the beginning of each of these two lines, and write down the specified value for SMTP = . This will be used when setting up the email function in Kora. Once you have enabled all the modules and the mail configurations, Click \"Save\" at the top of this panel area. After saving, hover on \"Application Servers\" and click on the icon for \"Restart Nodes.\" Click \"Yes\" for the warning for \"Restart Apache nodes?\" Wait for the notification indicating that the nodes have been successfully restarted. Next, hover on \"Application Servers\" and click on the icon for \"Open in Browser\" New tab will open with a page displaying information generated by the function phpinfo() . The top of it will look like this: You can use this page to confirm that all eleven of these modules have been loaded; those that are loaded have their own section headings. If any are not loaded, return to the php.ini file to confirm you properly deleted the semi-colon from the extension=... line that corresponds to the module in question. When finished, close this browser tab. Import and Install Kora, with Site URL Considerations There are two paths for importing Kora into your Reclaim Cloud environment. There are also two basic forms your Kora website's URL can take. To demonstrate both options for both of these, this section is split into two subsections, to highlight the two different versions of each. If you wish to \"mix-and-match\" these processes, this should be a fairly straightforward adjustment to make. Installation via Zipped File as a URL Subdirectory When creating your new Kora website, you have two basic options for how your URL will be configured. This first option is for instances where your installation will be accessible at, as an example, https://example.org/subdirectory . The subdirectory in this example URL is appropriately named \"subdirectory.\" Back at the dashboard, hover on \"Application Servers\" and click on icon for \"Web SSH\" Display will open with an SSH terminal Use the following command to navigate to the directory just above your environment's Document Root (contents of Document Root is what's visible via your environment's URL) cd /var/www/webroot You can either type this code in, or copy it and then paste it into the terminal using a keyboard shortcut. Your terminal will look like this: Open a new browser tab and navigate to https://github.com/matrix-msu/kora/releases . Click the dropdown menu for \"Assets\" of most recent release. Right-click on the \"Source Code (zip)\" file link and copy this file's URL. Return to the Reclaim Cloud environment tab. Type wget then a space, then paste the file URL you just copied. This is an example of what your command will look like after pasting: wget https://github.com/matrix-msu/kora/archive/3.0.0.zip Hit \"Enter\" and let the command run. During the file transfer process, your terminal will look similar to this: The file will be named the last part of the URL where you fetched it from. In this example, the name is 3.0.0.zip . If needed, you can run the command ls to view a list of the directory's contents. The newly-added zip file should be listed. Run the following command to unzip this file into this directory. Make sure to change the filename in the command to match the one that is listed. unzip 3.0.0.zip The system will create a new directory with the contents of this zip in a directory \"kora-[zip-file-name]\". In this example, the directory is named \"kora-3.0.0\"; if needed, you can again use ls to confirm the directory's name. You can also see the name of the directory at the beginning of each line that displays after running the unzip command: Use the move command to rename the directory as \"kora\". Be sure to use the exact directory name that displayed. An example of this command is: mv kora-3.0.0 kora For the mv command, the first part is the name of the current directory/file, and the second part is the desired name to change it to. If you wish, run ls once again to confirm the name change Use the following command to change your location to the \"kora\" directory: cd kora After the mv and cd commands, your terminal will look similar to this: Use the copy command cp to make a new copy of the \".env.example\" file, but with the name \".env\" This command looks like: cp .env.example .env When cp is successful, there won't be a message; the terminal will simply create a new line with the command prompt. So your terminal will look like this: Use the nano file editing program built into this version of Linux to make changes to the .env file. The command is: nano .env This file will look similar to this when displayed by nano : You can navigate around this file by using the directional arrows on your keyboard. Locate the block of lines that say: DB_HOST=localhost DB_DATABASE=kora DB_USERNAME=kora DB_PASSWORD=kora DB_DEFAULT=mysql DB_PREFIX=kora_ For the DB_HOST= line, change \"localhost\" to the \"host\" you saved from the MySQL email. Pasting the host requires a nano-specific keyboard shortcut; for Windows machines this is ctrl + shift + v If you used \"kora\" for the user you set up in phpMyAdmin, and you checked the \"Create database with same name and grant all privileges\" box when creating it, leave the DB_DATABASE= and DB_USERNAME= lines alone; otherwise, change them to match the username and database names you created in phpMyAdmin. On the DB_PASSWORD= line, change \"kora\" to the password you saved from the process of creating the user in phpMyAdmin. Again, use the nano-specific keyboard shortcut for pasting, if copied from elsewhere. (You can see how this file will appear after editing in the screenshot below, in Step 15.) Leave the rest of this file alone. Use the proper keyboard shortcut for exiting nano on your computer; for a Windows machine, this is crtl + x. The system will ask you if you wish to save your changes; hit \"y\" for yes. Then hit \"enter\" to confirm that the file name is \".env\" Now, change your directory to public: cd public Copy the \".htaccess.example\" file in this directory using the cp command, as \".htaccess\" cp .htaccess.example .htaccess After you have done this, your terminal will look similar to this: Next, edit this file, again using nano nano .htaccess Find the following section of code in this file: RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] #RewriteBase /your_base_url It is also highlighted in this image: From the final line of this section of code, remove # and then change \"/your_base_url\" to \"/kora\". This tells the system that your Kora install's url will be https://example.org/kora (if your subdirectory is something different, change this line accordingly) Save this file using the same process as explained in the case of editing \".env\" above. Leave the file name as \".htaccess\". Navigate upward to the main kora directory: cd .. Run the following command to install Kora php artisan kora:install This will install Kora into your environment by completing a number of tasks, such as linking the mySQL database you created to these application files. Once this finishes, your terminal will look similar to this: INCREDIBLY IMPORTANT : You must copy the last line generated here in the successful installation message (outlined above), which has your password for the generated username of \"admin\". Paste this somewhere safe, where you will not lose it! Warning It cannot be stressed enough how important this step is, because losing this password means losing access to your installation and will require a full reinstallation. Reclaim Cloud has default permissions levels that will automatically meet the READ and WRITE permissions requirements for the specified folders in the successful installation message, so for this installation you will not need to change any permission levels. You may skip this step and proceed to #21. If using this guide to install into any other environments, you may need to change permission levels. You can use the following commands to do so: chmod -R 755 . chmod -R 775 bootstrap/cache/ chmod -R 775 storage/ chmod -R 775 public/assets/javascripts/production/ Navigate to your RootDirectory, which is the directory that your server points your URL at; in this case, use the following two commands: cd .. cd ROOT Create a symbolic link in this directory, that corresponds to the path you wrote in the .htaccess file before. For example, if you changed \"/your_base_url\" to \"/kora\", use this command for your symbolic link creation: ln -s ../kora/public kora Once you have run this command, your terminal will look similar to this: At this point you may skip the next sub-section and proceed to the next section, \" Further Configure Kora Once Installed .\" Installation via GitHub Repository and Cloud's Development Manager The second option for configuring your webpage's URL is to have it accessible at a main-level domain (or, technically in the case of the Reclaim Cloud-provided URLS, subdomain). Auto-generated Reclaim Cloud URLs are usually in the form of https://[environment-name].us.reclaim.cloud . In this example, your Kora installation would be accessible at this URL, without an additional subdirectory on the end. (For an explanation of the subdirectory URL case, please see the previous sub-section, \" Installation via Zipped File as a URL Subdirectory .\") In the dashboard, hover on the line \"Deployments\" for your environment, and click on \"Deploy from Git / SVN.\" This will open a new modal, for configuring a repository from which to pull files. Click on the dropdown menu for \"Repository\" and choose \"Add New Repository.\" Another new modal will open, for adding a new repository. In this modal, give this configuration a name; for instance \"Kora,\" since this will be pointed at the official Kora repository managed by Matrix at MSU. Point it at this repository by pasting in the following address into the \"URL\" text box: https://github.com/matrix-msu/kora Leave the \"Branch\" text box with its default \"master\" text. The modal should look similar to this: Click \"Add\" on this modal (highlighted above), which will return you to the previous modal with \"Kora\" selected for the \"Repository.\" Again leave \"Branch\" text as defaulted to \"master\"; additionally, also leave the \"Path\" text box with its \"ROOT\" default. Click \"Deploy\" in the lower-right to have the Development Manager transfer all of the files from the kora repository on GitHub into your environment's ROOT folder. Currently, your ROOT folder is set as your URL's DocumentRoot, but this would be quite insecure for your Kora application, so this must be changed. To do so, once again hover over \"Application Servers\" and again click on wrench icon for \"Config.\" This will bring up the \"Application Servers : Configs\" tab in the bottom panel. In the left-hand pane of this panel, click on the \"conf\" folder. This will show its contents in the right-hand pane. Double-click on the file, \"httpd.conf\" Search this file for \"DocumentRoot,\" which should find four matches. The first two, shown in the image below, are in a section where DocumentRoot is defined as a directory tree leading to \"ROOT\" Change this line by adding \"/public\", to read as follows: DocumentRoot \"/var/www/webroot/ROOT/public\" The next match when searching for DocumentRoot will be the comment above a line of code that reads, <Directory \"/var/www/webroot/ROOT\"> Add \"/public\" to this line as well, so that it reads, <Directory \"/var/www/webroot/ROOT/public\"> The final match for \"DocumentRoot\" in this file will be in the middle of a code block that reads, ServerAdmin webmaster@domain.com DocumentRoot /var/www/webroot/ROOT ServerName website.jelastic.com ServerAlias * ErrorLog logs/dummy-host.jelastic.com-error_log CustomLog logs/dummy-host.jelastic.com-access_log common </VirtualHost> It is the second line here, beginning with \"DocumentRoot,\" that will need to be altered. As you may have guessed, you will add \"/public\" to this line as well. It will read, DocumentRoot /var/www/webroot/ROOT/public Once these changes have been made, click on \"Save,\" and then hover on \"Application Servers\" and click on the icon for \"Restart Nodes.\" After your nodes restart, hover on \"Application Servers\" again and click on icon for \"Web SSH\" The panel at the bottom will open a new tab with an SSH terminal. Use the following command to navigate to the directory where the Development Manager has transferred all the kora repository files to: cd /var/www/webroot/ROOT Your terminal will look like this: Use the copy command cp to make a new copy of the \".env.example\" file, but with the name \".env\" This command looks like: cp .env.example .env When cp is successful, there won't be a message; the terminal will simply create a new line with the command prompt. So your terminal will look like this: Use the nano file editing program built into this version of Linux to make changes to the .env file. The command is: nano .env This file will look similar to this when displayed by nano : You can navigate around this file by using the directional arrows on your keyboard. Locate the block of lines that say: DB_HOST=localhost DB_DATABASE=kora DB_USERNAME=kora DB_PASSWORD=kora DB_DEFAULT=mysql DB_PREFIX=kora_ For the DB_HOST= line, change \"localhost\" to the \"host\" you saved from the MySQL email. Pasting the host requires a nano-specific keyboard shortcut; for Windows machines this is ctrl + shift + v If you used \"kora\" for the user you set up in phpMyAdmin, and you checked the \"Create database with same name and grant all privileges\" box when creating it, leave the DB_DATABASE= and DB_USERNAME= lines alone; otherwise, change them to match the username and database names you created in phpMyAdmin. On the DB_PASSWORD= line, change \"kora\" to the password you saved from the process of creating the user in phpMyAdmin. Again, use the nano-specific keyboard shortcut for pasting, if copied from elsewhere. (You can see how this file will appear after editing in the screenshot below, in Step 19.) Leave the rest of this file alone. Use the proper keyboard shortcut for exiting nano on your computer; for a Windows machine, this is crtl + x. The system will ask you if you wish to save your changes; hit \"y\" for yes. Then hit \"enter\" to confirm that the file name is \".env\" Now, change your directory to public: cd public Copy the \".htaccess.example\" file in this directory using the cp command, as \".htaccess\" cp .htaccess.example .htaccess After you have done this, your terminal will look similar to this: Next, edit this file, again using nano nano .htaccess Find the following section of code in this file: RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] #RewriteBase /your_base_url It is also highlighted in this image: From the final line of this section of code, remove # and then change \"/your_base_url\" to \"/kora\". This tells the system that your Kora install's url will be https://example.org/kora (if your subdirectory is something different, change this line accordingly) Save this file using the same process as explained in the case of editing \".env\" above. Leave the file name as \"\".htaccess\". Navigate upward to the main kora directory: cd .. Run the following command to install Kora php artisan kora:install This will install Kora into your environment by completing a number of tasks, such as linking the mySQL database you created to these application files. Once this finishes, your terminal will look similar to this: INCREDIBLY IMPORTANT : You must copy the last line generated here in the successful installation message (outlined above), which has your password for the generated username of \"admin\". Paste this somewhere safe, where you will not lose it! Warning It cannot be stressed enough how important this step is, because losing this password means losing access to your installation and will require a full reinstallation. Reclaim Cloud has default permissions levels that will automatically meet the READ and WRITE permissions requirements for the specified folders in the successful installation message, so for this installation you will not need to change any permission levels. You may skip this step and proceed to the next section. If using this guide to install into any other environments, you may need to change permission levels. You can use the following commands to do so: chmod -R 755 . chmod -R 775 bootstrap/cache/ chmod -R 775 storage/ chmod -R 775 public/assets/javascripts/production/ Confirm Kora Installation Once finished with either of the subsections in the previous section of this guide, your Kora installation should be properly configured and now accessible via your browser. Hover on \"Application Servers\" as you have done previously and select \"Open in Browser\". If you set up Kora with a subdirectory URL, the phpinfo() page you previously visited in Step 7 of the section, \" Set up MySQL Database \" will again open. Add \"/kora\" to the URL and load this page, which should be the Kora login screen. If you successfully reached the Kora login page, Congratulations! Your install is at least partially working! The last required step to complete the work done via terminal is to delete the \"index.php\" file saved in your website's ROOT folder. This file should be deleted because it contains quite a bit of sensitive information, which would make your Kora website vulnerable. There is an easy command to reset your terminal prompt location back to where it begins, to the location it is whenever you open up terminal: cd ~ Once reset to the starting location, use this command to again reach the \"ROOT\" folder: cd /var/www/webroot/ROOT Once in \"ROOT\", use the remove command rm to delete the file: rm index.php Further Configure Kora Once Installed Back in the browser tab where the Kora login page loaded, log in using \"admin\" as the username and the password from the installation success message, which you previously saved. You will land on a page that looks like this: It is highly recommended that you at some point click through the introduction to get a quick tutorial on the basics of using Kora. Once done, click on the menu icon in the top-right to bring out the side-bar menu. Then click on \"Management\" at the bottom and select \"Kora Configuration File\" from the options that appear. The page that loads will look similar to this: Configure reCAPTCHA Note Because this subsection regards setting up an external service, there are no screenshots provided. Kora currently uses reCAPTCHA v2 Checkbox Kora uses Google's reCAPTCHA service for anti-robot protections. As you can see on the screenshot above, the configuration file is asking for a \"Recaptcha Private Key\" and \"Recaptcha Public Key\", which you will get from that service. The reCAPTCHA documentation can be found at https://developers.google.com/recaptcha , but to create the keys needed for your site, you will go to https://www.google.com/u/0/recaptcha/admin/ . Google will ask you to log in with a Gmail account. Many academic institutions have contracts with Google for using their tools via an educational arrangement; in the case of MSU, it is possible to give Google's login page an MSU email address, which then redirects to an MSU-related login page. Successfully logging in redirects back to reCAPTCHA under the MSU account. If this option is not available to you, unfortunately you will need a Gmail account to gain access to reCAPTCHA, which is required for completing Kora's installation setup. Once logged in, if this is your first time using reCAPTCHA, it will automatically go to the registration page. However, if you have used reCAPTCHA before, it will take you to a page displaying the information for the first reCAPTCHA key set you created. To create a new set of keys, click on the plus icon in the upper-right to register a new site. Give your new set any label you prefer (a suggestion would be to use your Kora installation URL). As noted above, Kora currently uses reCAPTCHA v2 \"I'm not a robot\" Checkbox version, so pick those options. Under \"Domains\", write your main domain (do not include \"http://\", \"https://\", or the subdirectory) and either hit Enter or click the plus sign to add it to the list of approved domains for the set of keys that are about to be generated. As an aside: this functionality means you could conceivably have multiple Kora installations, or even multiple sites that use reCAPTCHA v2 Checkbox, all using the same keys. The \"Owners\" section should auto-add your account email, but you can add another if you wish. Be sure to (review and) accept the Terms of Service. The final option is the checkbox for \"Send alerts to owners\", which you may wish to leave enabled so that you receive emailed updates when security issues with your site arise. Finally, click \"Submit\". Once redirected back to the main page, the lighter-blue bar at the top will display the number of sites registered and have a dropdown list for you to select whichever. Obviously if this is the first time setting one up, you will only have one. Ensure the one you intend to use is selected in the dropdown and then click on the gear icon in the upper right to go to the reCAPTCHA \"Settings\" page. Click on the \"reCAPTCHA keys\" dropdown list to display your site and secret keys. Copy the \"site key\" and paste it into your Kora Configuration File page text box titled \"Recaptcha Public Key\"; copy the \"secret key\" and paste it into the text box titled \"Recaptcha Private Key\". If you want to ensure this information is saved before setting up your email, scroll to the bottom of the page and click \"Update Configuration File\". GitLab Integration If desired, your Kora installation can use GitLab's authentication system to manage account creation and user login. For more information about this, including integration instruction, please see the section of \"Advanced Configuration\" called, \" GitLab Integration .\" Configure Kora Email For the Mail configuration settings on the \"Kora Configuration File\" page, provide the value from the \"SMTP = \" in the \"Mail Host\" text box. You should have saved this information back in Step 4 of \" Configure PHP Modules .\" More than likely though, the value saved will match the default value already on this page. Next, type in an address that you would like the email to appear from in the \"Mail From Address\" text box. This can technically be anything you wish, but it is good practice for the portion after the @ symbol to match your Kora installation's main url. For example, if your installation is accessible at the url https://env-0000000.us.reclaim.cloud/kora , you could set this email address to \"kora-admin@env-0000000.us.reclaim.cloud\". Set the \"Mail From Name\" to whatever you prefer, such as your own name, some name that references your specific version of Kora, or even a generic \"Kora Administrator\". Leave \"Mail User\" and \"Mail Password\" with their default settings in Kora. Click \"Update Configuration File\" at the bottom of the page. Admin User Profile Settings The final portion of configuration is for the admin account's profile settings. This section is specific to what is a part of the initial configuration for Kora, but this documentation website also has a more complete guide for user profile settings . To get there to the profile settings page, select the user icon in the upper-right. Then choose \"Edit My Profile.\" On this page, you can change the username and password that were auto-generated when installing Kora, however it is probably best to leave these alone. However, it is important to change the default admin email here because it is shown to users at various locations throughout Kora. It should be changed to an address which is often checked; unless you will be doing more with the SMTP server you have set up as a part of this guide, this means it should not be set to the \"Mail From Address\" used on the \"Kora Configuration File\" page. You can also change the displayed admin name, if you wish, as it is also displayed to users in various locations. Finally, should you wish to change the admin account password from what was auto-generated to one you prefer, you can do that here. Once all these have been set, click \"Update Profile\" to complete your setup. Testing the Installation To check whether or not your installation works properly: Create a Project . Create a Form in that project. Create a Field in that project with the field type set to one of the File types (setting it to \"Documents\" will give the greatest flexibility for uploading any file to test). And finally, create a Record where you upload an example file. If the creation of that Record with an uploaded file succeeds, such that the uploaded file is viewable or downloadable when clicked upon, everything should be configured properly. If this fails, please check that you have properly enabled all the PHP modules noted in Step 3 of \" Configure PHP Modules ,\" and properly set the permission levels described in either Step 20 of \" Installation via Zipped File as a URL Subdirectory ,\" or Step 24 of \" Installation via GitHub Repository and Cloud's Development Manager .\" Alter Cloud Environment After creation In some cases, it may be necessary for you to adjust the environment into which you've installed Kora. For instance, if you find your Kora website is quite popular and needs more RAM, CPU, or Storage than you original configured, you can alter the environment. Hover on the environment and click on the icon for \"Change Environment Topology\": The environment configuration modal will open, where you can make the necessary adjustments. For instance, you can increase the Scaling Limits for either your Apache/PHP layer or MySQL layer. You can also increase the disk limit of either. The disk limit setting is highlighted in this screenshot: If increasing disk size, be sure to adjust the size on the Apache/PHP layer, as this is the one that corresponds to your Kora installation files; the disk limit on your MySQL layer corresponds to the database itself and is unlikely to need an adjustment upward from its default.","title":"Installing Kora on Reclaim Cloud"},{"location":"getting-started/cloud_install/#installing-kora-on-reclaim-cloud","text":"This guide is for installing Kora in a Reclaim Cloud environment.","title":"Installing Kora on Reclaim Cloud"},{"location":"getting-started/cloud_install/#set-up-scalable-cloud-environment","text":"After creating an account, begin from your Dashboard. Select \"Create New Environment\" in the middle: Or \"NEW ENVIRONMENT\" in the top-left: In the modal that appears, Select PHP Tab. It will look like this: Turn on SSL by clicking \"SSL\" in left panel area, then toggling the switch at the top of the middle panel to \"On\". Return to the Apache Layer view by clicking on it, which is the blue block with a red feather in the middle. Leave Apache layer as-is; Click on \"SQL\" layer under it to add MySQL Layer. Use the dropdown on this block to change from MariaDB to MySQL SE 8.0.20. While still viewing the settings for the Apache layer, in middle panel area, use the PHP dropdown menu to change to version 7.2.32. In the same area area, use slider for \"Application Servers\" to set Scaling Limit to at least 8 cloudlets, which will set the max reserve to at least Kora's minimum RAM requirement of 1 GB. The reserve can be set higher than this, if desired; doing so will allow your environment to use more CPU and/or RAM if your installation requires it at some future time. You will only be charged for higher processing power if your Kora website has enough people using it simultaneously to require the extra resources. Leave the reserved level on 1 cloudlet. Click on \"SQL\" block to adjust the MySQL Layer settings. In middle panel area, use slider for \"Application Servers\" to set Scaling Limit to at least 8 cloudlets, which will set the max reserve to at least Kora's minimum RAM requirement of 1 GB. Either leave the reserved level at its default of 3 cloudlets, or drop it to 1 cloudlet. To note once again, the reserve can be set higher than this, if desired; doing so will allow your environment to use more CPU and/or RAM if your installation requires it at some future time. You will only be charged for higher processing power if your Kora website has enough people using it simultaneously to require the extra resources. The minimum settings would look like this: Feel free to review all these settings again, but you can always adjust these later if needed (see the section, \" Alter Cloud Environment After Creation \" below). When ready, click \"Create\" in lower-right to initialize the environment.","title":"Set up Scalable Cloud Environment"},{"location":"getting-started/cloud_install/#set-up-mysql-database","text":"After the environment initializes, you'll receive emails. One, with subject similar to \"New Reclaim Cloud Environment... Created\" lets you know the process has completed. Other email, with subject similar to \"MySQL Node Successfully Added to Your Reclaim Cloud Environment,\" contains important login information for MySQL. Do not delete this email without first saving the host, username, and password contained within. In your dashboard, your newly initialized environment's components will be visible. There will be a notification on the right-hand side informing you that this process has completed. you can hover on that notification to make the \"X\" visible, then click on it to dismiss this notification. Hover over the \"Node\" contained within \"SQL Databases\" and click icon for \"Open in Browser\". This will open a new tab with a phpMyAdmin login screen. Use credentials from the MySQL email to log into phpMyAdmin; the username is commonly root. Once logged in, the main dashboard will load. Click the tab for \"User Accounts\" in the top menu, highlighted in the screenshot above. This will bring up the list of existing users. Click on \"Add user account\" (highlighted in the previous screenshot) to reach the page for adding new database users. In \"User name\" field, write kora. Leave the \"Host name\" defaulted to the \"Any host\" dropdown selection and the default text field content. For the password, click the \"Generate\" button for \"Generate password.\" This will populate both password text boxes and provide a plain-text display of the generated password. Copy this password somewhere safe as you will need it when setting up Kora. Finally, check the box for \"Create database with same name and grant all privileges.\" Scroll to bottom and click \"Go\" button in lower-right. Close this browser tab and return to the main Reclaim Cloud tab.","title":"Set up MySQL Database"},{"location":"getting-started/cloud_install/#configure-php-modules","text":"In the dashboard, hover over \"Application Servers\" and click on the wrench icon, for \"Config.\" This will bring up a panel at the bottom of the window, with a tab labeled \"Application Servers : Configs\". On left-hand side of this panel, scroll down and select \"php.ini.\" The file will load on the right-hand side, as a new tab labeled \"php.ini.\" Use the built-in \"Search\" function to locate each of these modules: gd , imagick , imap , intl , ldap , pgsql (NOT \"pdo_pgsql\"), snmp , soap , wddx , xmlrpc , xsl Each of their code blocks will look similar to this one, for gd : Some modules will have more lines in their block than others. For instance, imagick has a comment line with the url where the module is found, the line for enabling the extension, and then two lines for configuring the module. [imagick] ; http://php.net/manual/en/book.imagick.php ;extension=imagick.so imagick.locale_fix = 0 ; Fixes a drawing bug with locales that use ',' as float separators imagick.progress_monitor = 0 ; Used to enable the image progress monitor In this case, enable imagick by removing the ; from the line ;extension=imagick.so so that the section looks like: [imagick] ; http://php.net/manual/en/book.imagick.php extension=imagick.so imagick.locale_fix = 0 ; Fixes a drawing bug with locales that use ',' as float separators imagick.progress_monitor = 0 ; Used to enable the image progress monitor Do this for all 11 of the listed modules. For wddx , remove the # which is there instead of ; . Enable the mail function. Search for \"smtp\" to find the section that begins with: [mail] ;SMTP = {mail host} ;port = {port-number} The first two lines of this module defines the server location and the port. The full code of this section is not reproduced here and portions have been changed, for security purposes. Remove the ; from the beginning of each of these two lines, and write down the specified value for SMTP = . This will be used when setting up the email function in Kora. Once you have enabled all the modules and the mail configurations, Click \"Save\" at the top of this panel area. After saving, hover on \"Application Servers\" and click on the icon for \"Restart Nodes.\" Click \"Yes\" for the warning for \"Restart Apache nodes?\" Wait for the notification indicating that the nodes have been successfully restarted. Next, hover on \"Application Servers\" and click on the icon for \"Open in Browser\" New tab will open with a page displaying information generated by the function phpinfo() . The top of it will look like this: You can use this page to confirm that all eleven of these modules have been loaded; those that are loaded have their own section headings. If any are not loaded, return to the php.ini file to confirm you properly deleted the semi-colon from the extension=... line that corresponds to the module in question. When finished, close this browser tab.","title":"Configure PHP Modules"},{"location":"getting-started/cloud_install/#import-and-install-kora-with-site-url-considerations","text":"There are two paths for importing Kora into your Reclaim Cloud environment. There are also two basic forms your Kora website's URL can take. To demonstrate both options for both of these, this section is split into two subsections, to highlight the two different versions of each. If you wish to \"mix-and-match\" these processes, this should be a fairly straightforward adjustment to make.","title":"Import and Install Kora, with Site URL Considerations"},{"location":"getting-started/cloud_install/#installation-via-zipped-file-as-a-url-subdirectory","text":"When creating your new Kora website, you have two basic options for how your URL will be configured. This first option is for instances where your installation will be accessible at, as an example, https://example.org/subdirectory . The subdirectory in this example URL is appropriately named \"subdirectory.\" Back at the dashboard, hover on \"Application Servers\" and click on icon for \"Web SSH\" Display will open with an SSH terminal Use the following command to navigate to the directory just above your environment's Document Root (contents of Document Root is what's visible via your environment's URL) cd /var/www/webroot You can either type this code in, or copy it and then paste it into the terminal using a keyboard shortcut. Your terminal will look like this: Open a new browser tab and navigate to https://github.com/matrix-msu/kora/releases . Click the dropdown menu for \"Assets\" of most recent release. Right-click on the \"Source Code (zip)\" file link and copy this file's URL. Return to the Reclaim Cloud environment tab. Type wget then a space, then paste the file URL you just copied. This is an example of what your command will look like after pasting: wget https://github.com/matrix-msu/kora/archive/3.0.0.zip Hit \"Enter\" and let the command run. During the file transfer process, your terminal will look similar to this: The file will be named the last part of the URL where you fetched it from. In this example, the name is 3.0.0.zip . If needed, you can run the command ls to view a list of the directory's contents. The newly-added zip file should be listed. Run the following command to unzip this file into this directory. Make sure to change the filename in the command to match the one that is listed. unzip 3.0.0.zip The system will create a new directory with the contents of this zip in a directory \"kora-[zip-file-name]\". In this example, the directory is named \"kora-3.0.0\"; if needed, you can again use ls to confirm the directory's name. You can also see the name of the directory at the beginning of each line that displays after running the unzip command: Use the move command to rename the directory as \"kora\". Be sure to use the exact directory name that displayed. An example of this command is: mv kora-3.0.0 kora For the mv command, the first part is the name of the current directory/file, and the second part is the desired name to change it to. If you wish, run ls once again to confirm the name change Use the following command to change your location to the \"kora\" directory: cd kora After the mv and cd commands, your terminal will look similar to this: Use the copy command cp to make a new copy of the \".env.example\" file, but with the name \".env\" This command looks like: cp .env.example .env When cp is successful, there won't be a message; the terminal will simply create a new line with the command prompt. So your terminal will look like this: Use the nano file editing program built into this version of Linux to make changes to the .env file. The command is: nano .env This file will look similar to this when displayed by nano : You can navigate around this file by using the directional arrows on your keyboard. Locate the block of lines that say: DB_HOST=localhost DB_DATABASE=kora DB_USERNAME=kora DB_PASSWORD=kora DB_DEFAULT=mysql DB_PREFIX=kora_ For the DB_HOST= line, change \"localhost\" to the \"host\" you saved from the MySQL email. Pasting the host requires a nano-specific keyboard shortcut; for Windows machines this is ctrl + shift + v If you used \"kora\" for the user you set up in phpMyAdmin, and you checked the \"Create database with same name and grant all privileges\" box when creating it, leave the DB_DATABASE= and DB_USERNAME= lines alone; otherwise, change them to match the username and database names you created in phpMyAdmin. On the DB_PASSWORD= line, change \"kora\" to the password you saved from the process of creating the user in phpMyAdmin. Again, use the nano-specific keyboard shortcut for pasting, if copied from elsewhere. (You can see how this file will appear after editing in the screenshot below, in Step 15.) Leave the rest of this file alone. Use the proper keyboard shortcut for exiting nano on your computer; for a Windows machine, this is crtl + x. The system will ask you if you wish to save your changes; hit \"y\" for yes. Then hit \"enter\" to confirm that the file name is \".env\" Now, change your directory to public: cd public Copy the \".htaccess.example\" file in this directory using the cp command, as \".htaccess\" cp .htaccess.example .htaccess After you have done this, your terminal will look similar to this: Next, edit this file, again using nano nano .htaccess Find the following section of code in this file: RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] #RewriteBase /your_base_url It is also highlighted in this image: From the final line of this section of code, remove # and then change \"/your_base_url\" to \"/kora\". This tells the system that your Kora install's url will be https://example.org/kora (if your subdirectory is something different, change this line accordingly) Save this file using the same process as explained in the case of editing \".env\" above. Leave the file name as \".htaccess\". Navigate upward to the main kora directory: cd .. Run the following command to install Kora php artisan kora:install This will install Kora into your environment by completing a number of tasks, such as linking the mySQL database you created to these application files. Once this finishes, your terminal will look similar to this: INCREDIBLY IMPORTANT : You must copy the last line generated here in the successful installation message (outlined above), which has your password for the generated username of \"admin\". Paste this somewhere safe, where you will not lose it! Warning It cannot be stressed enough how important this step is, because losing this password means losing access to your installation and will require a full reinstallation. Reclaim Cloud has default permissions levels that will automatically meet the READ and WRITE permissions requirements for the specified folders in the successful installation message, so for this installation you will not need to change any permission levels. You may skip this step and proceed to #21. If using this guide to install into any other environments, you may need to change permission levels. You can use the following commands to do so: chmod -R 755 . chmod -R 775 bootstrap/cache/ chmod -R 775 storage/ chmod -R 775 public/assets/javascripts/production/ Navigate to your RootDirectory, which is the directory that your server points your URL at; in this case, use the following two commands: cd .. cd ROOT Create a symbolic link in this directory, that corresponds to the path you wrote in the .htaccess file before. For example, if you changed \"/your_base_url\" to \"/kora\", use this command for your symbolic link creation: ln -s ../kora/public kora Once you have run this command, your terminal will look similar to this: At this point you may skip the next sub-section and proceed to the next section, \" Further Configure Kora Once Installed .\"","title":"Installation via Zipped File as a URL Subdirectory"},{"location":"getting-started/cloud_install/#installation-via-github-repository-and-clouds-development-manager","text":"The second option for configuring your webpage's URL is to have it accessible at a main-level domain (or, technically in the case of the Reclaim Cloud-provided URLS, subdomain). Auto-generated Reclaim Cloud URLs are usually in the form of https://[environment-name].us.reclaim.cloud . In this example, your Kora installation would be accessible at this URL, without an additional subdirectory on the end. (For an explanation of the subdirectory URL case, please see the previous sub-section, \" Installation via Zipped File as a URL Subdirectory .\") In the dashboard, hover on the line \"Deployments\" for your environment, and click on \"Deploy from Git / SVN.\" This will open a new modal, for configuring a repository from which to pull files. Click on the dropdown menu for \"Repository\" and choose \"Add New Repository.\" Another new modal will open, for adding a new repository. In this modal, give this configuration a name; for instance \"Kora,\" since this will be pointed at the official Kora repository managed by Matrix at MSU. Point it at this repository by pasting in the following address into the \"URL\" text box: https://github.com/matrix-msu/kora Leave the \"Branch\" text box with its default \"master\" text. The modal should look similar to this: Click \"Add\" on this modal (highlighted above), which will return you to the previous modal with \"Kora\" selected for the \"Repository.\" Again leave \"Branch\" text as defaulted to \"master\"; additionally, also leave the \"Path\" text box with its \"ROOT\" default. Click \"Deploy\" in the lower-right to have the Development Manager transfer all of the files from the kora repository on GitHub into your environment's ROOT folder. Currently, your ROOT folder is set as your URL's DocumentRoot, but this would be quite insecure for your Kora application, so this must be changed. To do so, once again hover over \"Application Servers\" and again click on wrench icon for \"Config.\" This will bring up the \"Application Servers : Configs\" tab in the bottom panel. In the left-hand pane of this panel, click on the \"conf\" folder. This will show its contents in the right-hand pane. Double-click on the file, \"httpd.conf\" Search this file for \"DocumentRoot,\" which should find four matches. The first two, shown in the image below, are in a section where DocumentRoot is defined as a directory tree leading to \"ROOT\" Change this line by adding \"/public\", to read as follows: DocumentRoot \"/var/www/webroot/ROOT/public\" The next match when searching for DocumentRoot will be the comment above a line of code that reads, <Directory \"/var/www/webroot/ROOT\"> Add \"/public\" to this line as well, so that it reads, <Directory \"/var/www/webroot/ROOT/public\"> The final match for \"DocumentRoot\" in this file will be in the middle of a code block that reads, ServerAdmin webmaster@domain.com DocumentRoot /var/www/webroot/ROOT ServerName website.jelastic.com ServerAlias * ErrorLog logs/dummy-host.jelastic.com-error_log CustomLog logs/dummy-host.jelastic.com-access_log common </VirtualHost> It is the second line here, beginning with \"DocumentRoot,\" that will need to be altered. As you may have guessed, you will add \"/public\" to this line as well. It will read, DocumentRoot /var/www/webroot/ROOT/public Once these changes have been made, click on \"Save,\" and then hover on \"Application Servers\" and click on the icon for \"Restart Nodes.\" After your nodes restart, hover on \"Application Servers\" again and click on icon for \"Web SSH\" The panel at the bottom will open a new tab with an SSH terminal. Use the following command to navigate to the directory where the Development Manager has transferred all the kora repository files to: cd /var/www/webroot/ROOT Your terminal will look like this: Use the copy command cp to make a new copy of the \".env.example\" file, but with the name \".env\" This command looks like: cp .env.example .env When cp is successful, there won't be a message; the terminal will simply create a new line with the command prompt. So your terminal will look like this: Use the nano file editing program built into this version of Linux to make changes to the .env file. The command is: nano .env This file will look similar to this when displayed by nano : You can navigate around this file by using the directional arrows on your keyboard. Locate the block of lines that say: DB_HOST=localhost DB_DATABASE=kora DB_USERNAME=kora DB_PASSWORD=kora DB_DEFAULT=mysql DB_PREFIX=kora_ For the DB_HOST= line, change \"localhost\" to the \"host\" you saved from the MySQL email. Pasting the host requires a nano-specific keyboard shortcut; for Windows machines this is ctrl + shift + v If you used \"kora\" for the user you set up in phpMyAdmin, and you checked the \"Create database with same name and grant all privileges\" box when creating it, leave the DB_DATABASE= and DB_USERNAME= lines alone; otherwise, change them to match the username and database names you created in phpMyAdmin. On the DB_PASSWORD= line, change \"kora\" to the password you saved from the process of creating the user in phpMyAdmin. Again, use the nano-specific keyboard shortcut for pasting, if copied from elsewhere. (You can see how this file will appear after editing in the screenshot below, in Step 19.) Leave the rest of this file alone. Use the proper keyboard shortcut for exiting nano on your computer; for a Windows machine, this is crtl + x. The system will ask you if you wish to save your changes; hit \"y\" for yes. Then hit \"enter\" to confirm that the file name is \".env\" Now, change your directory to public: cd public Copy the \".htaccess.example\" file in this directory using the cp command, as \".htaccess\" cp .htaccess.example .htaccess After you have done this, your terminal will look similar to this: Next, edit this file, again using nano nano .htaccess Find the following section of code in this file: RewriteEngine On #RewriteBase #add base url ex: www.website.com[/this part is your base url, the url subdirectory where you want your installation to be accessible from] #RewriteBase /your_base_url It is also highlighted in this image: From the final line of this section of code, remove # and then change \"/your_base_url\" to \"/kora\". This tells the system that your Kora install's url will be https://example.org/kora (if your subdirectory is something different, change this line accordingly) Save this file using the same process as explained in the case of editing \".env\" above. Leave the file name as \"\".htaccess\". Navigate upward to the main kora directory: cd .. Run the following command to install Kora php artisan kora:install This will install Kora into your environment by completing a number of tasks, such as linking the mySQL database you created to these application files. Once this finishes, your terminal will look similar to this: INCREDIBLY IMPORTANT : You must copy the last line generated here in the successful installation message (outlined above), which has your password for the generated username of \"admin\". Paste this somewhere safe, where you will not lose it! Warning It cannot be stressed enough how important this step is, because losing this password means losing access to your installation and will require a full reinstallation. Reclaim Cloud has default permissions levels that will automatically meet the READ and WRITE permissions requirements for the specified folders in the successful installation message, so for this installation you will not need to change any permission levels. You may skip this step and proceed to the next section. If using this guide to install into any other environments, you may need to change permission levels. You can use the following commands to do so: chmod -R 755 . chmod -R 775 bootstrap/cache/ chmod -R 775 storage/ chmod -R 775 public/assets/javascripts/production/","title":"Installation via GitHub Repository and Cloud's Development Manager"},{"location":"getting-started/cloud_install/#confirm-kora-installation","text":"Once finished with either of the subsections in the previous section of this guide, your Kora installation should be properly configured and now accessible via your browser. Hover on \"Application Servers\" as you have done previously and select \"Open in Browser\". If you set up Kora with a subdirectory URL, the phpinfo() page you previously visited in Step 7 of the section, \" Set up MySQL Database \" will again open. Add \"/kora\" to the URL and load this page, which should be the Kora login screen. If you successfully reached the Kora login page, Congratulations! Your install is at least partially working! The last required step to complete the work done via terminal is to delete the \"index.php\" file saved in your website's ROOT folder. This file should be deleted because it contains quite a bit of sensitive information, which would make your Kora website vulnerable. There is an easy command to reset your terminal prompt location back to where it begins, to the location it is whenever you open up terminal: cd ~ Once reset to the starting location, use this command to again reach the \"ROOT\" folder: cd /var/www/webroot/ROOT Once in \"ROOT\", use the remove command rm to delete the file: rm index.php","title":"Confirm Kora Installation"},{"location":"getting-started/cloud_install/#further-configure-kora-once-installed","text":"Back in the browser tab where the Kora login page loaded, log in using \"admin\" as the username and the password from the installation success message, which you previously saved. You will land on a page that looks like this: It is highly recommended that you at some point click through the introduction to get a quick tutorial on the basics of using Kora. Once done, click on the menu icon in the top-right to bring out the side-bar menu. Then click on \"Management\" at the bottom and select \"Kora Configuration File\" from the options that appear. The page that loads will look similar to this:","title":"Further Configure Kora Once Installed"},{"location":"getting-started/cloud_install/#configure-recaptcha","text":"Note Because this subsection regards setting up an external service, there are no screenshots provided. Kora currently uses reCAPTCHA v2 Checkbox Kora uses Google's reCAPTCHA service for anti-robot protections. As you can see on the screenshot above, the configuration file is asking for a \"Recaptcha Private Key\" and \"Recaptcha Public Key\", which you will get from that service. The reCAPTCHA documentation can be found at https://developers.google.com/recaptcha , but to create the keys needed for your site, you will go to https://www.google.com/u/0/recaptcha/admin/ . Google will ask you to log in with a Gmail account. Many academic institutions have contracts with Google for using their tools via an educational arrangement; in the case of MSU, it is possible to give Google's login page an MSU email address, which then redirects to an MSU-related login page. Successfully logging in redirects back to reCAPTCHA under the MSU account. If this option is not available to you, unfortunately you will need a Gmail account to gain access to reCAPTCHA, which is required for completing Kora's installation setup. Once logged in, if this is your first time using reCAPTCHA, it will automatically go to the registration page. However, if you have used reCAPTCHA before, it will take you to a page displaying the information for the first reCAPTCHA key set you created. To create a new set of keys, click on the plus icon in the upper-right to register a new site. Give your new set any label you prefer (a suggestion would be to use your Kora installation URL). As noted above, Kora currently uses reCAPTCHA v2 \"I'm not a robot\" Checkbox version, so pick those options. Under \"Domains\", write your main domain (do not include \"http://\", \"https://\", or the subdirectory) and either hit Enter or click the plus sign to add it to the list of approved domains for the set of keys that are about to be generated. As an aside: this functionality means you could conceivably have multiple Kora installations, or even multiple sites that use reCAPTCHA v2 Checkbox, all using the same keys. The \"Owners\" section should auto-add your account email, but you can add another if you wish. Be sure to (review and) accept the Terms of Service. The final option is the checkbox for \"Send alerts to owners\", which you may wish to leave enabled so that you receive emailed updates when security issues with your site arise. Finally, click \"Submit\". Once redirected back to the main page, the lighter-blue bar at the top will display the number of sites registered and have a dropdown list for you to select whichever. Obviously if this is the first time setting one up, you will only have one. Ensure the one you intend to use is selected in the dropdown and then click on the gear icon in the upper right to go to the reCAPTCHA \"Settings\" page. Click on the \"reCAPTCHA keys\" dropdown list to display your site and secret keys. Copy the \"site key\" and paste it into your Kora Configuration File page text box titled \"Recaptcha Public Key\"; copy the \"secret key\" and paste it into the text box titled \"Recaptcha Private Key\". If you want to ensure this information is saved before setting up your email, scroll to the bottom of the page and click \"Update Configuration File\".","title":"Configure reCAPTCHA"},{"location":"getting-started/cloud_install/#gitlab-integration","text":"If desired, your Kora installation can use GitLab's authentication system to manage account creation and user login. For more information about this, including integration instruction, please see the section of \"Advanced Configuration\" called, \" GitLab Integration .\"","title":"GitLab Integration"},{"location":"getting-started/cloud_install/#configure-kora-email","text":"For the Mail configuration settings on the \"Kora Configuration File\" page, provide the value from the \"SMTP = \" in the \"Mail Host\" text box. You should have saved this information back in Step 4 of \" Configure PHP Modules .\" More than likely though, the value saved will match the default value already on this page. Next, type in an address that you would like the email to appear from in the \"Mail From Address\" text box. This can technically be anything you wish, but it is good practice for the portion after the @ symbol to match your Kora installation's main url. For example, if your installation is accessible at the url https://env-0000000.us.reclaim.cloud/kora , you could set this email address to \"kora-admin@env-0000000.us.reclaim.cloud\". Set the \"Mail From Name\" to whatever you prefer, such as your own name, some name that references your specific version of Kora, or even a generic \"Kora Administrator\". Leave \"Mail User\" and \"Mail Password\" with their default settings in Kora. Click \"Update Configuration File\" at the bottom of the page.","title":"Configure Kora Email"},{"location":"getting-started/cloud_install/#admin-user-profile-settings","text":"The final portion of configuration is for the admin account's profile settings. This section is specific to what is a part of the initial configuration for Kora, but this documentation website also has a more complete guide for user profile settings . To get there to the profile settings page, select the user icon in the upper-right. Then choose \"Edit My Profile.\" On this page, you can change the username and password that were auto-generated when installing Kora, however it is probably best to leave these alone. However, it is important to change the default admin email here because it is shown to users at various locations throughout Kora. It should be changed to an address which is often checked; unless you will be doing more with the SMTP server you have set up as a part of this guide, this means it should not be set to the \"Mail From Address\" used on the \"Kora Configuration File\" page. You can also change the displayed admin name, if you wish, as it is also displayed to users in various locations. Finally, should you wish to change the admin account password from what was auto-generated to one you prefer, you can do that here. Once all these have been set, click \"Update Profile\" to complete your setup.","title":"Admin User Profile Settings"},{"location":"getting-started/cloud_install/#testing-the-installation","text":"To check whether or not your installation works properly: Create a Project . Create a Form in that project. Create a Field in that project with the field type set to one of the File types (setting it to \"Documents\" will give the greatest flexibility for uploading any file to test). And finally, create a Record where you upload an example file. If the creation of that Record with an uploaded file succeeds, such that the uploaded file is viewable or downloadable when clicked upon, everything should be configured properly. If this fails, please check that you have properly enabled all the PHP modules noted in Step 3 of \" Configure PHP Modules ,\" and properly set the permission levels described in either Step 20 of \" Installation via Zipped File as a URL Subdirectory ,\" or Step 24 of \" Installation via GitHub Repository and Cloud's Development Manager .\"","title":"Testing the Installation"},{"location":"getting-started/cloud_install/#alter-cloud-environment-after-creation","text":"In some cases, it may be necessary for you to adjust the environment into which you've installed Kora. For instance, if you find your Kora website is quite popular and needs more RAM, CPU, or Storage than you original configured, you can alter the environment. Hover on the environment and click on the icon for \"Change Environment Topology\": The environment configuration modal will open, where you can make the necessary adjustments. For instance, you can increase the Scaling Limits for either your Apache/PHP layer or MySQL layer. You can also increase the disk limit of either. The disk limit setting is highlighted in this screenshot: If increasing disk size, be sure to adjust the size on the Apache/PHP layer, as this is the one that corresponds to your Kora installation files; the disk limit on your MySQL layer corresponds to the database itself and is unlikely to need an adjustment upward from its default.","title":"Alter Cloud Environment After creation"},{"location":"getting-started/core_concepts/","text":"Understanding Core Concepts Like many other digital repository, archive, and library platforms, Kora is designed with a specific kind of architecture. This architecture determines both how projects using Kora are structured as well as the workflow used by those working on the projects. In the case of Kora, this architecture is hierarchical, in which relevant components are nested within one another. In order to get the most out of Kora, it is important to understand these components, what role they play, and how the interact with one another. Kora Installation A Kora installation can have any number of discreet projects (more on Projects below). For the most part, each project in a Kora installation is its own silo. The only exception to this is that from within the Kora installation, admins can search across multiple projects (cross-project searching). In addition, the Kora API can be used to display, search, and/or browse records from across multiple projects from the same installation, in one public website. While a Kora installation can contain any number of projects, you might also feel the need to install more than one instance of Kora on a server, for instance to isolate one specific project in its own API-accessible container. To learn about what you need to install Kora on a server, check out System Requirements . This documentation includes instructions for installing Kora on Domain of One's Own or a Reclaim Hosting personal account , or on a Reclaim Cloud account . For other hosting services, ones with a cPanel interface will find the Domain of One's Own guide useful; for Terminal or SSH-accessed hosting services, the Reclaim Cloud guide may provide much of the needed information for installing Kora, though many steps will need to be significantly adjusted. There are some things that you can only do in Kora as an admin at the installation level, such as creating projects and managing Kora tokens and API requests. In addition, you can add users to a Kora installation without assigning them to a particular project. This creates a pool of users that can be easily added to any projects by installation admins, or from within individual projects by project admins. To learn more about Kora Admins (and all other user types), check out \" Understanding Kora User Types and Permissions .\" Project In Kora, a Project is a digital repository. It has a particular theme or focus (a specific collection, for instance), and contains records (metadata + digital objects) related to that theme or focus, as well as forms for creating those records (more on that below). Each project has its own set of users (each of whom can have different privileges within that project). A Project Admin sits at the top of the user pyramid within a project. While they can't create new projects, they pretty much can do anything within the project for which they are an admin. This includes creating forms, editing forms, deleting forms, creating field value presets, importing and exporting forms, inviting users, and managing user permissions. To get started, check out our guide, \" Creating a Project .\" Form Forms are essentially the mechanism by which records are generated. In this regard, forms in Kora are analogous to paper forms. A paper form is meaningless until you fill it out - which creates a record of some sort. In Kora, forms (which live within a project) are filled out by a user, thereby generating a record. Forms are essentially data entry tools. The important thing to note is that forms create structured data. Each record created with a particular form will be structured in the exact same way. What a form looks like (the form's Field Types \u2013 more on that below) is determined by your project's metadata scheme. Like all digital repository, library, and archive projects, the metadata scheme is built and tuned in advance of any technical work. In the case of Kora, that metadata scheme would be used to create a project's forms. A project can have any number of varying forms, each for a different type of record or object. For instance, if your project contained both historic documents and archaeological artifacts, you could create a form for each. When a user wanted to generate a record for a document, they'd use the document form. When they wanted to generate a record for an artifact, they'd use the artifact form. In Kora, users can also connect records created using one form to those created via another by using an Associator (which is a specific Field Type - more on those below). To learn more about Forms in Kora, start by reading \" Creating a Form .\" Field Types In Kora, Field Types are what makes a form something you can actually fill out to create a record. Imagine a form that didn't have any text fields or checkboxes. This would be a form without field types. Kora has a wide variety of field types, each of which are purpose built to allow users to enter certain types of data. For instance the Geolocator field type allows you to enter geospatial information (in the form of Latitude/Longitude or an address), while a Text field type (which is probably the most common type) allows users to enter any plan text into a record. Kora also includes a variety of very specialized field types. One of the most powerful is the Associator , which allows you to create a connection from one record to others. To learn more about Kora's various Field Types, check out \" Understanding Field Types .\" Records Kora has a flexible approach to what it considers a record. For many digital repository and archive platforms, a record centers on a digital object (which is most often a digitized version of a physical object - a book, a document, a wax cylinder, an archaeological artifact). In the case of Kora, a record centers an entity more broadly-defined \u2013 a person, a place, or a thing. A record is a collection of metadata that describes that entity. For instance, a Kora project could have place records, each of which is a collection of metadata that describes a specific place. That place record could also include multiple digital objects relevant to that place (historic photos, maps, etc). Similarly, a Kora project could have people records \u2013 each of which was a collection of metadata that described an individual. Kora can also have records for digitized physical objects. One of the interesting things about Kora is that you can associate (using the Associator field type) different relevant records. So, instead of including relevant digital images of an individual in their person record, the images would have their own records (each with robust metadata) that were then associated with the relevant person record. Records are generated by forms, whose structure is determined by the project's metadata scheme for that type of entity (historic document, archaeological artifact, person, place, etc). To learn more about working with records in Kora, start by reading Creating a Record .","title":"Understanding Core Concepts"},{"location":"getting-started/core_concepts/#understanding-core-concepts","text":"Like many other digital repository, archive, and library platforms, Kora is designed with a specific kind of architecture. This architecture determines both how projects using Kora are structured as well as the workflow used by those working on the projects. In the case of Kora, this architecture is hierarchical, in which relevant components are nested within one another. In order to get the most out of Kora, it is important to understand these components, what role they play, and how the interact with one another.","title":"Understanding Core Concepts"},{"location":"getting-started/core_concepts/#kora-installation","text":"A Kora installation can have any number of discreet projects (more on Projects below). For the most part, each project in a Kora installation is its own silo. The only exception to this is that from within the Kora installation, admins can search across multiple projects (cross-project searching). In addition, the Kora API can be used to display, search, and/or browse records from across multiple projects from the same installation, in one public website. While a Kora installation can contain any number of projects, you might also feel the need to install more than one instance of Kora on a server, for instance to isolate one specific project in its own API-accessible container. To learn about what you need to install Kora on a server, check out System Requirements . This documentation includes instructions for installing Kora on Domain of One's Own or a Reclaim Hosting personal account , or on a Reclaim Cloud account . For other hosting services, ones with a cPanel interface will find the Domain of One's Own guide useful; for Terminal or SSH-accessed hosting services, the Reclaim Cloud guide may provide much of the needed information for installing Kora, though many steps will need to be significantly adjusted. There are some things that you can only do in Kora as an admin at the installation level, such as creating projects and managing Kora tokens and API requests. In addition, you can add users to a Kora installation without assigning them to a particular project. This creates a pool of users that can be easily added to any projects by installation admins, or from within individual projects by project admins. To learn more about Kora Admins (and all other user types), check out \" Understanding Kora User Types and Permissions .\"","title":"Kora Installation"},{"location":"getting-started/core_concepts/#project","text":"In Kora, a Project is a digital repository. It has a particular theme or focus (a specific collection, for instance), and contains records (metadata + digital objects) related to that theme or focus, as well as forms for creating those records (more on that below). Each project has its own set of users (each of whom can have different privileges within that project). A Project Admin sits at the top of the user pyramid within a project. While they can't create new projects, they pretty much can do anything within the project for which they are an admin. This includes creating forms, editing forms, deleting forms, creating field value presets, importing and exporting forms, inviting users, and managing user permissions. To get started, check out our guide, \" Creating a Project .\"","title":"Project"},{"location":"getting-started/core_concepts/#form","text":"Forms are essentially the mechanism by which records are generated. In this regard, forms in Kora are analogous to paper forms. A paper form is meaningless until you fill it out - which creates a record of some sort. In Kora, forms (which live within a project) are filled out by a user, thereby generating a record. Forms are essentially data entry tools. The important thing to note is that forms create structured data. Each record created with a particular form will be structured in the exact same way. What a form looks like (the form's Field Types \u2013 more on that below) is determined by your project's metadata scheme. Like all digital repository, library, and archive projects, the metadata scheme is built and tuned in advance of any technical work. In the case of Kora, that metadata scheme would be used to create a project's forms. A project can have any number of varying forms, each for a different type of record or object. For instance, if your project contained both historic documents and archaeological artifacts, you could create a form for each. When a user wanted to generate a record for a document, they'd use the document form. When they wanted to generate a record for an artifact, they'd use the artifact form. In Kora, users can also connect records created using one form to those created via another by using an Associator (which is a specific Field Type - more on those below). To learn more about Forms in Kora, start by reading \" Creating a Form .\"","title":"Form"},{"location":"getting-started/core_concepts/#field-types","text":"In Kora, Field Types are what makes a form something you can actually fill out to create a record. Imagine a form that didn't have any text fields or checkboxes. This would be a form without field types. Kora has a wide variety of field types, each of which are purpose built to allow users to enter certain types of data. For instance the Geolocator field type allows you to enter geospatial information (in the form of Latitude/Longitude or an address), while a Text field type (which is probably the most common type) allows users to enter any plan text into a record. Kora also includes a variety of very specialized field types. One of the most powerful is the Associator , which allows you to create a connection from one record to others. To learn more about Kora's various Field Types, check out \" Understanding Field Types .\"","title":"Field Types"},{"location":"getting-started/core_concepts/#records","text":"Kora has a flexible approach to what it considers a record. For many digital repository and archive platforms, a record centers on a digital object (which is most often a digitized version of a physical object - a book, a document, a wax cylinder, an archaeological artifact). In the case of Kora, a record centers an entity more broadly-defined \u2013 a person, a place, or a thing. A record is a collection of metadata that describes that entity. For instance, a Kora project could have place records, each of which is a collection of metadata that describes a specific place. That place record could also include multiple digital objects relevant to that place (historic photos, maps, etc). Similarly, a Kora project could have people records \u2013 each of which was a collection of metadata that described an individual. Kora can also have records for digitized physical objects. One of the interesting things about Kora is that you can associate (using the Associator field type) different relevant records. So, instead of including relevant digital images of an individual in their person record, the images would have their own records (each with robust metadata) that were then associated with the relevant person record. Records are generated by forms, whose structure is determined by the project's metadata scheme for that type of entity (historic document, archaeological artifact, person, place, etc). To learn more about working with records in Kora, start by reading Creating a Record .","title":"Records"},{"location":"getting-started/installing_kora_domains/","text":"Installing Kora on Domain of One's Own and Reclaim Hosting This is a basic guide for installing Kora in a Reclaim Hosting -based server environment, which includes any Domain of One's Own services offered by institutions. A few things about this guide. First, in many cases of naming something or writing Terminal commands, things will be case sensitive, so unless the specific instance requires uppercase for something, this guide will always use lowercase and its author strongly suggests you do the same. Keeping things all lowercase is a good thing to follow for best practices because it removes any doubt or confusion over whether some file, directory, or URL should have uppercase letters in it. Second, a note about terminology. To keep things consistent, this guide will be using the word \"directory\" and its derivatives throughout this guide, rather than \"folder\" in order to better illuminate the link between URL and file structure throughout this process. Finally, make sure to visit the Kora GitHub repo releases to download the zip file containing the most recent Kora release. Log In to cPanel Begin all of this by logging into your account to reach your cPanel. Most cPanels look something like this: Set up MySQL Database After reaching the cPanel for your server environment, begin by setting up the necessary MySQL Database for your Kora installation. Start by finding the section called \"Databases\" and clicking on \"MySQL Databases\". Under \"Create new Database,\" enter \"kora\" or some other name in the text field and click \"Create Database.\" Take note of the auto-generated prefix, which, when combined with whatever you just provided, will be the name of your MySQL database. In this example case it is called geyerbri_kora . Once you've noted this database name, click on the link to take you back to the previous page. Next, scroll down to \"MySQL Users\" and provide the username \"kora\" in the text box under \"Add New User\". This is a common practice \u2014 the database and the default user for that database having the same name \u2014 which will make it easier to update configurations elsewhere. After this, click on the button \"Password Generator.\" The Password Generator modal will open and generate a random string of characters (blocked out in the image below). IMPORTANT Copy this password to somewhere for safe-keeping. You will need it later for configuration of your Kora installation. After copying this password to somewhere, click \"Use Password.\" When the modal closes, the generated password will auto-fill into the \"Add New User\" section and it should rate the password as \"Very Strong.\" Click on \"Create User\" to complete this process. Just as you did with the database name, take note of this username, as you will need it for Kora configuration elsewhere. Because this guide follows the common practice of using the same name for the database and user, this example username is also geyerbri_kora . Click the back link to get back to the previous page. The final step in setting up the required MySQL database is to assign the newly-created user to the newly-created database and give that user full permissions. Do this by first scrolling down to \"Add User To Database\", confirming that the names are correctly chosen, and clicking on \"Add.\" The page that opens will provide a list of permissions that can be assigned to the chosen user for the specified database. Click the checkbox for \"ALL PRIVILEGES.\" Scroll down if needed to find the \"Make Changes\" box. Clicking on it will generate an in-page notification that it was successful. Click on the \"Go Back\" link to get back to the main \"MySQL Databases\" page. To confirm that you have successfully created the database, created the user, and added the user to the database, find the section \"Current Databases\" and check that there is an entry for your new database, with your new user listed as a privileged user. Return to cPanel Main To return from nearly any part of cPanel to the Main interface (shown in the screenshot at the beginning of this guide), you can click on the grid icon in the upper-left. Upload and Prepare Kora Application Files via cPanel File Manager From cPanel Main, find the section \"Files\" and click on \"File Manager.\" Take a note of which directory is your main URL directory (the one that provides all the files available via your main URL). In this screenshot you can see the globe icon being used for the URL directory \"public_html,\" which is the common icon in this version of cPanel and used in MSU's Domain of One's Own. You may use this directory later, to confirm something in Step 3 of \"Subdirectory URL Setup Via cPanel Terminal,\" if following that path for creating your Kora installation URL (this will make sense later). You will also notice the same globe icon, but with a black chain-link icon over it, used for \"www\". This is something different, which will be explained in one of the sections about setting up the installation URL below. But for now just know that the directory with the globe and without the chain-link is the one you need to make note of. In order to properly view all the relevant Kora installation files once they have been created, it is important for you to make all the hidden files visible. To do this, go to the File Manager's \"Settings\" by clicking on the gear icon in the upper-right. Click the checkbox for \"Show Hidden Files (dotfiles)\" and then click \"Save\". Next, you'll upload the Kora installation .zip file you downloaded earlier from Kora's GitHub repo releases page. Kora is intended to be installed outside of the main URL directory you noted in Step 2 of this section, to keep it secure and reduce any chances of interference with any other website content you have in your server environment; the easiest is to install it into the same directory alongside your main URL directory. If you have never changed the default directory that loads when opening File Manager, you should be viewing the correct location, which in this example case is named after the user (\"geyerbri\"). While at this location, click on \"Upload\" in the menu at the top. In the page that opens, just drag-and-drop the .zip file to upload it. You may also click on \"Select File\" to find it via your computer's file management windows. When the .zip file finishes uploading, click on the link leading back to File Manager. Locate the uploaded .zip file in this directory, right-click it to bring up the context menu, and select \"Extract.\" In the Extract modal that opens, leave the default location alone (the text box is likely blank) and click \"Extract File(s).\" In the follow-up modal called \"Extraction Results,\" click \"Close.\" Extracting the .zip file will create a new directory, which is likely called \"kora-XXX,\" with the version number in the placeholder. Locate this directory, right-click on it, and select \"Rename.\" In the Rename modal that opens, change the text in the box to \"kora\" (without quotations) and click \"Rename File.\" Next, it's time to initially set up the .env file that manages some of the configuration settings for your Kora install. Many of the settings in this file will be adjustable once the installation is complete, but a few are not and require configuration now. Enter/access your renamed \"kora\" directory by double clicking on it, then right-click on the \".env.example\" file and select \"Copy.\" In the Copy modal that opens, add \"/.env\" without quotations to whatever is already in the text box and click \"Copy File(s).\" Once the file has been renamed, select it and then click on \"Edit\" in the menu at the top. The Edit modal that opens provides a warning to back up the file you are about to edit before making any changes. This is always a good practice to follow, so that any mistakes can be quickly and easily rectified. Luckily, since the file you are about to edit is a direct copy of \".env.example,\" you already have a backed-up copy of its current state, so in this case making an additional backup is not necessary. So go ahead and click on \"Edit.\" A new tab will open with the editor. Here, change lines 6, 7, and 8 to match the info you saved about your MySQL database. For example, given the info previously saved from the database setup before, this guide's example code would look like: DB_DATABASE=geyerbri_kora DB_USERNAME=geyerbri_kora DB_PASSWORD={saved database user password} Notice, this is where you will paste in the database password you saved in Step 5 of \" Set Up MySQL Database \" above. Remove the curl brackets from the example code and make sure there are no spaces before or after the password. After finishing this, click \"Save Changes\". Once that's done you can either close the tab or click \"Close\" (which does the same thing) and go back to the File Manager tab. Finally, there is one more example file to copy as a configuration file. Enter the directory \"public\" and also copy the file \".htaccess.example\". Add \"/.htaccess\" after the defaulted location, the same way you did for \".env\" in the previous step. The default settings in this file will work for basic installations of Kora, but should you want to adjust settings such as more complex URLs than what this guide presents (see \" Create Kora Installation URLs \" below), or to change the advanced settings such as acceptable file sizes, memory limits, timeout lengths, etc., they are controlled in this file. Once copied, you're finished with the initial file setup. Navigate back to cPanel Main. Kora Installation and Initial Configuration via cPanel Terminal In cPanel Main, scroll down to the section called \"Advanced\" and open \"Terminal.\" Read and (hopefully) accept the terms to reach the in-cPanel Terminal interface. It will look like this: In Terminal, you will be using some basic commands to move around and change a few things. The first one is cd , which just changes your location in the file system. Change your directory to whichever directory you just renamed the extracted zip file to. If you've been using the suggested names above, this will be \"kora\": cd kora Next, run the installation process: php artisan kora:install Before running this last command, the window will look like this: After running, if it is successful, the window will look like this, with the successful installation message (in green): Note If the installation fails and provides a message that says (in part) \"Failed to connect to database! Check your database credentials or review the logs for more error information,\" this may be due to some common problems and there are a few things to check before trying to run the installation command again. First, return to the MySQL section of cPanel to confirm you have written down the full database name and username correctly. Second, re-open the .env file where you earlier put that database information, to double-check that these names are correct. If they are, there may be an issue with the generated password for your MySQL user. You can go generate a new password, save it again, and enter it into the .env file, before once again trying to run the installation command. If the installation again fails, the issue may be something else. You can check for any similar issues and potential solutions in Kora's GitHub Issues , or open your own Issue with a detailed description of the problem. INCREDIBLY IMPORTANT : You must copy the last line generated here in the successful installation message (outlined above), which has your password for the generated username of \"admin\". To copy things in cPanel's Terminal, first use your mouse to select the line, then right-click and select \"Copy.\" Paste this somewhere safe, where you will not lose it! Warning It cannot be stressed enough how important this step is, because losing this password means losing access to your installation and will require a full reinstallation. Notice that, in the successful installation message, you are directed to \"give READ access to the web user,\" as well as \"WRITE access\" for specific directories, to ensure that Kora continues functioning properly after users start contributing. What these directions require could be different for different Domain of One's Own environments, because different system administrators may have set up the default permissions for the environment differently. For now, to ensure that things are set up for the most likely scenario for most Domain of One's Own or Reclaim Hosting environments, you will be setting file permissions for the entire \"kora\" directory and its contents. Because these commands have to be applied to all the files and directories within, you will have to do this here, via Terminal, using the chmod command and the -R flag. chmod stands for \"change mode,\" which is how the server's operating system refers to changing permissions. The -R flag tells the command to run recursively, i.e. change them for this directory and everything it contains. Finally, the . is the short-hand for \"my current location.\" This first command is to make sure that any new files and directories created in Kora are assigned the correct permissions in the future. It may not be needed for most cases, but in the few cases where it is, it will be useful. So run the following code: chmod -R g+s . When successful, Terminal will just re-display the command prompt without a message: Next, it is important to confirm that the directories and files in this installation are all set to the 755 permissions level. In the operating system your server is running, this number represents the permissions levels for three different attributes related to a file or directory's ownership in the system. The first number represents the level set for \"Owner,\" the second for \"Group,\" and the third for \"Other/World.\" Setting 7 is full access \u2014 aka read, write, and execute \u2014 whereas setting 5 is read and execute access only. For the purposes of this basic installation, the level for \"Owner\" should always be set to 7 so that you will always be able to make changes to things if needed. However the amount of access given to \"Group\" and \"Other/World\" attributes will affect the security of your server environment, so it is important to set these to 5 or some other non-write setting whenever possible. So, to confirm that the installation's permissions are set at the appropriate levels for the appropriate attributes, run this command to set all of this directory and its contents to \"READ\" (and execute, which is missing from the successful installation message). Again, in many cases it isn't strictly needed, but in the few where it is this will ensure the settings are set correctly: chmod -R 755 . And just as before, when successful, it will just re-display the command prompt without a message. Next it is important to check if your \"Write\" permissions are set properly. Run the ls command with the -l flag. ls is the list command; the -l flag is for listing contents in long-form. The full command is: ls -l The resulting list will look like this: In the long-form list, Terminal will display two account names: first the username of \"Owner,\" then (the one highlighted in the image above) the username of \"Group.\" In the example here, both are set to the same username, which means the \"Owner\" permissions level is applied to \"Group\" as well. In this such case \u2014 where the \"Owner\" and \"Group\" have the same username \u2014 no further permissions changes need to be made to ensure Kora is working properly and you may skip down to \" Create Kora Installation URLs .\" However, if these two are different, then you will need to additionally adjust the \"Write\" permissions for \"Group,\" so please continue to the next section. If you intend to set the \"Write\" permissions because you are sure your specific server environment's defaults will prevent Kora from working properly, then you can prepare for the commands in the next section Set \"Write\" and \"Execute\" Permissions On Certain Directories if Needed via cPanel Terminal As stated in the previous section, the previous commands will have been enough for some users to complete the required permissions setup for their installation. However for others, it will be necessary to specifically change the permissions on the three directory trees noted in the successful installation message. If you are unsure of whether or not your file permissions are properly configured, you can quickly test this by completing the rest of the Kora setup process, then creating a record in your Kora installation that has a file attached to it and uploading that file. If the file upload process works, then your current installation does not need any further permissions adjustments. If it does not work, you will need to re-enter cPanel and re-enter Terminal, which should default to the correct location (the root directory) for this section's instructions. You will need to wait until your Kora installation is completed and properly configured before you can conduct this test, so its instructions are provided in the final section of this page, \" Testing the Installation .\" To set the \"Write\" and \"Execute\" permissions for the relevant directories: Begin by ensuring your current Terminal location is the root directory, represented by a \"~\" in the Terminal prompt to the left of the cursor. If your prompt does not have a \"~\" \u2014 it may instead still display \"kora\" \u2014 change your location upward to relocate to the root. As before, use cd , but this time use .. , which just means 'move up one directory': cd .. If needed, continue to use this command until your Terminal prompt looks like this: Run the following three commands, using the exact locations described in the successful installation message (reproduced here in case you are coming back to Terminal after learning that your installation requires these settings to work). These will set the \"Write\" (and \"Execute\") permissions for \"Group\" correctly. Hit \"Enter\" after each command (i.e. run each on its own). chmod -R 775 kora/bootstrap/cache/ chmod -R 775 kora/storage/ chmod -R 775 kora/public/assets/javascripts/production/ Just as before, when successful, each of these will just re-display the command prompt without a message. After you've run all three, your Terminal will look something like this: Create Kora Installation URLs Next, it is important to have your Kora installation accessible via a web browser and URL. There are two options for doing this: a subdomain or a subdirectory . A subdirectory URL looks like: https://example.org/subdirectory, whereas a subdomain looks like: https://subdomain.example.org. You only need to choose one of these two options for you to do. Find the directions for each below. Subdirectory URL Setup Via cPanel Terminal To set up a subdirectory URL for your Kora installation, you will just have to do a couple more things in Terminal. First you will change your location to be inside of the directory that your main URL is accessible from: in this example case in MSU's Domain of One's Own environment, this is a directory called public_html . But another common name for it is www . Use the following, with whatever name pertains to your version: cd public_html Note If you receive an error that \"public_html\" does not exist, more than likely this is because you skipped over a few previous steps that did not pertain to you and so you are currently still inside of the \"kora\" directory. If this is the case, use cd .. to move upward, and then again try cd public_html . (There is no screenshot for this specifically, but you will know you have successfully changed your directory to public_html \u2014 or the one relevant to your case \u2014 when you see it written to the left of the dollar sign character, inside the brackets.) Setting up the subdirectory for your URL requires using the command ln with the -s flag. ln stands for \"link\" and the -s flag tells the system that the link being created is \"symbolic\". The next part of the command is the location of the Kora installation public directory, relative to your current location. And then the final part is the location of the desired subdirectory that will appear at the end of your site's URL. So in the case of a public_html example, the public directory of the installation files is located one directory up, and then inside of kora . So the command is: ln -s ../kora/public kora After both of these steps, your Terminal window will look something like this: This was the last bit of Terminal required for setup, so you may now close Terminal and return to cPanel Main. It isn't necessary, but if you wish, you can run the command exit to terminate your Terminal connection before navigating back to cPanel Main. To confirm that the symbolic link process worked, you may go back into File Manager and navigate into your publicly-accessible directory, which you were to take note of in Step 2 of \" Upload and Prepare Kora Application Files via cPanel File Manager .\" There, you should find the directory \"kora\" with the black chain-link icon over the folder icon. After completing this step, you will need to additionally configure Kora to enable functionality for a module called mod_rewrite . This is explained in the \" Using mod_rewrite in Kora \" section of the \"Advanced Configuration of Kora\" page. Subdomain URLs If going this route for your URL, you can now close Terminal and return to cPanel Main. Setting up the subdomain option for your URL requires using the \"Subdomains\" tool in cPanel, under the \"Domains\" section. In the Subdomain text box, type what you would like for your URL to begin with, before your site's main URL (remember the example above: https://subdomain.example.org). The selected \"Domain\" will likely default to your main URL, which is correct (in the case where you have multiple URLs available, choose the appropriate one). And the tool will autogenerate content in the \"Document Root\" box after you enter something in the \"Subdomain\" box; delete this autogenerated content and instead enter the directory tree for the public folder of your Kora installation. If you have been using all the same directory names and locations as this guide, then you will enter \"kora/public\" into this box. Then hit create. You can see all of this in this screenshot: Enable Force HTTPS for URL Once you have implemented one of the two methods above, your Kora installation is now reachable via a web browser! But there is one last task you should complete before doing so. Kora is designed to use HTTPS protocol for its URLs. So it is important to set up a Force HTTPS Redirect for your domain, and for the subdomain as well if you have gone that route for your URL. To do this, go to \"Domains\" under the \"Domains\" section in cPanel. For your main domain entry and subdomain entry on the list, click the toggle to turn it on (or ensure it is already toggled on for each). Toggling this setting may not immediately work, with an error displaying that might say, \"You cannot activate HTTPS Redirect because AutoSSL is not currently active for this domain or the SSL certificate is not valid.\" If this happens, wait a moment or two and refresh the page, then try toggling the setting on again. Once completed, return to cPanel Main. Further Configure Kora Once Installed In a new tab, navigate to your Kora application's URL. If everything has been done correctly, you should land on the login page for your Kora installation. But keep the cPanel open in another tab because you will need to switch back to it to set up your email at some point. If you successfully reached the Kora login page, Congratulations! Your install is at least partially working! From here you will log into the admin account in order to configure your installation properly, but also to test that your directory permissions settings are working properly. The username is \"admin\" and the password is the one that you copied from Terminal, from the successful installation message. Put in that password to log in and you will land on a page that looks like this: It is highly recommended that you at some point click through the introduction to get a quick tutorial on the basics of using Kora. Once done, click on the menu icon in the top-right to bring out the side-bar menu. Then click on \"Management\" at the bottom and select \"Kora Configuration File\" from the options that appear. This page provides text fields to update much of the information saved in that .env file you briefly edited back in Step 8 of \" Upload and Prepare Kora Application Files via cPanel File Manager .\" Configure reCAPTCHA Note Because this subsection regards setting up an external service, there are no screenshots provided. Kora currently uses reCAPTCHA v2 Checkbox Kora uses Google's reCAPTCHA service for anti-robot protections. As you can see on the screenshot above, the configuration file is asking for a \"Recaptcha Private Key\" and \"Recaptcha Public Key\", which you will get from that service. The reCAPTCHA documentation can be found at https://developers.google.com/recaptcha , but to create the keys needed for your site, you will go to https://www.google.com/u/0/recaptcha/admin/ . Google will ask you to log in with a Gmail account. Many academic institutions have contracts with Google for using their tools via an educational arrangement; in the case of MSU, it is possible to give Google's login page an MSU email address, which then redirects to an MSU-related login page. Successfully logging in redirects back to reCAPTCHA under the MSU account. If this option is not available to you, unfortunately you will need a Gmail account to gain access to reCAPTCHA, which is required for completing Kora's installation setup. Once logged in, if this is your first time using reCAPTCHA, it will automatically go to the registration page. However, if you have used reCAPTCHA before, it will take you to a page displaying the information for the first reCAPTCHA key set you created. To create a new set of keys, click on the plus icon in the upper-right to register a new site. Give your new set any label you prefer (a suggestion would be to use your Kora installation URL). As noted above, Kora currently uses reCAPTCHA v2 \"I'm not a robot\" Checkbox version, so pick those options. Under \"Domains\", write your main domain (do not include \"http://\", \"https://\", or the subdirectory) and either hit Enter or click the plus sign to add it to the list of approved domains for the set of keys that are about to be generated. As an aside: this functionality means you could conceivably have multiple Kora installations, or even multiple sites that use reCAPTCHA v2 Checkbox, all using the same keys. The \"Owners\" section should auto-add your account email, but you can add another if you wish. Be sure to (review and) accept the Terms of Service. The final option is the checkbox for \"Send alerts to owners\", which you may wish to leave enabled so that you receive emailed updates when security issues with your site arise. Finally, click \"Submit\". Once redirected back to the main page, the lighter-blue bar at the top will display the number of sites registered and have a dropdown list for you to select whichever. Obviously if this is the first time setting one up, you will only have one. Ensure the one you intend to use is selected in the dropdown and then click on the gear icon in the upper right to go to the reCAPTCHA \"Settings\" page. Click on the \"reCAPTCHA keys\" dropdown list to display your site and secret keys. Copy the \"site key\" and paste it into your Kora Configuration File page text box titled \"Recaptcha Public Key\"; copy the \"secret key\" and paste it into the text box titled \"Recaptcha Private Key\". If you want to ensure this information is saved before setting up your email, scroll to the bottom of the page and click \"Update Configuration File\". GitLab Integration If desired, your Kora installation can use GitLab's authentication system to manage account creation and user login. For more information about this, including integration instruction, please see the section of \"Advanced Configuration\" called, \" GitLab Integration .\" Set Up Server Email and Link It to Kora To set up mail for your Kora install, this guide will explain how to use the email client available through cPanel for your Domain of One's Own account. It is possible to set this up with other email clients, however this basic option is easiest for keeping the installation and email all under the one environment. Return to your tab with cPanel Main. Find \"Email Accounts\" under the \"Email\" section. To set up a Kora-specific email address, click on \"Create\". (You could also use the default email address that has already been generated if you like; if using the default email, skip to Step 4 below.) In the \"Create an Email Account\" box, look at the options available in the \"Domain\" dropdown menu. This will be the portion of the email address after the @ symbol. If using a subdomain URL, you can specify this subdomain here, otherwise your option will be limited to your main URL. After choosing the domain, enter a \"Username\", such as \"admin\" if you use the subdomain option, or \"kora\" if you use the main URL option. Finally, click on Generate in the \"Password\" section to receive a randomly generated password (as you did when setting up your MySQL database). IMPORTANT Just as before, ensure you copy this password and save it someplace safe, because it will be needed for email configuration in Kora. The remaining settings should be set according to your preferences. I will not outline how to link this email account to a mail client because the option to generate an email with just such a guide is provided by cPanel. Once everything is set as you like, click \"Create\", which, as long as you leave the \"Stay on this page...\" option unchecked, will create the address and redirect you back to the list of email addresses. To confirm that your address is working properly, click on \"Check Mail\" next to your new address in the list. Then click \"Open\" on the resulting page. As long as these pages load correctly, your server's email client is working correctly. If they do not \u2014 for instance, MSU's Domain of One's Own accounts currently are not working \u2014 you must contact the administrators of your server to rectify this. Return to your Kora Configuration File page tab. Scrolling down, you will find the text boxes for your email information. Leave \"Mail Host\" with \"localhost\". For \"Mail From Address\", it is best to enter the email address you just created so that the emails user receive appear to come from that account; in this example, \"admin@kora.geyerbri.msu.domains\". Set the \"Mail From Name\" to your own preference, such as \"Kora Admin\". The \"Mail User\" setting is how Kora connects with your server's mail client, to actually send the email. So this one must be set to an appropriately-configured email, such as the one just created; in this example, \"admin@kora.geyerbri.msu.domains\" again. Finally, paste in the save email password into the last box, \"Mail Password\". Save all of these configurations by clicking \"Update Configuration File\". See all of these settings in this screenshot: Note If your server email is disabled by account administrators \u2014 as is the case for MSU Domain of One's Own accounts \u2014 and you cannot get another server email to successfully work with Kora, it is still possible to do anything that may appear to require the email server working, such as confirming new users, inviting users, or setting passwords. Find instructions for these tasks in the guide for managing Kora user accounts . Admin User Profile Settings The final portion of configuration is for the admin account's profile settings. This section is specific to what is a part of the initial configuration for Kora, but this documentation website also has a more complete guide for user profile settings . To get there to the profile settings page, select the user icon in the upper-right. Then choose \"Edit My Profile.\" On this page, you can change the username and password that were auto-generated when installing Kora in Terminal, however it is probably best to leave these alone. However, it is important to change the default admin email here because it is shown to users at various locations throughout Kora. Change it to either your own professional email address, or if you plan to check the server email account set up before (either through the interface you loaded before, or by forwarding it to an email client), set it to that address. You can also change the displayed admin name, if you wish, as it is also displayed to users in various locations. Finally, should you wish to change the admin account password from what was auto-generated to one you prefer, you can do that here. Once all these have been set, click \"Update Profile\" to complete your setup. Testing the Installation To check whether or not your installation works properly: Create a Project . Create a Form in that project. Create a Field in that project with the field type set to one of the File types (setting it to \"Documents\" will give the greatest flexibility for uploading any file to test). And finally, create a Record where you upload an example file. If the creation of that Record with an uploaded file succeeds, such that the uploaded file is viewable or downloadable when clicked upon, then your permissions are correct. If this fails, please go to \" Set 'Write' and 'Execute' Privileges On Certain Directories if Needed via cPanel Terminal \" above. Follow the instructions there for using cPanel Terminal to adjust your Kora installation's permissions on the correct directories.","title":"Installing Kora on Domain of One's Own & Reclaim Hosting"},{"location":"getting-started/installing_kora_domains/#installing-kora-on-domain-of-ones-own-and-reclaim-hosting","text":"This is a basic guide for installing Kora in a Reclaim Hosting -based server environment, which includes any Domain of One's Own services offered by institutions. A few things about this guide. First, in many cases of naming something or writing Terminal commands, things will be case sensitive, so unless the specific instance requires uppercase for something, this guide will always use lowercase and its author strongly suggests you do the same. Keeping things all lowercase is a good thing to follow for best practices because it removes any doubt or confusion over whether some file, directory, or URL should have uppercase letters in it. Second, a note about terminology. To keep things consistent, this guide will be using the word \"directory\" and its derivatives throughout this guide, rather than \"folder\" in order to better illuminate the link between URL and file structure throughout this process. Finally, make sure to visit the Kora GitHub repo releases to download the zip file containing the most recent Kora release.","title":"Installing Kora on Domain of One's Own and Reclaim Hosting"},{"location":"getting-started/installing_kora_domains/#log-in-to-cpanel","text":"Begin all of this by logging into your account to reach your cPanel. Most cPanels look something like this:","title":"Log In to cPanel"},{"location":"getting-started/installing_kora_domains/#set-up-mysql-database","text":"After reaching the cPanel for your server environment, begin by setting up the necessary MySQL Database for your Kora installation. Start by finding the section called \"Databases\" and clicking on \"MySQL Databases\". Under \"Create new Database,\" enter \"kora\" or some other name in the text field and click \"Create Database.\" Take note of the auto-generated prefix, which, when combined with whatever you just provided, will be the name of your MySQL database. In this example case it is called geyerbri_kora . Once you've noted this database name, click on the link to take you back to the previous page. Next, scroll down to \"MySQL Users\" and provide the username \"kora\" in the text box under \"Add New User\". This is a common practice \u2014 the database and the default user for that database having the same name \u2014 which will make it easier to update configurations elsewhere. After this, click on the button \"Password Generator.\" The Password Generator modal will open and generate a random string of characters (blocked out in the image below). IMPORTANT Copy this password to somewhere for safe-keeping. You will need it later for configuration of your Kora installation. After copying this password to somewhere, click \"Use Password.\" When the modal closes, the generated password will auto-fill into the \"Add New User\" section and it should rate the password as \"Very Strong.\" Click on \"Create User\" to complete this process. Just as you did with the database name, take note of this username, as you will need it for Kora configuration elsewhere. Because this guide follows the common practice of using the same name for the database and user, this example username is also geyerbri_kora . Click the back link to get back to the previous page. The final step in setting up the required MySQL database is to assign the newly-created user to the newly-created database and give that user full permissions. Do this by first scrolling down to \"Add User To Database\", confirming that the names are correctly chosen, and clicking on \"Add.\" The page that opens will provide a list of permissions that can be assigned to the chosen user for the specified database. Click the checkbox for \"ALL PRIVILEGES.\" Scroll down if needed to find the \"Make Changes\" box. Clicking on it will generate an in-page notification that it was successful. Click on the \"Go Back\" link to get back to the main \"MySQL Databases\" page. To confirm that you have successfully created the database, created the user, and added the user to the database, find the section \"Current Databases\" and check that there is an entry for your new database, with your new user listed as a privileged user.","title":"Set up MySQL Database"},{"location":"getting-started/installing_kora_domains/#return-to-cpanel-main","text":"To return from nearly any part of cPanel to the Main interface (shown in the screenshot at the beginning of this guide), you can click on the grid icon in the upper-left.","title":"Return to cPanel Main"},{"location":"getting-started/installing_kora_domains/#upload-and-prepare-kora-application-files-via-cpanel-file-manager","text":"From cPanel Main, find the section \"Files\" and click on \"File Manager.\" Take a note of which directory is your main URL directory (the one that provides all the files available via your main URL). In this screenshot you can see the globe icon being used for the URL directory \"public_html,\" which is the common icon in this version of cPanel and used in MSU's Domain of One's Own. You may use this directory later, to confirm something in Step 3 of \"Subdirectory URL Setup Via cPanel Terminal,\" if following that path for creating your Kora installation URL (this will make sense later). You will also notice the same globe icon, but with a black chain-link icon over it, used for \"www\". This is something different, which will be explained in one of the sections about setting up the installation URL below. But for now just know that the directory with the globe and without the chain-link is the one you need to make note of. In order to properly view all the relevant Kora installation files once they have been created, it is important for you to make all the hidden files visible. To do this, go to the File Manager's \"Settings\" by clicking on the gear icon in the upper-right. Click the checkbox for \"Show Hidden Files (dotfiles)\" and then click \"Save\". Next, you'll upload the Kora installation .zip file you downloaded earlier from Kora's GitHub repo releases page. Kora is intended to be installed outside of the main URL directory you noted in Step 2 of this section, to keep it secure and reduce any chances of interference with any other website content you have in your server environment; the easiest is to install it into the same directory alongside your main URL directory. If you have never changed the default directory that loads when opening File Manager, you should be viewing the correct location, which in this example case is named after the user (\"geyerbri\"). While at this location, click on \"Upload\" in the menu at the top. In the page that opens, just drag-and-drop the .zip file to upload it. You may also click on \"Select File\" to find it via your computer's file management windows. When the .zip file finishes uploading, click on the link leading back to File Manager. Locate the uploaded .zip file in this directory, right-click it to bring up the context menu, and select \"Extract.\" In the Extract modal that opens, leave the default location alone (the text box is likely blank) and click \"Extract File(s).\" In the follow-up modal called \"Extraction Results,\" click \"Close.\" Extracting the .zip file will create a new directory, which is likely called \"kora-XXX,\" with the version number in the placeholder. Locate this directory, right-click on it, and select \"Rename.\" In the Rename modal that opens, change the text in the box to \"kora\" (without quotations) and click \"Rename File.\" Next, it's time to initially set up the .env file that manages some of the configuration settings for your Kora install. Many of the settings in this file will be adjustable once the installation is complete, but a few are not and require configuration now. Enter/access your renamed \"kora\" directory by double clicking on it, then right-click on the \".env.example\" file and select \"Copy.\" In the Copy modal that opens, add \"/.env\" without quotations to whatever is already in the text box and click \"Copy File(s).\" Once the file has been renamed, select it and then click on \"Edit\" in the menu at the top. The Edit modal that opens provides a warning to back up the file you are about to edit before making any changes. This is always a good practice to follow, so that any mistakes can be quickly and easily rectified. Luckily, since the file you are about to edit is a direct copy of \".env.example,\" you already have a backed-up copy of its current state, so in this case making an additional backup is not necessary. So go ahead and click on \"Edit.\" A new tab will open with the editor. Here, change lines 6, 7, and 8 to match the info you saved about your MySQL database. For example, given the info previously saved from the database setup before, this guide's example code would look like: DB_DATABASE=geyerbri_kora DB_USERNAME=geyerbri_kora DB_PASSWORD={saved database user password} Notice, this is where you will paste in the database password you saved in Step 5 of \" Set Up MySQL Database \" above. Remove the curl brackets from the example code and make sure there are no spaces before or after the password. After finishing this, click \"Save Changes\". Once that's done you can either close the tab or click \"Close\" (which does the same thing) and go back to the File Manager tab. Finally, there is one more example file to copy as a configuration file. Enter the directory \"public\" and also copy the file \".htaccess.example\". Add \"/.htaccess\" after the defaulted location, the same way you did for \".env\" in the previous step. The default settings in this file will work for basic installations of Kora, but should you want to adjust settings such as more complex URLs than what this guide presents (see \" Create Kora Installation URLs \" below), or to change the advanced settings such as acceptable file sizes, memory limits, timeout lengths, etc., they are controlled in this file. Once copied, you're finished with the initial file setup. Navigate back to cPanel Main.","title":"Upload and Prepare Kora Application Files via cPanel File Manager"},{"location":"getting-started/installing_kora_domains/#kora-installation-and-initial-configuration-via-cpanel-terminal","text":"In cPanel Main, scroll down to the section called \"Advanced\" and open \"Terminal.\" Read and (hopefully) accept the terms to reach the in-cPanel Terminal interface. It will look like this: In Terminal, you will be using some basic commands to move around and change a few things. The first one is cd , which just changes your location in the file system. Change your directory to whichever directory you just renamed the extracted zip file to. If you've been using the suggested names above, this will be \"kora\": cd kora Next, run the installation process: php artisan kora:install Before running this last command, the window will look like this: After running, if it is successful, the window will look like this, with the successful installation message (in green): Note If the installation fails and provides a message that says (in part) \"Failed to connect to database! Check your database credentials or review the logs for more error information,\" this may be due to some common problems and there are a few things to check before trying to run the installation command again. First, return to the MySQL section of cPanel to confirm you have written down the full database name and username correctly. Second, re-open the .env file where you earlier put that database information, to double-check that these names are correct. If they are, there may be an issue with the generated password for your MySQL user. You can go generate a new password, save it again, and enter it into the .env file, before once again trying to run the installation command. If the installation again fails, the issue may be something else. You can check for any similar issues and potential solutions in Kora's GitHub Issues , or open your own Issue with a detailed description of the problem. INCREDIBLY IMPORTANT : You must copy the last line generated here in the successful installation message (outlined above), which has your password for the generated username of \"admin\". To copy things in cPanel's Terminal, first use your mouse to select the line, then right-click and select \"Copy.\" Paste this somewhere safe, where you will not lose it! Warning It cannot be stressed enough how important this step is, because losing this password means losing access to your installation and will require a full reinstallation. Notice that, in the successful installation message, you are directed to \"give READ access to the web user,\" as well as \"WRITE access\" for specific directories, to ensure that Kora continues functioning properly after users start contributing. What these directions require could be different for different Domain of One's Own environments, because different system administrators may have set up the default permissions for the environment differently. For now, to ensure that things are set up for the most likely scenario for most Domain of One's Own or Reclaim Hosting environments, you will be setting file permissions for the entire \"kora\" directory and its contents. Because these commands have to be applied to all the files and directories within, you will have to do this here, via Terminal, using the chmod command and the -R flag. chmod stands for \"change mode,\" which is how the server's operating system refers to changing permissions. The -R flag tells the command to run recursively, i.e. change them for this directory and everything it contains. Finally, the . is the short-hand for \"my current location.\" This first command is to make sure that any new files and directories created in Kora are assigned the correct permissions in the future. It may not be needed for most cases, but in the few cases where it is, it will be useful. So run the following code: chmod -R g+s . When successful, Terminal will just re-display the command prompt without a message: Next, it is important to confirm that the directories and files in this installation are all set to the 755 permissions level. In the operating system your server is running, this number represents the permissions levels for three different attributes related to a file or directory's ownership in the system. The first number represents the level set for \"Owner,\" the second for \"Group,\" and the third for \"Other/World.\" Setting 7 is full access \u2014 aka read, write, and execute \u2014 whereas setting 5 is read and execute access only. For the purposes of this basic installation, the level for \"Owner\" should always be set to 7 so that you will always be able to make changes to things if needed. However the amount of access given to \"Group\" and \"Other/World\" attributes will affect the security of your server environment, so it is important to set these to 5 or some other non-write setting whenever possible. So, to confirm that the installation's permissions are set at the appropriate levels for the appropriate attributes, run this command to set all of this directory and its contents to \"READ\" (and execute, which is missing from the successful installation message). Again, in many cases it isn't strictly needed, but in the few where it is this will ensure the settings are set correctly: chmod -R 755 . And just as before, when successful, it will just re-display the command prompt without a message. Next it is important to check if your \"Write\" permissions are set properly. Run the ls command with the -l flag. ls is the list command; the -l flag is for listing contents in long-form. The full command is: ls -l The resulting list will look like this: In the long-form list, Terminal will display two account names: first the username of \"Owner,\" then (the one highlighted in the image above) the username of \"Group.\" In the example here, both are set to the same username, which means the \"Owner\" permissions level is applied to \"Group\" as well. In this such case \u2014 where the \"Owner\" and \"Group\" have the same username \u2014 no further permissions changes need to be made to ensure Kora is working properly and you may skip down to \" Create Kora Installation URLs .\" However, if these two are different, then you will need to additionally adjust the \"Write\" permissions for \"Group,\" so please continue to the next section. If you intend to set the \"Write\" permissions because you are sure your specific server environment's defaults will prevent Kora from working properly, then you can prepare for the commands in the next section","title":"Kora Installation and Initial Configuration via cPanel Terminal"},{"location":"getting-started/installing_kora_domains/#set-write-and-execute-permissions-on-certain-directories-if-needed-via-cpanel-terminal","text":"As stated in the previous section, the previous commands will have been enough for some users to complete the required permissions setup for their installation. However for others, it will be necessary to specifically change the permissions on the three directory trees noted in the successful installation message. If you are unsure of whether or not your file permissions are properly configured, you can quickly test this by completing the rest of the Kora setup process, then creating a record in your Kora installation that has a file attached to it and uploading that file. If the file upload process works, then your current installation does not need any further permissions adjustments. If it does not work, you will need to re-enter cPanel and re-enter Terminal, which should default to the correct location (the root directory) for this section's instructions. You will need to wait until your Kora installation is completed and properly configured before you can conduct this test, so its instructions are provided in the final section of this page, \" Testing the Installation .\" To set the \"Write\" and \"Execute\" permissions for the relevant directories: Begin by ensuring your current Terminal location is the root directory, represented by a \"~\" in the Terminal prompt to the left of the cursor. If your prompt does not have a \"~\" \u2014 it may instead still display \"kora\" \u2014 change your location upward to relocate to the root. As before, use cd , but this time use .. , which just means 'move up one directory': cd .. If needed, continue to use this command until your Terminal prompt looks like this: Run the following three commands, using the exact locations described in the successful installation message (reproduced here in case you are coming back to Terminal after learning that your installation requires these settings to work). These will set the \"Write\" (and \"Execute\") permissions for \"Group\" correctly. Hit \"Enter\" after each command (i.e. run each on its own). chmod -R 775 kora/bootstrap/cache/ chmod -R 775 kora/storage/ chmod -R 775 kora/public/assets/javascripts/production/ Just as before, when successful, each of these will just re-display the command prompt without a message. After you've run all three, your Terminal will look something like this:","title":"Set \"Write\" and \"Execute\" Permissions On Certain Directories if Needed via cPanel Terminal"},{"location":"getting-started/installing_kora_domains/#create-kora-installation-urls","text":"Next, it is important to have your Kora installation accessible via a web browser and URL. There are two options for doing this: a subdomain or a subdirectory . A subdirectory URL looks like: https://example.org/subdirectory, whereas a subdomain looks like: https://subdomain.example.org. You only need to choose one of these two options for you to do. Find the directions for each below.","title":"Create Kora Installation URLs"},{"location":"getting-started/installing_kora_domains/#subdirectory-url-setup-via-cpanel-terminal","text":"To set up a subdirectory URL for your Kora installation, you will just have to do a couple more things in Terminal. First you will change your location to be inside of the directory that your main URL is accessible from: in this example case in MSU's Domain of One's Own environment, this is a directory called public_html . But another common name for it is www . Use the following, with whatever name pertains to your version: cd public_html Note If you receive an error that \"public_html\" does not exist, more than likely this is because you skipped over a few previous steps that did not pertain to you and so you are currently still inside of the \"kora\" directory. If this is the case, use cd .. to move upward, and then again try cd public_html . (There is no screenshot for this specifically, but you will know you have successfully changed your directory to public_html \u2014 or the one relevant to your case \u2014 when you see it written to the left of the dollar sign character, inside the brackets.) Setting up the subdirectory for your URL requires using the command ln with the -s flag. ln stands for \"link\" and the -s flag tells the system that the link being created is \"symbolic\". The next part of the command is the location of the Kora installation public directory, relative to your current location. And then the final part is the location of the desired subdirectory that will appear at the end of your site's URL. So in the case of a public_html example, the public directory of the installation files is located one directory up, and then inside of kora . So the command is: ln -s ../kora/public kora After both of these steps, your Terminal window will look something like this: This was the last bit of Terminal required for setup, so you may now close Terminal and return to cPanel Main. It isn't necessary, but if you wish, you can run the command exit to terminate your Terminal connection before navigating back to cPanel Main. To confirm that the symbolic link process worked, you may go back into File Manager and navigate into your publicly-accessible directory, which you were to take note of in Step 2 of \" Upload and Prepare Kora Application Files via cPanel File Manager .\" There, you should find the directory \"kora\" with the black chain-link icon over the folder icon. After completing this step, you will need to additionally configure Kora to enable functionality for a module called mod_rewrite . This is explained in the \" Using mod_rewrite in Kora \" section of the \"Advanced Configuration of Kora\" page.","title":"Subdirectory URL Setup Via cPanel Terminal"},{"location":"getting-started/installing_kora_domains/#subdomain-urls","text":"If going this route for your URL, you can now close Terminal and return to cPanel Main. Setting up the subdomain option for your URL requires using the \"Subdomains\" tool in cPanel, under the \"Domains\" section. In the Subdomain text box, type what you would like for your URL to begin with, before your site's main URL (remember the example above: https://subdomain.example.org). The selected \"Domain\" will likely default to your main URL, which is correct (in the case where you have multiple URLs available, choose the appropriate one). And the tool will autogenerate content in the \"Document Root\" box after you enter something in the \"Subdomain\" box; delete this autogenerated content and instead enter the directory tree for the public folder of your Kora installation. If you have been using all the same directory names and locations as this guide, then you will enter \"kora/public\" into this box. Then hit create. You can see all of this in this screenshot:","title":"Subdomain URLs"},{"location":"getting-started/installing_kora_domains/#enable-force-https-for-url","text":"Once you have implemented one of the two methods above, your Kora installation is now reachable via a web browser! But there is one last task you should complete before doing so. Kora is designed to use HTTPS protocol for its URLs. So it is important to set up a Force HTTPS Redirect for your domain, and for the subdomain as well if you have gone that route for your URL. To do this, go to \"Domains\" under the \"Domains\" section in cPanel. For your main domain entry and subdomain entry on the list, click the toggle to turn it on (or ensure it is already toggled on for each). Toggling this setting may not immediately work, with an error displaying that might say, \"You cannot activate HTTPS Redirect because AutoSSL is not currently active for this domain or the SSL certificate is not valid.\" If this happens, wait a moment or two and refresh the page, then try toggling the setting on again. Once completed, return to cPanel Main.","title":"Enable Force HTTPS for URL"},{"location":"getting-started/installing_kora_domains/#further-configure-kora-once-installed","text":"In a new tab, navigate to your Kora application's URL. If everything has been done correctly, you should land on the login page for your Kora installation. But keep the cPanel open in another tab because you will need to switch back to it to set up your email at some point. If you successfully reached the Kora login page, Congratulations! Your install is at least partially working! From here you will log into the admin account in order to configure your installation properly, but also to test that your directory permissions settings are working properly. The username is \"admin\" and the password is the one that you copied from Terminal, from the successful installation message. Put in that password to log in and you will land on a page that looks like this: It is highly recommended that you at some point click through the introduction to get a quick tutorial on the basics of using Kora. Once done, click on the menu icon in the top-right to bring out the side-bar menu. Then click on \"Management\" at the bottom and select \"Kora Configuration File\" from the options that appear. This page provides text fields to update much of the information saved in that .env file you briefly edited back in Step 8 of \" Upload and Prepare Kora Application Files via cPanel File Manager .\"","title":"Further Configure Kora Once Installed"},{"location":"getting-started/installing_kora_domains/#configure-recaptcha","text":"Note Because this subsection regards setting up an external service, there are no screenshots provided. Kora currently uses reCAPTCHA v2 Checkbox Kora uses Google's reCAPTCHA service for anti-robot protections. As you can see on the screenshot above, the configuration file is asking for a \"Recaptcha Private Key\" and \"Recaptcha Public Key\", which you will get from that service. The reCAPTCHA documentation can be found at https://developers.google.com/recaptcha , but to create the keys needed for your site, you will go to https://www.google.com/u/0/recaptcha/admin/ . Google will ask you to log in with a Gmail account. Many academic institutions have contracts with Google for using their tools via an educational arrangement; in the case of MSU, it is possible to give Google's login page an MSU email address, which then redirects to an MSU-related login page. Successfully logging in redirects back to reCAPTCHA under the MSU account. If this option is not available to you, unfortunately you will need a Gmail account to gain access to reCAPTCHA, which is required for completing Kora's installation setup. Once logged in, if this is your first time using reCAPTCHA, it will automatically go to the registration page. However, if you have used reCAPTCHA before, it will take you to a page displaying the information for the first reCAPTCHA key set you created. To create a new set of keys, click on the plus icon in the upper-right to register a new site. Give your new set any label you prefer (a suggestion would be to use your Kora installation URL). As noted above, Kora currently uses reCAPTCHA v2 \"I'm not a robot\" Checkbox version, so pick those options. Under \"Domains\", write your main domain (do not include \"http://\", \"https://\", or the subdirectory) and either hit Enter or click the plus sign to add it to the list of approved domains for the set of keys that are about to be generated. As an aside: this functionality means you could conceivably have multiple Kora installations, or even multiple sites that use reCAPTCHA v2 Checkbox, all using the same keys. The \"Owners\" section should auto-add your account email, but you can add another if you wish. Be sure to (review and) accept the Terms of Service. The final option is the checkbox for \"Send alerts to owners\", which you may wish to leave enabled so that you receive emailed updates when security issues with your site arise. Finally, click \"Submit\". Once redirected back to the main page, the lighter-blue bar at the top will display the number of sites registered and have a dropdown list for you to select whichever. Obviously if this is the first time setting one up, you will only have one. Ensure the one you intend to use is selected in the dropdown and then click on the gear icon in the upper right to go to the reCAPTCHA \"Settings\" page. Click on the \"reCAPTCHA keys\" dropdown list to display your site and secret keys. Copy the \"site key\" and paste it into your Kora Configuration File page text box titled \"Recaptcha Public Key\"; copy the \"secret key\" and paste it into the text box titled \"Recaptcha Private Key\". If you want to ensure this information is saved before setting up your email, scroll to the bottom of the page and click \"Update Configuration File\".","title":"Configure reCAPTCHA"},{"location":"getting-started/installing_kora_domains/#gitlab-integration","text":"If desired, your Kora installation can use GitLab's authentication system to manage account creation and user login. For more information about this, including integration instruction, please see the section of \"Advanced Configuration\" called, \" GitLab Integration .\"","title":"GitLab Integration"},{"location":"getting-started/installing_kora_domains/#set-up-server-email-and-link-it-to-kora","text":"To set up mail for your Kora install, this guide will explain how to use the email client available through cPanel for your Domain of One's Own account. It is possible to set this up with other email clients, however this basic option is easiest for keeping the installation and email all under the one environment. Return to your tab with cPanel Main. Find \"Email Accounts\" under the \"Email\" section. To set up a Kora-specific email address, click on \"Create\". (You could also use the default email address that has already been generated if you like; if using the default email, skip to Step 4 below.) In the \"Create an Email Account\" box, look at the options available in the \"Domain\" dropdown menu. This will be the portion of the email address after the @ symbol. If using a subdomain URL, you can specify this subdomain here, otherwise your option will be limited to your main URL. After choosing the domain, enter a \"Username\", such as \"admin\" if you use the subdomain option, or \"kora\" if you use the main URL option. Finally, click on Generate in the \"Password\" section to receive a randomly generated password (as you did when setting up your MySQL database). IMPORTANT Just as before, ensure you copy this password and save it someplace safe, because it will be needed for email configuration in Kora. The remaining settings should be set according to your preferences. I will not outline how to link this email account to a mail client because the option to generate an email with just such a guide is provided by cPanel. Once everything is set as you like, click \"Create\", which, as long as you leave the \"Stay on this page...\" option unchecked, will create the address and redirect you back to the list of email addresses. To confirm that your address is working properly, click on \"Check Mail\" next to your new address in the list. Then click \"Open\" on the resulting page. As long as these pages load correctly, your server's email client is working correctly. If they do not \u2014 for instance, MSU's Domain of One's Own accounts currently are not working \u2014 you must contact the administrators of your server to rectify this. Return to your Kora Configuration File page tab. Scrolling down, you will find the text boxes for your email information. Leave \"Mail Host\" with \"localhost\". For \"Mail From Address\", it is best to enter the email address you just created so that the emails user receive appear to come from that account; in this example, \"admin@kora.geyerbri.msu.domains\". Set the \"Mail From Name\" to your own preference, such as \"Kora Admin\". The \"Mail User\" setting is how Kora connects with your server's mail client, to actually send the email. So this one must be set to an appropriately-configured email, such as the one just created; in this example, \"admin@kora.geyerbri.msu.domains\" again. Finally, paste in the save email password into the last box, \"Mail Password\". Save all of these configurations by clicking \"Update Configuration File\". See all of these settings in this screenshot: Note If your server email is disabled by account administrators \u2014 as is the case for MSU Domain of One's Own accounts \u2014 and you cannot get another server email to successfully work with Kora, it is still possible to do anything that may appear to require the email server working, such as confirming new users, inviting users, or setting passwords. Find instructions for these tasks in the guide for managing Kora user accounts .","title":"Set Up Server Email and Link It to Kora"},{"location":"getting-started/installing_kora_domains/#admin-user-profile-settings","text":"The final portion of configuration is for the admin account's profile settings. This section is specific to what is a part of the initial configuration for Kora, but this documentation website also has a more complete guide for user profile settings . To get there to the profile settings page, select the user icon in the upper-right. Then choose \"Edit My Profile.\" On this page, you can change the username and password that were auto-generated when installing Kora in Terminal, however it is probably best to leave these alone. However, it is important to change the default admin email here because it is shown to users at various locations throughout Kora. Change it to either your own professional email address, or if you plan to check the server email account set up before (either through the interface you loaded before, or by forwarding it to an email client), set it to that address. You can also change the displayed admin name, if you wish, as it is also displayed to users in various locations. Finally, should you wish to change the admin account password from what was auto-generated to one you prefer, you can do that here. Once all these have been set, click \"Update Profile\" to complete your setup.","title":"Admin User Profile Settings"},{"location":"getting-started/installing_kora_domains/#testing-the-installation","text":"To check whether or not your installation works properly: Create a Project . Create a Form in that project. Create a Field in that project with the field type set to one of the File types (setting it to \"Documents\" will give the greatest flexibility for uploading any file to test). And finally, create a Record where you upload an example file. If the creation of that Record with an uploaded file succeeds, such that the uploaded file is viewable or downloadable when clicked upon, then your permissions are correct. If this fails, please go to \" Set 'Write' and 'Execute' Privileges On Certain Directories if Needed via cPanel Terminal \" above. Follow the instructions there for using cPanel Terminal to adjust your Kora installation's permissions on the correct directories.","title":"Testing the Installation"},{"location":"getting-started/searching_and_browsing/","text":"Coming soon.","title":"Understanding Core Concepts"},{"location":"getting-started/system_requirements/","text":"System Requirements Kora requires a server environment with at least 1 GB of storage and 1 GB of RAM, deployed with what is referred to as a LAMP Stack. LAMP stands for: Linux Operating System Apache (Version 2.0) MySQL (Version 5.7.20) PHP (Version 7.1.3 to 7.2.32) These versions are Kora's minimum version requirements. Oftentimes, the server environment will rely on minor variations of these. For instance, the httpd (or Hypertext Transfer Protocol Daemon) version of Apache 2 is often used. Use whichever installer is available for your Linux-based environment to install \u2014 or confirm installation of \u2014 the most recent versions of these basic applications in your Linux server environment. Common installers include apt (Advanced Package Tool) and yum (Yellowdog Updater, Modifier). PHP Packages After confirming the environment is a LAMP Stack with the appropriate version levels for MySQL and PHP, it will be important to install several additional PHP packages. These are: php-common php-mysql php-xml php-xmlrpc php-curl php-gd php-imagick php-cli php-dev php-imap php-mbstring php-opcache php-soap php-zip php-intl Install the versions of these packages that correspond to the version of PHP you have installed as a part of your LAMP Stack. If other issues arise, it may be that some other PHP modules not included in the core PHP installation or packages listed above are also required. Kora is build on the Laravel PHP Framework, so it is possible one of its required PHP modules is missing from your server environment and so the culprit. Enabling mod_rewrite Kora is designed to have only its \"public\" folder accessible online. To accomplish this, it uses an Apache module called mod_rewrite to manage internet browser navigation within the installation, via the \".htaccess\" file inside the \"public\" directory. Different servers handle enabling and disabling mod_rewrite in different ways, so it will be important for you to find out how this is managed with your specific circumstance and then confirm that mod_rewrite is enabled for the domain where Kora is accessed. This sometimes requires finding the \".conf\" file for your version of Apache, which contains the overarching permissions for, among many modules, mod_rewrite . Determining where this \".conf\" file is saved is sometimes possible by temporarily creating a webpage on your domain that provides a full readout of your PHP configuration. Create a file named \"server-readout.php\" in the root directory for your domain; this is often named \"html\", \"public\", or \"www\". Further, it is often also the inner-most of these directories; this means, if the directory \"www\" exists, but inside this is a subdirectory named \"html\", the root directory is most likely \"html\". Inside the created file, put the single line: <?php phpinfo(); ?> To do this via an SSH Terminal connection instead, navigate to the domain root (again, often named \"html\", or \"public\", or \"www\") and then use the following command to create this file with the same contents: echo \"<?php phpinfo(); ?>\" > server-readout.php Once created, you can navigate to this file in your brower: http(s)://your.domain.name/server-readout.php. This page has a ton of sensitive information, so you should not leave it up for long. It has a banner similar to this at the top: Scrolling down to the section called \"apache2handler\" or similar, you will find the apache root directory \u2014 which will contain the relevant \".conf\" file \u2014 as well as confirmation that mod_rewrite is loaded generally as a module, as noted in this screenshot: If the mod_rewrite module is not loaded, use the version of apache your environment is running to search for case specific instructions on how to load it. For instance, for an environment using a generic version of apache, you might run the following commands one at a time: sudo a2enmod rewrite sudo service apache2 restart Each of these commands uses sudo , which tells the linux system to run the command as a super user (it's an acronym for \"super user do\"). It is necessary to also restart apache, in order for the change to take effect. To ensure your \".conf\" file is properly configured to allow mod_rewrite to function properly in \".htaccess\" files, you will next need to navigate to the aforementioned apache root directory. Inside you will find a directory, likely named either \"httpd\" or \"apache\"; inside of this directory will be the relevant \".conf\" file. In the case of an environment using \"httpd\", this file will be named \"httpd.conf\". Edit this file. If using SSH or Terminal, open the file for editing by using the nano text editor that comes built in: sudo nano httpd.conf and scroll through, looking for a section that looks something similar to: <Directory \"/var/www/html\"> AllowOverride None # Allow open access: Require all granted </Directory> In this case, the root directory fo this domain is inside \"html\", which is inside \"www\", which is itself inside \"var\", so in this example the relevant code in the .conf file is for /var/www/html . In other cases the relevant code will correspond to some other directory. In this example, note how AllowOverride is set to None ; to allow mod_rewrite to work properly, change AllowOverride None to AllowOverride All : <Directory \"/var/www/html\"> AllowOverride All # Allow open access: Require all granted </Directory> Save this change; if using SSH or Terminal, do this by exiting with the key combination \"ctrl + x\", and then hitting \"y\" to agree to saving the file. It will ask for the file name to be saved, but default to the file's current name, which is what you'll want. Hit \"enter\" to save and exit nano. After adjusting this file, restart your apache. Once again, if yours is the generic version, use: sudo service apache2 restart Once finished, mod_overwrite will be enabled for your root directory. Important: Remember to delete the .php page you created, containing your server information. This can be done via SSH or Terminal, when located in its directory, with the command: rm server-readout.php HTTPS and SSL Certificate Kora requires the HTTPS protocol to be enabled for the domain in which it is accessible, which requires an SSL certificate. For some server environments, the included interface \u2014 such as cPanel \u2014 will have a section for managing the process of enabling HTTPS and acquiring/associating an SSL certificate as a part of that process. Sometimes \u2014 such as with MSU's Domains of One's Own accounts and their corresponding cPanel \u2014 the SSL certificate and its renewal are handled behind-the-scenes, so to speak, and the certificate is acquired/associated when the HTTPS protocol option is enabled. In other instances, it will be necessary to apply for an SSL certificate. This can be done in a number of ways, but the one most commonly used as a cost-free method is through a server application called Certbot , which manages the application, acquisition, and association of an SSL certificate from a free certificate supplier called Let's Encrypt . Certbot is a great option for those who need to go this route because it can also be configured to handle automatic certification renewals, since SSL certificates expire. One possible way to install certbot into your server environment is from Certbot directly, and then to provide \"Execute\" permissions. wget https://dl.eff.org/certbot-auto chmod a+x certbot-auto The specifics of using certbot will depend upon your domain, email address, etc. so it wouldn't be possible to provide a guide here. Certbot provides some more-granular instructions for use on their \"Instructions\" page , which should be enough to get the SSL certificate needed. Google reCAPTCHA Kora requires integration with Google's reCAPTCHA verification service. Instructions for how to implement this can be found in the Reclaim Hosting/Domain of One's Own installation guide . Kora Email Kora requires a Simple Mail transfer Protocol (SMTP) email server for sending emails related to new user sign-ups, invitations, or lost passwords. In some cases, the email server will be handled by some part of the included interface \u2014 including in many cPanel-based interfaces \u2014 but in others the email server may be managed via the SSH connection to the environment. When configuring Kora's email settings, it is possible to use an SMTP server on another domain, by providing the appropriate domain name for the server for \"Mail Host,\" appropriate user email address from that server for \"Mail User,\" and the email address's password in \"Mail Password.\" Please see Step 5 of \" Set Up Server Email and Link It to Kora .\" Additionally, if the \"Mail User\" and \"Mail From Address\" do not match, the recipient's mail client is more likely to flag the generated email as spam. In the case of MSU's Domains of one's Own, emails have been entirely disabled to comply with a univeristy-wide policy. If you are unable to set up an SMTP server to use with your Kora installation \u2014 such as on another, privately-managed domain \u2014 you will need to manage user creation and password resets manually. To do this, please consult the guide for manually managing Kora user accounts .","title":"System Requirements"},{"location":"getting-started/system_requirements/#system-requirements","text":"Kora requires a server environment with at least 1 GB of storage and 1 GB of RAM, deployed with what is referred to as a LAMP Stack. LAMP stands for: Linux Operating System Apache (Version 2.0) MySQL (Version 5.7.20) PHP (Version 7.1.3 to 7.2.32) These versions are Kora's minimum version requirements. Oftentimes, the server environment will rely on minor variations of these. For instance, the httpd (or Hypertext Transfer Protocol Daemon) version of Apache 2 is often used. Use whichever installer is available for your Linux-based environment to install \u2014 or confirm installation of \u2014 the most recent versions of these basic applications in your Linux server environment. Common installers include apt (Advanced Package Tool) and yum (Yellowdog Updater, Modifier).","title":"System Requirements"},{"location":"getting-started/system_requirements/#php-packages","text":"After confirming the environment is a LAMP Stack with the appropriate version levels for MySQL and PHP, it will be important to install several additional PHP packages. These are: php-common php-mysql php-xml php-xmlrpc php-curl php-gd php-imagick php-cli php-dev php-imap php-mbstring php-opcache php-soap php-zip php-intl Install the versions of these packages that correspond to the version of PHP you have installed as a part of your LAMP Stack. If other issues arise, it may be that some other PHP modules not included in the core PHP installation or packages listed above are also required. Kora is build on the Laravel PHP Framework, so it is possible one of its required PHP modules is missing from your server environment and so the culprit.","title":"PHP Packages"},{"location":"getting-started/system_requirements/#enabling-mod_rewrite","text":"Kora is designed to have only its \"public\" folder accessible online. To accomplish this, it uses an Apache module called mod_rewrite to manage internet browser navigation within the installation, via the \".htaccess\" file inside the \"public\" directory. Different servers handle enabling and disabling mod_rewrite in different ways, so it will be important for you to find out how this is managed with your specific circumstance and then confirm that mod_rewrite is enabled for the domain where Kora is accessed. This sometimes requires finding the \".conf\" file for your version of Apache, which contains the overarching permissions for, among many modules, mod_rewrite . Determining where this \".conf\" file is saved is sometimes possible by temporarily creating a webpage on your domain that provides a full readout of your PHP configuration. Create a file named \"server-readout.php\" in the root directory for your domain; this is often named \"html\", \"public\", or \"www\". Further, it is often also the inner-most of these directories; this means, if the directory \"www\" exists, but inside this is a subdirectory named \"html\", the root directory is most likely \"html\". Inside the created file, put the single line: <?php phpinfo(); ?> To do this via an SSH Terminal connection instead, navigate to the domain root (again, often named \"html\", or \"public\", or \"www\") and then use the following command to create this file with the same contents: echo \"<?php phpinfo(); ?>\" > server-readout.php Once created, you can navigate to this file in your brower: http(s)://your.domain.name/server-readout.php. This page has a ton of sensitive information, so you should not leave it up for long. It has a banner similar to this at the top: Scrolling down to the section called \"apache2handler\" or similar, you will find the apache root directory \u2014 which will contain the relevant \".conf\" file \u2014 as well as confirmation that mod_rewrite is loaded generally as a module, as noted in this screenshot: If the mod_rewrite module is not loaded, use the version of apache your environment is running to search for case specific instructions on how to load it. For instance, for an environment using a generic version of apache, you might run the following commands one at a time: sudo a2enmod rewrite sudo service apache2 restart Each of these commands uses sudo , which tells the linux system to run the command as a super user (it's an acronym for \"super user do\"). It is necessary to also restart apache, in order for the change to take effect. To ensure your \".conf\" file is properly configured to allow mod_rewrite to function properly in \".htaccess\" files, you will next need to navigate to the aforementioned apache root directory. Inside you will find a directory, likely named either \"httpd\" or \"apache\"; inside of this directory will be the relevant \".conf\" file. In the case of an environment using \"httpd\", this file will be named \"httpd.conf\". Edit this file. If using SSH or Terminal, open the file for editing by using the nano text editor that comes built in: sudo nano httpd.conf and scroll through, looking for a section that looks something similar to: <Directory \"/var/www/html\"> AllowOverride None # Allow open access: Require all granted </Directory> In this case, the root directory fo this domain is inside \"html\", which is inside \"www\", which is itself inside \"var\", so in this example the relevant code in the .conf file is for /var/www/html . In other cases the relevant code will correspond to some other directory. In this example, note how AllowOverride is set to None ; to allow mod_rewrite to work properly, change AllowOverride None to AllowOverride All : <Directory \"/var/www/html\"> AllowOverride All # Allow open access: Require all granted </Directory> Save this change; if using SSH or Terminal, do this by exiting with the key combination \"ctrl + x\", and then hitting \"y\" to agree to saving the file. It will ask for the file name to be saved, but default to the file's current name, which is what you'll want. Hit \"enter\" to save and exit nano. After adjusting this file, restart your apache. Once again, if yours is the generic version, use: sudo service apache2 restart Once finished, mod_overwrite will be enabled for your root directory. Important: Remember to delete the .php page you created, containing your server information. This can be done via SSH or Terminal, when located in its directory, with the command: rm server-readout.php","title":"Enabling mod_rewrite"},{"location":"getting-started/system_requirements/#https-and-ssl-certificate","text":"Kora requires the HTTPS protocol to be enabled for the domain in which it is accessible, which requires an SSL certificate. For some server environments, the included interface \u2014 such as cPanel \u2014 will have a section for managing the process of enabling HTTPS and acquiring/associating an SSL certificate as a part of that process. Sometimes \u2014 such as with MSU's Domains of One's Own accounts and their corresponding cPanel \u2014 the SSL certificate and its renewal are handled behind-the-scenes, so to speak, and the certificate is acquired/associated when the HTTPS protocol option is enabled. In other instances, it will be necessary to apply for an SSL certificate. This can be done in a number of ways, but the one most commonly used as a cost-free method is through a server application called Certbot , which manages the application, acquisition, and association of an SSL certificate from a free certificate supplier called Let's Encrypt . Certbot is a great option for those who need to go this route because it can also be configured to handle automatic certification renewals, since SSL certificates expire. One possible way to install certbot into your server environment is from Certbot directly, and then to provide \"Execute\" permissions. wget https://dl.eff.org/certbot-auto chmod a+x certbot-auto The specifics of using certbot will depend upon your domain, email address, etc. so it wouldn't be possible to provide a guide here. Certbot provides some more-granular instructions for use on their \"Instructions\" page , which should be enough to get the SSL certificate needed.","title":"HTTPS and SSL Certificate"},{"location":"getting-started/system_requirements/#google-recaptcha","text":"Kora requires integration with Google's reCAPTCHA verification service. Instructions for how to implement this can be found in the Reclaim Hosting/Domain of One's Own installation guide .","title":"Google reCAPTCHA"},{"location":"getting-started/system_requirements/#kora-email","text":"Kora requires a Simple Mail transfer Protocol (SMTP) email server for sending emails related to new user sign-ups, invitations, or lost passwords. In some cases, the email server will be handled by some part of the included interface \u2014 including in many cPanel-based interfaces \u2014 but in others the email server may be managed via the SSH connection to the environment. When configuring Kora's email settings, it is possible to use an SMTP server on another domain, by providing the appropriate domain name for the server for \"Mail Host,\" appropriate user email address from that server for \"Mail User,\" and the email address's password in \"Mail Password.\" Please see Step 5 of \" Set Up Server Email and Link It to Kora .\" Additionally, if the \"Mail User\" and \"Mail From Address\" do not match, the recipient's mail client is more likely to flag the generated email as spam. In the case of MSU's Domains of one's Own, emails have been entirely disabled to comply with a univeristy-wide policy. If you are unable to set up an SMTP server to use with your Kora installation \u2014 such as on another, privately-managed domain \u2014 you will need to manage user creation and password resets manually. To do this, please consult the guide for manually managing Kora user accounts .","title":"Kora Email"},{"location":"getting-started/understanding_kora_user_types_and_permissions/","text":"Understanding Kora User Types and Permissions Understanding Kora's user types and associated permissions is critical for managing a Kora installation or project (or for understanding what you, as a user, have permission to do within a Kora installation). Kora takes a somewhat unique approach to user types and permissions. Instead of having a variety of user types, each with their own fixed array of permissions, Kora (mostly) uses a group model. Basically, a permission group in Kora is a bucket to which a Kora admin assigns permissions (called group permissions). Any user can be placed in a permission group, thereby inheriting the permissions of the group. The point of this model is to provide maximum flexibility for user management. A Kora admin could create a permission group that only allows users to view records, while another permission group could allow users to view and edit records. There are two types of permission groups: Project Groups and Form Groups . Each group type has slightly different options (more on that below), since what can be done in a Kora project is different from what can be done in a Kora form. Beyond permission groups, there are three fixed user types: Kora Admin , Project Admin , and Form Admin . Kora Admin A Kora admin sits on top of the user pyramid. They have access to all projects in a Kora install, and have unique management privileges such as: creating, editing, and deleting projects; importing and exporting projects; configuring a Kora install; managing all users in a Kora install; and managing Kora tokens and API requests. In addition, they have all of the privileges of all other user types and permission groups. Essentially, a Kora admin can do anything in a Kora install. While all new Kora installs require at least one admin, you (as an admin) can create any number of other admin accounts. Project Admin Similar to the Kora Admin, the Project Admin sits at the top of the user pyramid within a project . While they can't create new projects, they pretty much can do anything within the project for which they are an admin. This includes creating forms, editing forms, deleting forms, creating field value presets, importing and exporting forms, and managing user permissions. They also have the permissions of all of the user and permission groups below them. Form Admin Similar to Kora Admins and Project Admins, a Form Admin is a top-level user within a form . While they can't create new forms, they have pretty much all other permissions within the form for which they are an admin. This includes managing form permissions, managing associator permissions (by managing which forms are allowed to associate to others), importing and exporting records, deleting records, deleting all records, deleting old record files (including deleting files that belong to a record which no longer exists), managing record presets, managing revisions, creating and editing fields, creating and editing records, deleting records, and modifying form layouts. Project Groups As its name suggests, a Project Group exists on the project level, and controls permissions of that group of users within a single project. Project groups have three options that can be turned on or off: Create Forms, Edit Forms, and Delete Forms. By default, when a new project is created in Kora, there are two permission groups: Admin Group and Default Group . The Admin Group has all three options mentioned above enabled; the Default Group, on the other hand, has all three disabled. Project Admins (or Kora Admins) can enable or disable any of the options for the two default permission groups, or create any number of new groups as needed. Need to learn how to add/remove users within a project? Visit the \" Adding Users to Projects \" guide. Form Groups As its name suggests, a Form Group exists on the form level. It controls the permissions of that group of users within a single form. Form Groups have 6 options that can be enabled or disabled: Create Field, Edit Field, Delete Field, Create Record, Edit Record, and Delete Record. When a new form is created, two default permission groups are created: Admin Group and Default Group. The Admin Group has all of the aforementioned options enabled, while the Default Group has all of them disabled. A Form Admin (or a Project Admin or Kora Admin, for that matter) can modify these as they see fit, or create any number of new Form Groups as needed. Need to learn how to add/remove users in specific forms within a project? Visit the \" Adding Users to Forms \" guide.","title":"Understanding Kora User Types and Permissions"},{"location":"getting-started/understanding_kora_user_types_and_permissions/#understanding-kora-user-types-and-permissions","text":"Understanding Kora's user types and associated permissions is critical for managing a Kora installation or project (or for understanding what you, as a user, have permission to do within a Kora installation). Kora takes a somewhat unique approach to user types and permissions. Instead of having a variety of user types, each with their own fixed array of permissions, Kora (mostly) uses a group model. Basically, a permission group in Kora is a bucket to which a Kora admin assigns permissions (called group permissions). Any user can be placed in a permission group, thereby inheriting the permissions of the group. The point of this model is to provide maximum flexibility for user management. A Kora admin could create a permission group that only allows users to view records, while another permission group could allow users to view and edit records. There are two types of permission groups: Project Groups and Form Groups . Each group type has slightly different options (more on that below), since what can be done in a Kora project is different from what can be done in a Kora form. Beyond permission groups, there are three fixed user types: Kora Admin , Project Admin , and Form Admin .","title":"Understanding Kora User Types and Permissions"},{"location":"getting-started/understanding_kora_user_types_and_permissions/#kora-admin","text":"A Kora admin sits on top of the user pyramid. They have access to all projects in a Kora install, and have unique management privileges such as: creating, editing, and deleting projects; importing and exporting projects; configuring a Kora install; managing all users in a Kora install; and managing Kora tokens and API requests. In addition, they have all of the privileges of all other user types and permission groups. Essentially, a Kora admin can do anything in a Kora install. While all new Kora installs require at least one admin, you (as an admin) can create any number of other admin accounts.","title":"Kora Admin"},{"location":"getting-started/understanding_kora_user_types_and_permissions/#project-admin","text":"Similar to the Kora Admin, the Project Admin sits at the top of the user pyramid within a project . While they can't create new projects, they pretty much can do anything within the project for which they are an admin. This includes creating forms, editing forms, deleting forms, creating field value presets, importing and exporting forms, and managing user permissions. They also have the permissions of all of the user and permission groups below them.","title":"Project Admin"},{"location":"getting-started/understanding_kora_user_types_and_permissions/#form-admin","text":"Similar to Kora Admins and Project Admins, a Form Admin is a top-level user within a form . While they can't create new forms, they have pretty much all other permissions within the form for which they are an admin. This includes managing form permissions, managing associator permissions (by managing which forms are allowed to associate to others), importing and exporting records, deleting records, deleting all records, deleting old record files (including deleting files that belong to a record which no longer exists), managing record presets, managing revisions, creating and editing fields, creating and editing records, deleting records, and modifying form layouts.","title":"Form Admin"},{"location":"getting-started/understanding_kora_user_types_and_permissions/#project-groups","text":"As its name suggests, a Project Group exists on the project level, and controls permissions of that group of users within a single project. Project groups have three options that can be turned on or off: Create Forms, Edit Forms, and Delete Forms. By default, when a new project is created in Kora, there are two permission groups: Admin Group and Default Group . The Admin Group has all three options mentioned above enabled; the Default Group, on the other hand, has all three disabled. Project Admins (or Kora Admins) can enable or disable any of the options for the two default permission groups, or create any number of new groups as needed. Need to learn how to add/remove users within a project? Visit the \" Adding Users to Projects \" guide.","title":"Project Groups"},{"location":"getting-started/understanding_kora_user_types_and_permissions/#form-groups","text":"As its name suggests, a Form Group exists on the form level. It controls the permissions of that group of users within a single form. Form Groups have 6 options that can be enabled or disabled: Create Field, Edit Field, Delete Field, Create Record, Edit Record, and Delete Record. When a new form is created, two default permission groups are created: Admin Group and Default Group. The Admin Group has all of the aforementioned options enabled, while the Default Group has all of them disabled. A Form Admin (or a Project Admin or Kora Admin, for that matter) can modify these as they see fit, or create any number of new Form Groups as needed. Need to learn how to add/remove users in specific forms within a project? Visit the \" Adding Users to Forms \" guide.","title":"Form Groups"},{"location":"getting-started/working_with_the_dashboard/","text":"Working with the Dashboard Once Kora has been installed and properly configured, your dashboard provides an at-a-glance view of your projects, forms, and records. The dashboard is made up of a series of blocks that give quick access to those things in your Kora install that are most relevant to you. Enable/Disable Dashboard You can enable or disable your dashboard from your user preferences . Follow these steps to enable/disable your dashboard: When you are logged into Kora, you can access your user preferences from anywhere. Click on the person icon in the top menu located in the top right corner of the page. This will open a dropdown menu. Choose the \"My Preferences\" option. On the \"My Preferences\" page, you are able to modify your Kora preferences. There are four different preferences you can modify. This is where you can chose to enable or disable your dashboard. The dashboard option allows you to choose whether you would like to use the dashboard or to turn off the dashboard entirely. Click the circle next to the option you would like to select. This will change the color of the circle and text and add a white checkmark within the circle. When you have finished making changes to your Kora user preferences, click the Update Preferences blue button at the bottom of the page to save the changes. Dashboard Sections You can organize your dashboard into sections. This can allow you to put blocks (projects, forms, records, quotes, notes, and a Kora Twitter feed) into different areas. Adding Sections to your Dashboard Select Edit your Dashboard . Scroll to the bottom of your dashboard until you find Type Here and Hit Enter to Add a New Section . Type in your section title and then hit enter on your keyboard to add the section to your dashboard. You can add as many sections as you would like during this step. Click Select to Finish Editing at the top, or the Finish Editing Dashboard button at the bottom, to exit. Removing Sections from your Dashboard Select Edit your Dashboard . Scroll until you find the section you would like to remove and click the X on the right side of the screen. Click Select to Finish Editing at the top, or the Finish Editing Dashboard button at the bottom, to exit. Dashboard Blocks Blocks are shortcuts you can add to your dashboard sections. These can be shortcuts to projects, forms, records, notes, Twitter feed from Kora, and auto-generated quotes. Adding Blocks to your Dashboard Navigate to your dashboard and select Add New Block This will open a modal. Here you can decide what type you would like to add to your block, including Project, Form, Record, Quote, Kora Twitter, and a Note. See the following sub-sections for detailed instruction for each Block Type option. Following your selection of block type and section, click the Add New Dashboard Block button. Adding a Project to Dashboard Block Select Project from the Dashboard Block type drop-down menu. Select the project that you want to appear on your dashboard. Once you've selected the project for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Adding a Form to Dashboard Block Select Form from the Dashboard Block type drop-down menu. Select the form that you want to appear on your dashboard. Once you've selected the form for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Adding a Record to Dashboard Block Select Record from the Dashboard Block type drop-down menu. Enter the record KID (the unique idenifier for each record within the Kora system) that you want to appear on your dashboard. Once you've selected the record for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Adding a Quote to Dashboard Block Select Quote from the Dashboard Block type drop-down menu. Once you've selected the record for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Auto-Generated Quote Blocks The quotes used for this option are generated from a fixed list in a function contained in the underlying Laravel PHP framework Kora is build upon. There are 13 total quotes that are randomly selected to appear in the quote block on the dashboard. \"When there is no desire, all things are at peace.\" \u2013 Laozi \"Simplicity is the ultimate sophistication.\" \u2013 Leonardo da Vinci \"Simplicity is the essence of happiness.\" \u2013 Cedric Bledsoe \"Smile, breathe, and go slowly.\" \u2013 Thich Nhat Hanh \"Simplicity is an acquired taste.\" \u2013 Katharine Gerould \"Well begun is half done.\" \u2013 Aristotle \"He who is contented is rich.\" \u2013 Laozi \"Very little is needed to make a happy life.\" \u2013 Marcus Antoninus \"It is quality rather than quantity that matters.\" \u2013 Lucius Annaeus Seneca \"Genius is one percent inspiration and ninety-nine percent perspiration.\" \u2013 Thomas Edison \"Computer science is no more about computers than astronomy is about telescopes.\" \u2013 Edsger Dijkstra \"It always seems impossible until it is done.\" \u2013 Nelson Mandela \"Act only according to that maxim whereby you can, at the same time, will that it should become a universal law.\" \u2013 Immanuel Kant Adding Kora Twitter to Dashboard Block Select Kora Twitter from the Dashboard Block type drop-down menu. Once you've selected Kora Twitter , you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Your Twitter block will appear in your chosen section. Adding a Note to a Dashboard Block Select Note from the Dashboard Block type drop-down menu. Enter your Note Title (maximum of 30 characters) that want to appear on your dashboard. This is required. Enter your Note Content (maximum of 300 characters) that you want to appear on your dashboard. This is required. Once you've selected the form for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Edit Blocks on Dashboard You are also able to edit the blocks that you've created in the dashboard. Follow these steps: Select Edit your Dashboard . Hover your mouse over the block which you wish to edit. Select Edit Block in the center This will open a modal for editing your block. Here you have the option to change the Block Type and make any other changes you require. When you have finished making your changes, click the Update Block button at the bottom of the modal. Removing Blocks from Dashboard Select Edit your Dashboard . Hover your mouse over the block which you wish to edit. Select the trash can icon in the bottom left corner of the block you would like to remove. A pop-up will appear asking you to confirm deleting the block. Select the red Delete Block button at the bottom of the modal to confirm. When you have finished making your changes, click the Update Block button at the bottom of the modal. Editing Quick Access Actions The quick actions in Kora are the six icons on the bottom of each block in your dashboard. If you want to rearrange the order of Quick Action items, then follow these steps: Select Edit your Dashboard . Hover your mouse over the block whose Quick Actions you wish to edit. Select Edit Quick Actions . This will prompt the Edit Quick Actions modal to appear. You may edit the order of quick actions by either pressing the up arrow or down arrow . Alternatively, you may also click on the Quick Action you want to reorder, and drag it to its desired location. Note that only the top 6 Quick Actions will be displayed in the block that you are editing. The remaining three will appear when you hover over the three-dot icon on the far right. Click Update Quick actions to save your changes. To exit, click either Select to Finish Editing at the top, or Finish Editing Dashboard at the bottom of the page.","title":"Working with the Dashboard"},{"location":"getting-started/working_with_the_dashboard/#working-with-the-dashboard","text":"Once Kora has been installed and properly configured, your dashboard provides an at-a-glance view of your projects, forms, and records. The dashboard is made up of a series of blocks that give quick access to those things in your Kora install that are most relevant to you.","title":"Working with the Dashboard"},{"location":"getting-started/working_with_the_dashboard/#enabledisable-dashboard","text":"You can enable or disable your dashboard from your user preferences . Follow these steps to enable/disable your dashboard: When you are logged into Kora, you can access your user preferences from anywhere. Click on the person icon in the top menu located in the top right corner of the page. This will open a dropdown menu. Choose the \"My Preferences\" option. On the \"My Preferences\" page, you are able to modify your Kora preferences. There are four different preferences you can modify. This is where you can chose to enable or disable your dashboard. The dashboard option allows you to choose whether you would like to use the dashboard or to turn off the dashboard entirely. Click the circle next to the option you would like to select. This will change the color of the circle and text and add a white checkmark within the circle. When you have finished making changes to your Kora user preferences, click the Update Preferences blue button at the bottom of the page to save the changes.","title":"Enable/Disable Dashboard"},{"location":"getting-started/working_with_the_dashboard/#dashboard-sections","text":"You can organize your dashboard into sections. This can allow you to put blocks (projects, forms, records, quotes, notes, and a Kora Twitter feed) into different areas.","title":"Dashboard Sections"},{"location":"getting-started/working_with_the_dashboard/#adding-sections-to-your-dashboard","text":"Select Edit your Dashboard . Scroll to the bottom of your dashboard until you find Type Here and Hit Enter to Add a New Section . Type in your section title and then hit enter on your keyboard to add the section to your dashboard. You can add as many sections as you would like during this step. Click Select to Finish Editing at the top, or the Finish Editing Dashboard button at the bottom, to exit.","title":"Adding Sections to your Dashboard"},{"location":"getting-started/working_with_the_dashboard/#removing-sections-from-your-dashboard","text":"Select Edit your Dashboard . Scroll until you find the section you would like to remove and click the X on the right side of the screen. Click Select to Finish Editing at the top, or the Finish Editing Dashboard button at the bottom, to exit.","title":"Removing Sections from your Dashboard"},{"location":"getting-started/working_with_the_dashboard/#dashboard-blocks","text":"Blocks are shortcuts you can add to your dashboard sections. These can be shortcuts to projects, forms, records, notes, Twitter feed from Kora, and auto-generated quotes.","title":"Dashboard Blocks"},{"location":"getting-started/working_with_the_dashboard/#adding-blocks-to-your-dashboard","text":"Navigate to your dashboard and select Add New Block This will open a modal. Here you can decide what type you would like to add to your block, including Project, Form, Record, Quote, Kora Twitter, and a Note. See the following sub-sections for detailed instruction for each Block Type option. Following your selection of block type and section, click the Add New Dashboard Block button.","title":"Adding Blocks to your Dashboard"},{"location":"getting-started/working_with_the_dashboard/#adding-a-project-to-dashboard-block","text":"Select Project from the Dashboard Block type drop-down menu. Select the project that you want to appear on your dashboard. Once you've selected the project for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button.","title":"Adding a Project to Dashboard Block"},{"location":"getting-started/working_with_the_dashboard/#adding-a-form-to-dashboard-block","text":"Select Form from the Dashboard Block type drop-down menu. Select the form that you want to appear on your dashboard. Once you've selected the form for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button.","title":"Adding a Form to Dashboard Block"},{"location":"getting-started/working_with_the_dashboard/#adding-a-record-to-dashboard-block","text":"Select Record from the Dashboard Block type drop-down menu. Enter the record KID (the unique idenifier for each record within the Kora system) that you want to appear on your dashboard. Once you've selected the record for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button.","title":"Adding a Record to Dashboard Block"},{"location":"getting-started/working_with_the_dashboard/#adding-a-quote-to-dashboard-block","text":"Select Quote from the Dashboard Block type drop-down menu. Once you've selected the record for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button.","title":"Adding a Quote to Dashboard Block"},{"location":"getting-started/working_with_the_dashboard/#auto-generated-quote-blocks","text":"The quotes used for this option are generated from a fixed list in a function contained in the underlying Laravel PHP framework Kora is build upon. There are 13 total quotes that are randomly selected to appear in the quote block on the dashboard. \"When there is no desire, all things are at peace.\" \u2013 Laozi \"Simplicity is the ultimate sophistication.\" \u2013 Leonardo da Vinci \"Simplicity is the essence of happiness.\" \u2013 Cedric Bledsoe \"Smile, breathe, and go slowly.\" \u2013 Thich Nhat Hanh \"Simplicity is an acquired taste.\" \u2013 Katharine Gerould \"Well begun is half done.\" \u2013 Aristotle \"He who is contented is rich.\" \u2013 Laozi \"Very little is needed to make a happy life.\" \u2013 Marcus Antoninus \"It is quality rather than quantity that matters.\" \u2013 Lucius Annaeus Seneca \"Genius is one percent inspiration and ninety-nine percent perspiration.\" \u2013 Thomas Edison \"Computer science is no more about computers than astronomy is about telescopes.\" \u2013 Edsger Dijkstra \"It always seems impossible until it is done.\" \u2013 Nelson Mandela \"Act only according to that maxim whereby you can, at the same time, will that it should become a universal law.\" \u2013 Immanuel Kant","title":"Auto-Generated Quote Blocks"},{"location":"getting-started/working_with_the_dashboard/#adding-kora-twitter-to-dashboard-block","text":"Select Kora Twitter from the Dashboard Block type drop-down menu. Once you've selected Kora Twitter , you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button. Your Twitter block will appear in your chosen section.","title":"Adding Kora Twitter to Dashboard Block"},{"location":"getting-started/working_with_the_dashboard/#adding-a-note-to-a-dashboard-block","text":"Select Note from the Dashboard Block type drop-down menu. Enter your Note Title (maximum of 30 characters) that want to appear on your dashboard. This is required. Enter your Note Content (maximum of 300 characters) that you want to appear on your dashboard. This is required. Once you've selected the form for your block, you have the option to choose what section of your dashboard that you want the block to appear in. Click the Add New Dashboard Block button.","title":"Adding a Note to a Dashboard Block"},{"location":"getting-started/working_with_the_dashboard/#edit-blocks-on-dashboard","text":"You are also able to edit the blocks that you've created in the dashboard. Follow these steps: Select Edit your Dashboard . Hover your mouse over the block which you wish to edit. Select Edit Block in the center This will open a modal for editing your block. Here you have the option to change the Block Type and make any other changes you require. When you have finished making your changes, click the Update Block button at the bottom of the modal.","title":"Edit Blocks on Dashboard"},{"location":"getting-started/working_with_the_dashboard/#removing-blocks-from-dashboard","text":"Select Edit your Dashboard . Hover your mouse over the block which you wish to edit. Select the trash can icon in the bottom left corner of the block you would like to remove. A pop-up will appear asking you to confirm deleting the block. Select the red Delete Block button at the bottom of the modal to confirm. When you have finished making your changes, click the Update Block button at the bottom of the modal.","title":"Removing Blocks from Dashboard"},{"location":"getting-started/working_with_the_dashboard/#editing-quick-access-actions","text":"The quick actions in Kora are the six icons on the bottom of each block in your dashboard. If you want to rearrange the order of Quick Action items, then follow these steps: Select Edit your Dashboard . Hover your mouse over the block whose Quick Actions you wish to edit. Select Edit Quick Actions . This will prompt the Edit Quick Actions modal to appear. You may edit the order of quick actions by either pressing the up arrow or down arrow . Alternatively, you may also click on the Quick Action you want to reorder, and drag it to its desired location. Note that only the top 6 Quick Actions will be displayed in the block that you are editing. The remaining three will appear when you hover over the three-dot icon on the far right. Click Update Quick actions to save your changes. To exit, click either Select to Finish Editing at the top, or Finish Editing Dashboard at the bottom of the page.","title":"Editing Quick Access Actions"},{"location":"management/editing_your_kora_installation_configuration/","text":"Coming soon.","title":"Editing Your Kora Installation Configuration"},{"location":"management/managing_api_tokens/","text":"Coming soon.","title":"Managing API Tokens"},{"location":"management/update_kora/","text":"Coming soon.","title":"Updating a Kora 3 Installation"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/","text":"Accessing and Managing Projects from the Dashboard Your dashboard is a versatile hub that can be customized to contain important interactive blocks for your projects, forms and records. The project block, in particular, makes it easy to access the main page of projects that you work with regularly. It also makes the performing of certain Kora actions for projects, just one click away. What follows is a description of how to use project blocks from your dashboard to manage a project. The Project Block A project block within your dashboard will contain the name of a project and its description. Click on your project name to access that project's main Project page. Below the project name and description are the Quick Action icons. The functions of these Quick Action icons are summarized below then linked to relevant documentation. For instructions on how to reorder your Quick Actions *, see the documentation on working with the dashboard . Project Quick Actions This section lists the types of Quick Actions available to the project block, gives a short description, and provides a link to any further documentation. There are 9 Quick Action options available for a project block: Edit Project This brings you to the Edit Project page where you can change the title and description of your project. Check out the documentation on editing a project Search Project Records This allows you to search through the records within a project. Check out the documentation on searching and browsing records Create New Form This allows you to create a new form for the project in the project block. See the documentation on creating a form Import Form This brings you to the page for importing forms into a project. Check out the documentation on importing a form . Project Permissions This allows administrators to give Kora users the ability to create, edit and delete forms. See section on editing project permissions in the editing projects documentation. Field Value presets These allow you to create predefined field options using lists or regex. For more information, see the documentation on field value presets . Import Multi-Form Records Setup This allows you to import records into multiple forms within a project. See the documentation on importing multi form records . Kora 2 Scheme Importer This allows you to import records from a previous version of the Kora installation. Contact us or create an issue on the official Kora GitHub repository for help if you need to import records in this way. Export Project This allows you to save the project as a .kProj file onto your computer. Check out the documentation on exporting projects .","title":"Accessing and Managing Projects from the Dashboard"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#accessing-and-managing-projects-from-the-dashboard","text":"Your dashboard is a versatile hub that can be customized to contain important interactive blocks for your projects, forms and records. The project block, in particular, makes it easy to access the main page of projects that you work with regularly. It also makes the performing of certain Kora actions for projects, just one click away. What follows is a description of how to use project blocks from your dashboard to manage a project.","title":"Accessing and Managing Projects from the Dashboard"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#the-project-block","text":"A project block within your dashboard will contain the name of a project and its description. Click on your project name to access that project's main Project page. Below the project name and description are the Quick Action icons. The functions of these Quick Action icons are summarized below then linked to relevant documentation. For instructions on how to reorder your Quick Actions *, see the documentation on working with the dashboard .","title":"The Project Block"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#project-quick-actions","text":"This section lists the types of Quick Actions available to the project block, gives a short description, and provides a link to any further documentation. There are 9 Quick Action options available for a project block:","title":"Project Quick Actions"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#edit-project","text":"This brings you to the Edit Project page where you can change the title and description of your project. Check out the documentation on editing a project","title":"Edit Project"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#search-project-records","text":"This allows you to search through the records within a project. Check out the documentation on searching and browsing records","title":"Search Project Records"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#create-new-form","text":"This allows you to create a new form for the project in the project block. See the documentation on creating a form","title":"Create New Form"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#import-form","text":"This brings you to the page for importing forms into a project. Check out the documentation on importing a form .","title":"Import Form"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#project-permissions","text":"This allows administrators to give Kora users the ability to create, edit and delete forms. See section on editing project permissions in the editing projects documentation.","title":"Project Permissions"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#field-value-presets","text":"These allow you to create predefined field options using lists or regex. For more information, see the documentation on field value presets .","title":"Field Value presets"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#import-multi-form-records-setup","text":"This allows you to import records into multiple forms within a project. See the documentation on importing multi form records .","title":"Import Multi-Form Records Setup"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#kora-2-scheme-importer","text":"This allows you to import records from a previous version of the Kora installation. Contact us or create an issue on the official Kora GitHub repository for help if you need to import records in this way.","title":"Kora 2 Scheme Importer"},{"location":"projects/accessing_and_managing_projects_from_the_dashboard/#export-project","text":"This allows you to save the project as a .kProj file onto your computer. Check out the documentation on exporting projects .","title":"Export Project"},{"location":"projects/adding_users_to_projects/","text":"Adding Users to Projects Kora Admins and Project Admins can add additional users to a project. If you are interested in learning how to add users to specific forms within a project, visit the Additional Form Administrators guide. To add additional users to your project, follow these steps: Navigate to your project's landing page. Once there, click the project name in the menu bar to open the project dropdown menu. Click on the Projects Permissions menu item. On the Projects Permissions page, you have the ability to add users to the existing Admin Group or the Default Group . To learn more about the Admin Group and Default Group (and generally how Kora deals with user types and permissions, check out the Understanding Kora User Types and Permissions documentation. Click on Add User(s) to Group , located in the bottom right corner of either the Admin Group box and Default Group box (depending on which group you want to add the new user to). A modal will appear that will allow you to add user(s) to this group. Click on the Select User(s) to Add to Permissions Group dropdown menu to view a list of all users in the Kora install. Select those users you would like to have access to your project (as many as you want). Alternatively, you can type a name into the field to find a particular user (this is helpful if your Kora install has a lot of users, and you don't want to scroll through a very long list of names to find the person you want). If the user you want to add doesn't have an existing Kora account, you can enter their email into the Not Listed Above? Invite Users Via Email field. Separate multiple emails should be separated by a comma. Enter a personal message (which will be included in the invite email) into the Include a Personal Message? field. When you are finished, click the Add User(s) to Permisons Group button. A pop-up window will appear on the top right of the screen notifying you that your user(s) were successfully added. Removing User from Project To remove users from a project, navigate to the . Project Permissions page (as described above). Click on the X to the right of the name of the person you wish to remove. When the confirmation pop-up window opens, click on the red Remove User From Group button. A pop-up will appear on the top right corner of your screen notifying you that the user was successfully removed. The removed Kora user will be notified via email. The email notification will include which project(s) they were removed from and who made the permissions change (name, username, and email).","title":"Adding & Removing Users on Projects"},{"location":"projects/adding_users_to_projects/#adding-users-to-projects","text":"Kora Admins and Project Admins can add additional users to a project. If you are interested in learning how to add users to specific forms within a project, visit the Additional Form Administrators guide. To add additional users to your project, follow these steps: Navigate to your project's landing page. Once there, click the project name in the menu bar to open the project dropdown menu. Click on the Projects Permissions menu item. On the Projects Permissions page, you have the ability to add users to the existing Admin Group or the Default Group . To learn more about the Admin Group and Default Group (and generally how Kora deals with user types and permissions, check out the Understanding Kora User Types and Permissions documentation. Click on Add User(s) to Group , located in the bottom right corner of either the Admin Group box and Default Group box (depending on which group you want to add the new user to). A modal will appear that will allow you to add user(s) to this group. Click on the Select User(s) to Add to Permissions Group dropdown menu to view a list of all users in the Kora install. Select those users you would like to have access to your project (as many as you want). Alternatively, you can type a name into the field to find a particular user (this is helpful if your Kora install has a lot of users, and you don't want to scroll through a very long list of names to find the person you want). If the user you want to add doesn't have an existing Kora account, you can enter their email into the Not Listed Above? Invite Users Via Email field. Separate multiple emails should be separated by a comma. Enter a personal message (which will be included in the invite email) into the Include a Personal Message? field. When you are finished, click the Add User(s) to Permisons Group button. A pop-up window will appear on the top right of the screen notifying you that your user(s) were successfully added.","title":"Adding Users to Projects"},{"location":"projects/adding_users_to_projects/#removing-user-from-project","text":"To remove users from a project, navigate to the . Project Permissions page (as described above). Click on the X to the right of the name of the person you wish to remove. When the confirmation pop-up window opens, click on the red Remove User From Group button. A pop-up will appear on the top right corner of your screen notifying you that the user was successfully removed. The removed Kora user will be notified via email. The email notification will include which project(s) they were removed from and who made the permissions change (name, username, and email).","title":"Removing User from Project"},{"location":"projects/archiving_a_project/","text":"Archiving a Project Kora admins and project admins can archive projects. When you archive a project, you are removing it from your main list of active projects. Once archived, the project is listed in the Archived tab of the main project page. Archived projects can be easily un-archived. Archive a Project To archive a project: Navigate to the landing page for the project you'd like to archive. At the top of your project page, click the edit button . Alternatively, you can open the project's menu in the top menu bar and select Edit Project Information . This will bring you to the Edit Project page. Scroll to the bottom of the Edit Project page. Click the black archive button . A modal will appear asking you to confirm if you would like to archive the project. Click the Archive Project button. This will move your project from your Projects list to the Archived Projects list. Unarchive a Project To unarchive a project: Navigate to your project landing page. Click on the Archived tab, located above the Create New Project button. This will bring you to the tab listing all of your archived projects. Find the project you would like to Unarchive and click the Unarchive button located in the bottom right corner of the project card. This will automatically remove the project from the Archived list, and move it back to your Custom and Alphabetical active project lists. You will receive a pop-up notification in the top-right corner of your window informing you that your project was successfully unarchived.","title":"Archiving a Project"},{"location":"projects/archiving_a_project/#archiving-a-project","text":"Kora admins and project admins can archive projects. When you archive a project, you are removing it from your main list of active projects. Once archived, the project is listed in the Archived tab of the main project page. Archived projects can be easily un-archived.","title":"Archiving a Project"},{"location":"projects/archiving_a_project/#archive-a-project","text":"To archive a project: Navigate to the landing page for the project you'd like to archive. At the top of your project page, click the edit button . Alternatively, you can open the project's menu in the top menu bar and select Edit Project Information . This will bring you to the Edit Project page. Scroll to the bottom of the Edit Project page. Click the black archive button . A modal will appear asking you to confirm if you would like to archive the project. Click the Archive Project button. This will move your project from your Projects list to the Archived Projects list.","title":"Archive a Project"},{"location":"projects/archiving_a_project/#unarchive-a-project","text":"To unarchive a project: Navigate to your project landing page. Click on the Archived tab, located above the Create New Project button. This will bring you to the tab listing all of your archived projects. Find the project you would like to Unarchive and click the Unarchive button located in the bottom right corner of the project card. This will automatically remove the project from the Archived list, and move it back to your Custom and Alphabetical active project lists. You will receive a pop-up notification in the top-right corner of your window informing you that your project was successfully unarchived.","title":"Unarchive a Project"},{"location":"projects/creating_a_project/","text":"Creating a Project A project is the highest organizational level in a Kora installation. Each project is a discrete container that has its own forms, records, and users. A single Kora installation can have multiple projects, all of which can be administered and managed separately. To create a project: Click the Create a New Project button at the top of your Projects landing page. This will bring you to the New Project page. Alternatively, you can select Create New Project from the Project dropdown menu On the New Project page, enter the name of the your project in the Project Name field. This is a required field. Next, fill out the project description in the Description field. This is a required field, with a maximum of 1000 characters. From here, you can select additional project administrators. As the creator of the project, you are automatically added as an admin. Open the Select Project Admins dropdown menu to view a list of all users associated with your Kora install. Select those users you would like to add as project admins (as many as you want). Alternatively, you can type a name into the field to find a particular user (this is helpful if your Kora install has a lot of users, and you don't want to scroll through a very long list of names to find the person you want). Remember, you can also add users to your project after it has been created. Visit the Adding Users to Projects documentation for more information. After you have filled out the project name, project description, and selected any additional admins, click the Create Project button at the bottom of the page to create your project. You are also able to edit, delete, archive, export, and import projects. Visit the documentation below to learn how to: Editing a Project Archiving a Project Deleting a Project Importing a Project Exporting a Project","title":"Creating a Project"},{"location":"projects/creating_a_project/#creating-a-project","text":"A project is the highest organizational level in a Kora installation. Each project is a discrete container that has its own forms, records, and users. A single Kora installation can have multiple projects, all of which can be administered and managed separately. To create a project: Click the Create a New Project button at the top of your Projects landing page. This will bring you to the New Project page. Alternatively, you can select Create New Project from the Project dropdown menu On the New Project page, enter the name of the your project in the Project Name field. This is a required field. Next, fill out the project description in the Description field. This is a required field, with a maximum of 1000 characters. From here, you can select additional project administrators. As the creator of the project, you are automatically added as an admin. Open the Select Project Admins dropdown menu to view a list of all users associated with your Kora install. Select those users you would like to add as project admins (as many as you want). Alternatively, you can type a name into the field to find a particular user (this is helpful if your Kora install has a lot of users, and you don't want to scroll through a very long list of names to find the person you want). Remember, you can also add users to your project after it has been created. Visit the Adding Users to Projects documentation for more information. After you have filled out the project name, project description, and selected any additional admins, click the Create Project button at the bottom of the page to create your project. You are also able to edit, delete, archive, export, and import projects. Visit the documentation below to learn how to: Editing a Project Archiving a Project Deleting a Project Importing a Project Exporting a Project","title":"Creating a Project"},{"location":"projects/customizing_project_list_view/","text":"Customizing the Project List View The projects list view refers to your view of projects from the Projects page. The Projects page displays all of the projects that you have access to in a list. This list of projects can then be organized alphabetically or in a customized view. A custom view allows you to place projects you more frequently use at the top of the page. You may also view archived projects from the Projects page. Editing Preferences for How Projects are Viewed When you first navigate to your Projects page, you will always see your projects organized alphabetically from a-z, unless you change the initial default view in your preferences. To change how you view your projects, go to your preferences page and perform the following actions: Scroll down to the section for Projects Page Tab Selection Select either a custom or alphabetical view of your projects. Don't confuse this process with the Single Project Page Tab Selection section, which changes the default view of forms within your projects. Alphabetical Project List View In your Projects page, the alphabetical view will list your projects in order from a-z. After selecting another view, you can always go back to an alphabetical view by clicking Alphabetical as shown below. Custom Project List View In your Projects page, it is also possible to customize the order in which your projects are viewed. Follow these steps to create a custom view of your projects: Make sure that you are in the Custom option on your Projects page. You may change the order of projects in your list by selecting the up arrow or down arrow to the left of each project's name. Another option for moving projects is to click a project that you want to move and drag it to your desired location. Whenever you open up to your custom view in the Projects page, the projects will automatically be shown in the order you have sorted it into. Archived Project List View Another option is to view your projects that have been archived . Simply click on the Archived option in your Projects page to view your archived projects. Your archived projects will always appear in alphabetical order.","title":"Customizing Project List View"},{"location":"projects/customizing_project_list_view/#customizing-the-project-list-view","text":"The projects list view refers to your view of projects from the Projects page. The Projects page displays all of the projects that you have access to in a list. This list of projects can then be organized alphabetically or in a customized view. A custom view allows you to place projects you more frequently use at the top of the page. You may also view archived projects from the Projects page.","title":"Customizing the Project List View"},{"location":"projects/customizing_project_list_view/#editing-preferences-for-how-projects-are-viewed","text":"When you first navigate to your Projects page, you will always see your projects organized alphabetically from a-z, unless you change the initial default view in your preferences. To change how you view your projects, go to your preferences page and perform the following actions: Scroll down to the section for Projects Page Tab Selection Select either a custom or alphabetical view of your projects. Don't confuse this process with the Single Project Page Tab Selection section, which changes the default view of forms within your projects.","title":"Editing Preferences for How Projects are Viewed"},{"location":"projects/customizing_project_list_view/#alphabetical-project-list-view","text":"In your Projects page, the alphabetical view will list your projects in order from a-z. After selecting another view, you can always go back to an alphabetical view by clicking Alphabetical as shown below.","title":"Alphabetical Project List View"},{"location":"projects/customizing_project_list_view/#custom-project-list-view","text":"In your Projects page, it is also possible to customize the order in which your projects are viewed. Follow these steps to create a custom view of your projects: Make sure that you are in the Custom option on your Projects page. You may change the order of projects in your list by selecting the up arrow or down arrow to the left of each project's name. Another option for moving projects is to click a project that you want to move and drag it to your desired location. Whenever you open up to your custom view in the Projects page, the projects will automatically be shown in the order you have sorted it into.","title":"Custom Project List View"},{"location":"projects/customizing_project_list_view/#archived-project-list-view","text":"Another option is to view your projects that have been archived . Simply click on the Archived option in your Projects page to view your archived projects. Your archived projects will always appear in alphabetical order.","title":"Archived Project List View"},{"location":"projects/customizing_your_project_view/","text":"Customizing the View within a Project When you are within an individual project, you can chose to have the forms within that project displayed either alphabetically, or in a custom order. This documentation outlines how to organize the view of your project's forms. Editing Preferences for how Forms are Viewed in a Project When you first navigate to the page for your project, your forms will default to being listed in alphabetical order. To change how you view your forms, go to your preferences page and do the following: Scroll down to the section for Single Project Tab Selection and select either a custom or alphabetical view of your projects. Don't confuse this with the Projects Page Tab Selection section, which changes how all of your projects are organized within the Projects page. Alphabetical View In the page for a single project, the alphabetical view will list your froms in order from a-z. After selecting another view, you can always go back to an alphabetical view by clicking alphabetical as shown below. Custom View It is also possible to customize the order in which your forms are viewed. Follow these steps to create a custom view of your forms. Make sure that you are in the Custom option on your project's page. You may shift the placement of forms in your list by selecting the up arrow or down arrow to the left of each project's name. Another option for moving projects is to click a project that you want to move and drag it to your desired location. Whenever you open up to your custom view in the Projects page, the projects will automatically be shown in the order you have sorted it into.","title":"Customizing your Project View"},{"location":"projects/customizing_your_project_view/#customizing-the-view-within-a-project","text":"When you are within an individual project, you can chose to have the forms within that project displayed either alphabetically, or in a custom order. This documentation outlines how to organize the view of your project's forms.","title":"Customizing the View within a Project"},{"location":"projects/customizing_your_project_view/#editing-preferences-for-how-forms-are-viewed-in-a-project","text":"When you first navigate to the page for your project, your forms will default to being listed in alphabetical order. To change how you view your forms, go to your preferences page and do the following: Scroll down to the section for Single Project Tab Selection and select either a custom or alphabetical view of your projects. Don't confuse this with the Projects Page Tab Selection section, which changes how all of your projects are organized within the Projects page.","title":"Editing Preferences for how Forms are Viewed in a Project"},{"location":"projects/customizing_your_project_view/#alphabetical-view","text":"In the page for a single project, the alphabetical view will list your froms in order from a-z. After selecting another view, you can always go back to an alphabetical view by clicking alphabetical as shown below.","title":"Alphabetical View"},{"location":"projects/customizing_your_project_view/#custom-view","text":"It is also possible to customize the order in which your forms are viewed. Follow these steps to create a custom view of your forms. Make sure that you are in the Custom option on your project's page. You may shift the placement of forms in your list by selecting the up arrow or down arrow to the left of each project's name. Another option for moving projects is to click a project that you want to move and drag it to your desired location. Whenever you open up to your custom view in the Projects page, the projects will automatically be shown in the order you have sorted it into.","title":"Custom View"},{"location":"projects/deleting_a_project/","text":"Deleting a Project To delete a project you must first navigate to your Edit Project page. In order to get access to this page you must first have the correct administrative permissions to delete a project. If you have administrative permission, follow these steps to delete a project. Navigate to the page for editing your project info . The Edit Project Info button is shown from the dashboard in the image below. You are also able to reach the page to edit your project from your list of your projects or the navigation bar when in your project. This will bring you to the Edit Project page. Scroll to the bottom of the page and select the red trash can icon to delete your project. A modal will appear asking if you are sure that you want to delete your project. Click Delete Project to delete your project. Deleting a project can not be undone and all forms and records associated with the deleted project will be lost. A notification in the top-right of the page will confirm that you have deleted the project.","title":"Deleting a Project"},{"location":"projects/deleting_a_project/#deleting-a-project","text":"To delete a project you must first navigate to your Edit Project page. In order to get access to this page you must first have the correct administrative permissions to delete a project. If you have administrative permission, follow these steps to delete a project. Navigate to the page for editing your project info . The Edit Project Info button is shown from the dashboard in the image below. You are also able to reach the page to edit your project from your list of your projects or the navigation bar when in your project. This will bring you to the Edit Project page. Scroll to the bottom of the page and select the red trash can icon to delete your project. A modal will appear asking if you are sure that you want to delete your project. Click Delete Project to delete your project. Deleting a project can not be undone and all forms and records associated with the deleted project will be lost. A notification in the top-right of the page will confirm that you have deleted the project.","title":"Deleting a Project"},{"location":"projects/editing_a_project/","text":"Editing a Project If you have the correct permissions to edit a project, then there are multiple ways to get to the page for editing its info. Once you navigate to the Edit Project page, you are able to change the name, description and permissions for the project. If you want to edit other parts of the project, you will have to go to the individual form or record that you wish to edit. Navigating the Edit Project page There are three options you can follow to navigate to the Edit Project page: If you made your project available on the dashboard as a project block, then you are able to access the Edit Project page directly from here. Simply click on the Edit Project Info button at the bottom-left of the project block. Another option is to navigate to your project list page . From this page you'll be able to select the Edit Project Info button at the bottom-left of each block containing your project. Another option is to click on the Edit Project Info in the upper-right of the initial page view after opening a project. The last option is available when you navigate to the project that you want to edit. Opening up either of the following menu pages will give you the option to click Edit Project Info . Editing a Project After Navigating to the Edit Project page, you have the option to edit certain aspects of your project including your project's name, description and its permissions. You also have the option to archive or delete your project, though the specifics of those actions will not be discussed in this section. Follow these steps to edit the name, description and permissions of your project: Navigate to the Edit Project page. Make any desired edits to the project name and description by editing the entered text. You may also edit the project permissions of users within your project by clicking on the Go To Project Permissions Page button. For more information on editing project permissions, go to the next section. Once all of your edits are finished, click the green Update Project button. Editing Project Permissions Navigating to the Project Permissions page (Step 3 in the previous section, \" Editing a Project \"), you are able to manage the permissions that allow users to create, edit and/or delete forms in your project. You are able to select particular form permissions for users by checking the boxes next to the permissions located in permissions groups. In order to add new users to a permission group follow these steps: The Admin Group will be the first block in the Project Permissions page. These will likely be users who have full permissions to create, edit and delete forms. Below the admin block is the Default Group block where new users with new permissions can be added. Click on Default Group to open it up. Once the block is open, click Add New User(s) to Group to add new users to this group. A modal will appear prompting you to Select User(s) to Add to Permissions Group . Click on the Search and Select Users to be Added to the Permission Group drop-down list. Select the users you want added to this group from the list that appears below the box. You may also remove accidently-selected users by clicking on the x next to their name. You may also invite users for your project using their email address. Separate multiple emails with a space or comma. You may include a personal message that will be included in the email notifying the users that they have been given particular project permissions. Click Add User(s) to Permissions Group when done. Creating a New Permissions Group for a Project You may also create new permissions group for your project, if needed. Follow these steps: From the Project Permissions page (navigate there using Step 3 in a previous section, \" Editing a Project \"), you may select Create a New Permissions Group located just above the admin group. Kora will prompt you for information on the new permissions group. Fill out a new name for the group. Select the particular form permissions that you want the new group to have by checking the boxes next to the particular permissions you want to give. Then select the particular users that you want included in this permission group (Steps 3-5 in the previous section, \" Editing Project Permissions \"), and finish the group by selecting Create New Permission Group . Your new permission group will appear as the bottom block on the Project Permissions page.","title":"Editing a Project"},{"location":"projects/editing_a_project/#editing-a-project","text":"If you have the correct permissions to edit a project, then there are multiple ways to get to the page for editing its info. Once you navigate to the Edit Project page, you are able to change the name, description and permissions for the project. If you want to edit other parts of the project, you will have to go to the individual form or record that you wish to edit.","title":"Editing a Project"},{"location":"projects/editing_a_project/#navigating-the-edit-project-page","text":"There are three options you can follow to navigate to the Edit Project page: If you made your project available on the dashboard as a project block, then you are able to access the Edit Project page directly from here. Simply click on the Edit Project Info button at the bottom-left of the project block. Another option is to navigate to your project list page . From this page you'll be able to select the Edit Project Info button at the bottom-left of each block containing your project. Another option is to click on the Edit Project Info in the upper-right of the initial page view after opening a project. The last option is available when you navigate to the project that you want to edit. Opening up either of the following menu pages will give you the option to click Edit Project Info .","title":"Navigating the Edit Project page"},{"location":"projects/editing_a_project/#editing-a-project_1","text":"After Navigating to the Edit Project page, you have the option to edit certain aspects of your project including your project's name, description and its permissions. You also have the option to archive or delete your project, though the specifics of those actions will not be discussed in this section. Follow these steps to edit the name, description and permissions of your project: Navigate to the Edit Project page. Make any desired edits to the project name and description by editing the entered text. You may also edit the project permissions of users within your project by clicking on the Go To Project Permissions Page button. For more information on editing project permissions, go to the next section. Once all of your edits are finished, click the green Update Project button.","title":"Editing a Project"},{"location":"projects/editing_a_project/#editing-project-permissions","text":"Navigating to the Project Permissions page (Step 3 in the previous section, \" Editing a Project \"), you are able to manage the permissions that allow users to create, edit and/or delete forms in your project. You are able to select particular form permissions for users by checking the boxes next to the permissions located in permissions groups. In order to add new users to a permission group follow these steps: The Admin Group will be the first block in the Project Permissions page. These will likely be users who have full permissions to create, edit and delete forms. Below the admin block is the Default Group block where new users with new permissions can be added. Click on Default Group to open it up. Once the block is open, click Add New User(s) to Group to add new users to this group. A modal will appear prompting you to Select User(s) to Add to Permissions Group . Click on the Search and Select Users to be Added to the Permission Group drop-down list. Select the users you want added to this group from the list that appears below the box. You may also remove accidently-selected users by clicking on the x next to their name. You may also invite users for your project using their email address. Separate multiple emails with a space or comma. You may include a personal message that will be included in the email notifying the users that they have been given particular project permissions. Click Add User(s) to Permissions Group when done.","title":"Editing Project Permissions"},{"location":"projects/editing_a_project/#creating-a-new-permissions-group-for-a-project","text":"You may also create new permissions group for your project, if needed. Follow these steps: From the Project Permissions page (navigate there using Step 3 in a previous section, \" Editing a Project \"), you may select Create a New Permissions Group located just above the admin group. Kora will prompt you for information on the new permissions group. Fill out a new name for the group. Select the particular form permissions that you want the new group to have by checking the boxes next to the particular permissions you want to give. Then select the particular users that you want included in this permission group (Steps 3-5 in the previous section, \" Editing Project Permissions \"), and finish the group by selecting Create New Permission Group . Your new permission group will appear as the bottom block on the Project Permissions page.","title":"Creating a New Permissions Group for a Project"},{"location":"projects/exporting_a_project/","text":"Exporting a Project Kora admins and project admins can export Kora projects. The export process generates a .kProj file which contains project structure and information (title, description) and forms (including all of the form structure). The export process does not export the records themselves. To learn how to export records, visit the Exporting a Record guide. There are a couple of reasons why you might want to export your project. The most notable is that it allows project portability. You can export your project and then import it into another Kora installation, thereby avoiding the need to build the structure of a project from scratch. If you're interested in learning how to import a Kora project, check out the \" Importing a Project \" guide. To export a project: Navigate to the project you'd like to export. Click the name of the project in the top menu bar to open the project's dropdown menu. In the dropdown menu, select Export Project . This will automatically start downloading your project's .kProj export file. Visit the \" Importing a Project \" guide for step-by-step instruction on how to import your project into Kora.","title":"Exporting a Project"},{"location":"projects/exporting_a_project/#exporting-a-project","text":"Kora admins and project admins can export Kora projects. The export process generates a .kProj file which contains project structure and information (title, description) and forms (including all of the form structure). The export process does not export the records themselves. To learn how to export records, visit the Exporting a Record guide. There are a couple of reasons why you might want to export your project. The most notable is that it allows project portability. You can export your project and then import it into another Kora installation, thereby avoiding the need to build the structure of a project from scratch. If you're interested in learning how to import a Kora project, check out the \" Importing a Project \" guide. To export a project: Navigate to the project you'd like to export. Click the name of the project in the top menu bar to open the project's dropdown menu. In the dropdown menu, select Export Project . This will automatically start downloading your project's .kProj export file. Visit the \" Importing a Project \" guide for step-by-step instruction on how to import your project into Kora.","title":"Exporting a Project"},{"location":"projects/importing_a_project/","text":"Importing a Project To import a project, you need to have the .kProj file for the project you want to import. The .kProj file is created during the project export process. Its important to note that a .kProj file only contains the project's structure and information (title, description) and forms (including all of the form structure). The .kProj file does not include the project's records. To learn how to export and import records, check out the \" Exporting a Record \" and \" Importing a Record \" guides. To learn how to import a multi form record , check out the \" Importing a Multiform Record \" guide. To import a project, follow these steps: From anywhere in Kora, click on the Projects option in the top menu bar. In the dropdown menu, click the Import Project Setup . This will bring you to the Import Project Setup page. On the Import Project Setup page, either drag and drop your .kProj file from you computer into the box or choose the Select the Project File here to choose the file using your file browser. Once you have provided your .kProj file, click the Upload Project File button. After you've uploaded your .kProj file, the view will change to the Project Information tab. Here you have the option to enter a project name and description, or you can leave these options blank to use the name and description from the original project. Once you have finished, click the Import Project & Information button. This will automatically upload the project into your Kora instillation. Note : If you wish to learn how to export a project, visit the \" Exporting a Project Guide .\"","title":"Importing a Project"},{"location":"projects/importing_a_project/#importing-a-project","text":"To import a project, you need to have the .kProj file for the project you want to import. The .kProj file is created during the project export process. Its important to note that a .kProj file only contains the project's structure and information (title, description) and forms (including all of the form structure). The .kProj file does not include the project's records. To learn how to export and import records, check out the \" Exporting a Record \" and \" Importing a Record \" guides. To learn how to import a multi form record , check out the \" Importing a Multiform Record \" guide. To import a project, follow these steps: From anywhere in Kora, click on the Projects option in the top menu bar. In the dropdown menu, click the Import Project Setup . This will bring you to the Import Project Setup page. On the Import Project Setup page, either drag and drop your .kProj file from you computer into the box or choose the Select the Project File here to choose the file using your file browser. Once you have provided your .kProj file, click the Upload Project File button. After you've uploaded your .kProj file, the view will change to the Project Information tab. Here you have the option to enter a project name and description, or you can leave these options blank to use the name and description from the original project. Once you have finished, click the Import Project & Information button. This will automatically upload the project into your Kora instillation. Note : If you wish to learn how to export a project, visit the \" Exporting a Project Guide .\"","title":"Importing a Project"},{"location":"records/creating_a_record/","text":"Creating a Record A record is the metadata element. It is generated by entering information into fields within a form . Forms and fields provide the framework in which to enter data, with the resulting records becoming the substance of your repository. To begin creating a record, you must first choose the project that you want to enter records into. Then select the form you would like to enter a record into by clicking on that form's name. Then follow these steps to create a record: To start creating a record, there are two options: One option is to click the Create New Record button on the form home page or you can click the form name in the menu bar to open the dropdown and choose the Create New Record option. alternatively, you may also select Create New Record from the dropdown menu made available by clicking on the form name in the menu bar. This will open a New Record page. Now you can fill out the various fields you have created within the form with your data. All the fields with a green dot next to it are a required field and will have to be filled out. This can only be changed by editing the required field If your form has multiple pages, you can toggle between them using the buttons Previous Page and Next Page at the bottom of the screen. When you are finished entering the information for the record, click Create New Record . Note: When you are uploading any files, there are some restrictions on filenames. They are limited to a-z , A-Z , 0-9 , . , - and _ . No spaces are permitted in filenames. Also, when creating list items, if your item contains any commas you must encapsulate the entire list item within quotation marks. Additional Information This section describes additional information that may be useful when creating a record. This includes how to use a record preset, how to duplicate records and how to create a record preset. Using a Record Preset Record presets use a previously created record to fill in a new record with the same values. This is useful when you have records that will use the same data for multiple fields. If you would like to use a record preset, click the circle for the Use a Record Preset option in a New Record page. This will provide a new dropdown option to select a record preset. The new record will then have its fields filled in with the same values as the selected record present. You are still able to edit the newly filled in fields after the preset is selected. Duplicate Record You may also select the Duplicate Record option from the New Record page. If you chose to duplicate your record, an identical copy of the record will be created. You can set the number of duplicates after selecting the option. You may also duplicate a record after it has been created. Simply search or browse for the record you would like to duplicate and select the Duplicate Records option at the bottom of the block for that record. This will bring you to the Duplicate Record page where you can select the duplication amount and click the Duplicate Record button at the bottom of the page. If you need assistance on how to edit your duplicate record, visit the Editing a Record documentation. Creating a New Record Preset If you wish to use a newly filled out record as a preset option for future records, select the Create New Record Preset from this Record option. You will be asked to name your new record preset. This newly named preset option will be available for all records you create in the future. And it will use the same information you enter into this record to fill in the fields using this record preset.","title":"Creating a Record"},{"location":"records/creating_a_record/#creating-a-record","text":"A record is the metadata element. It is generated by entering information into fields within a form . Forms and fields provide the framework in which to enter data, with the resulting records becoming the substance of your repository. To begin creating a record, you must first choose the project that you want to enter records into. Then select the form you would like to enter a record into by clicking on that form's name. Then follow these steps to create a record: To start creating a record, there are two options: One option is to click the Create New Record button on the form home page or you can click the form name in the menu bar to open the dropdown and choose the Create New Record option. alternatively, you may also select Create New Record from the dropdown menu made available by clicking on the form name in the menu bar. This will open a New Record page. Now you can fill out the various fields you have created within the form with your data. All the fields with a green dot next to it are a required field and will have to be filled out. This can only be changed by editing the required field If your form has multiple pages, you can toggle between them using the buttons Previous Page and Next Page at the bottom of the screen. When you are finished entering the information for the record, click Create New Record . Note: When you are uploading any files, there are some restrictions on filenames. They are limited to a-z , A-Z , 0-9 , . , - and _ . No spaces are permitted in filenames. Also, when creating list items, if your item contains any commas you must encapsulate the entire list item within quotation marks.","title":"Creating a Record"},{"location":"records/creating_a_record/#additional-information","text":"This section describes additional information that may be useful when creating a record. This includes how to use a record preset, how to duplicate records and how to create a record preset.","title":"Additional Information"},{"location":"records/creating_a_record/#using-a-record-preset","text":"Record presets use a previously created record to fill in a new record with the same values. This is useful when you have records that will use the same data for multiple fields. If you would like to use a record preset, click the circle for the Use a Record Preset option in a New Record page. This will provide a new dropdown option to select a record preset. The new record will then have its fields filled in with the same values as the selected record present. You are still able to edit the newly filled in fields after the preset is selected.","title":"Using a Record Preset"},{"location":"records/creating_a_record/#duplicate-record","text":"You may also select the Duplicate Record option from the New Record page. If you chose to duplicate your record, an identical copy of the record will be created. You can set the number of duplicates after selecting the option. You may also duplicate a record after it has been created. Simply search or browse for the record you would like to duplicate and select the Duplicate Records option at the bottom of the block for that record. This will bring you to the Duplicate Record page where you can select the duplication amount and click the Duplicate Record button at the bottom of the page. If you need assistance on how to edit your duplicate record, visit the Editing a Record documentation.","title":"Duplicate Record"},{"location":"records/creating_a_record/#creating-a-new-record-preset","text":"If you wish to use a newly filled out record as a preset option for future records, select the Create New Record Preset from this Record option. You will be asked to name your new record preset. This newly named preset option will be available for all records you create in the future. And it will use the same information you enter into this record to fill in the fields using this record preset.","title":"Creating a New Record Preset"},{"location":"records/editing_a_record/","text":"Editing a Record The data for any record can be updated after the record has been created . This means that you can fill in empty values from an initially created record, update your record if new information comes to light, or fix mistakes in data entry. Any revisions that you make to a record, however, will be logged by Kora for you to view later . This will allow you to see a history of record changes, meaning that any data you enter into Kora will not be lost. In order to edit a record, follow these steps: Navigate to the Record Search and Browse page from the home of the form that you want to edit records in. Search and browse for the record or records that you want to edit from this page. Open up the record that you want to edit by clicking the down arrow button. At the bottom of your opened record will be the Edit button. Press this to edit your record. You can then edit the value for any field that you want. Just enter the same as when creating any record . Click the floating Update Record button at the bottom of the Edit Record page to make your changes permanent. Any changes that have been made to the field options (such as making it a required field) will have to be abided by when updating the record.","title":"Editing a Record"},{"location":"records/editing_a_record/#editing-a-record","text":"The data for any record can be updated after the record has been created . This means that you can fill in empty values from an initially created record, update your record if new information comes to light, or fix mistakes in data entry. Any revisions that you make to a record, however, will be logged by Kora for you to view later . This will allow you to see a history of record changes, meaning that any data you enter into Kora will not be lost. In order to edit a record, follow these steps: Navigate to the Record Search and Browse page from the home of the form that you want to edit records in. Search and browse for the record or records that you want to edit from this page. Open up the record that you want to edit by clicking the down arrow button. At the bottom of your opened record will be the Edit button. Press this to edit your record. You can then edit the value for any field that you want. Just enter the same as when creating any record . Click the floating Update Record button at the bottom of the Edit Record page to make your changes permanent. Any changes that have been made to the field options (such as making it a required field) will have to be abided by when updating the record.","title":"Editing a Record"},{"location":"records/exporting_a_record/","text":"Exporting a Record Any data that you enter into Kora can be exported to your local computer. Any records will be downloaded as a file. You are able to download the files in three different formats: a zip file, a JSON file, and an XML file. Exporting All Records for a Form If you want to export all the available records from a form onto your computer, follow these directions: First you will have to navigate to the form you are attempting to export records from. From the Form Home page or any page within the Form Home , you have a couple of options to open up the menu. Click on either the form-name button or the menu button. Once you have opened up the menu options, select Export All Records . A window will pop up prompting you to choose how you would like to download your records. Select the file type you wish to download by clicking on it. See the last section for a description of the zip, JSON and XML file types available for download. Once you have clicked on the file type you want to use to export your data, Kora will automatically download your records to your computer in that file type. Follow the unique instructions of your browser and computer to save the records onto your computer. Exporting Select Records from a Forms If you only want to select the particular records to be exported to your computer, then follow these directions: First you will have to navigate to the form you are attempting to export records from. Then you will have to either click the Form Records & Search() or select this option from one of the menu options. Once you have navigated to the Form Records & Search page, search or browse for the particular records that you want to export. Select the records you want to export by checking the circle next to the record KID. When you are finished selecting your records, press the export() button on the bar that appeared at the bottom of the page. A window will pop up prompting you to choose how you would like to download your records. Select the file type you wish to download by clicking on it. See the next section for a description of the zip, JSON and XML file types available for download. Once you have clicked on the file type you want to use to export your data, Kora will automatically download your records to your computer in that file type. Follow the unique instructions of your browser and computer to save the records onto your computer. File Types Available for Export There are three types of file types that you are able to export your Kora records as: a zip file, a JSON file, and an XML file. What follows are descriptions of these file types and links to further reading. The Export Record Files option downloads Kora records onto your computer as a zip file. It's important to note that this will only download files entered for a record such as images, documents, audio files, etc. Any records without digital files attached to it will not appear in the folder. The Export JSON file type downloads Kora records onto your computer as a JSON file. A JSON refers to the JavaScript Object Notation (JSON) format, which is a standard data interchange format. JSON files are text-based, machine-readable, and human-readable files that can be edited using a text editor. For more information on JSON file format, check out the JSON Wikipedia article . The Export XML file type downloads Kora records onto your computer as an XML file. XML stands for Extensible Markup Language (XML). This is a markup language which generates human-readable and machine readable text files. XML files emphasize simplicity and the description of data. For more information on XML files check out the XML Wikipedia article .","title":"Exporting a Record"},{"location":"records/exporting_a_record/#exporting-a-record","text":"Any data that you enter into Kora can be exported to your local computer. Any records will be downloaded as a file. You are able to download the files in three different formats: a zip file, a JSON file, and an XML file.","title":"Exporting a Record"},{"location":"records/exporting_a_record/#exporting-all-records-for-a-form","text":"If you want to export all the available records from a form onto your computer, follow these directions: First you will have to navigate to the form you are attempting to export records from. From the Form Home page or any page within the Form Home , you have a couple of options to open up the menu. Click on either the form-name button or the menu button. Once you have opened up the menu options, select Export All Records . A window will pop up prompting you to choose how you would like to download your records. Select the file type you wish to download by clicking on it. See the last section for a description of the zip, JSON and XML file types available for download. Once you have clicked on the file type you want to use to export your data, Kora will automatically download your records to your computer in that file type. Follow the unique instructions of your browser and computer to save the records onto your computer.","title":"Exporting All Records for a Form"},{"location":"records/exporting_a_record/#exporting-select-records-from-a-forms","text":"If you only want to select the particular records to be exported to your computer, then follow these directions: First you will have to navigate to the form you are attempting to export records from. Then you will have to either click the Form Records & Search() or select this option from one of the menu options. Once you have navigated to the Form Records & Search page, search or browse for the particular records that you want to export. Select the records you want to export by checking the circle next to the record KID. When you are finished selecting your records, press the export() button on the bar that appeared at the bottom of the page. A window will pop up prompting you to choose how you would like to download your records. Select the file type you wish to download by clicking on it. See the next section for a description of the zip, JSON and XML file types available for download. Once you have clicked on the file type you want to use to export your data, Kora will automatically download your records to your computer in that file type. Follow the unique instructions of your browser and computer to save the records onto your computer.","title":"Exporting Select Records from a Forms"},{"location":"records/exporting_a_record/#file-types-available-for-export","text":"There are three types of file types that you are able to export your Kora records as: a zip file, a JSON file, and an XML file. What follows are descriptions of these file types and links to further reading. The Export Record Files option downloads Kora records onto your computer as a zip file. It's important to note that this will only download files entered for a record such as images, documents, audio files, etc. Any records without digital files attached to it will not appear in the folder. The Export JSON file type downloads Kora records onto your computer as a JSON file. A JSON refers to the JavaScript Object Notation (JSON) format, which is a standard data interchange format. JSON files are text-based, machine-readable, and human-readable files that can be edited using a text editor. For more information on JSON file format, check out the JSON Wikipedia article . The Export XML file type downloads Kora records onto your computer as an XML file. XML stands for Extensible Markup Language (XML). This is a markup language which generates human-readable and machine readable text files. XML files emphasize simplicity and the description of data. For more information on XML files check out the XML Wikipedia article .","title":"File Types Available for Export"},{"location":"records/importing_a_record/","text":"Importing a Record A record is the metadata element that your data is entered into. You can import a record(s) into a single form via a CSV, JSON, or XML file. If you wish to import records into multiple forms , take a look at the documentation on importing records into multiple forms . Follow the steps below to import a record(s) into a single form: First, open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Choose the form you would like to import a record(s) into by clicking on the form name . This will open the form page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_1_annotated.png\" title=\"Select the Project Form\"> Click on the form name in the menu bar at the top of the page, this will open a dropdown menu. Choose the Import Records option in the dropdown menu. This will open the Import Records page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_2_annotated.png\" title=\"Select Import Records\"> On the Import Records page, under the Upload Record Files tab, you can either drag and drop or browse your computer for the XML/JSON/CSV file you would like to import in first (top) box. If you have files in a zipped format that correlate to the XML/JSON/CSV file first (top) box, you can either drag and drop or select the zipped files in the second (bottom) box. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_3_annotated.png\" title=\"Select Import Records\"> After you finish selecting your record file, click the Upload Record Import File button at the bottom of the page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_4_annotated.png\" title=\"Upload Record Import\"> This will bring you to the Field Matching tab on the Import Records page. This page allows you to associate the field names between the records you are uploading to the form you are importing the records to. Select fields if applicable on the right column of the page. You will want to associate or match fields based on type. If you need information about field types, visit the Understanding Field Types guide. * **Note**: If a field is *required* in the form you are importing records into, you must associate an incoming field to one that is being imported. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_5_annotated.png\" title=\"Field Matching\"> Click the Upload Records button at the bottom of the screen. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_6_annotated.png\" title=\"Upload Records\"> A loading page will open informing you that your import has begun. Depending on the number of records you are importing, it may take several minutes to complete. Do not close the page or browser until completion. When the import is complete, you will be automatically brought to the Import Records Complete page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_7_annotated.png\" title=\"Loading Page\"> On this page you can view how many records were successfully imported and have the option to view the imported records by clicking on the View Imported Records button. <img style=\"display:block;margin:auto;max-width:80%\" src=\"../records-img/importing_a_record_8_annotated.png\" title=\"Field Matching\"> Failed Record Import There are several reasons a record import will fail. If a required field was not assoicated with an uploaded field (matched), you will be informed how many records out of the total were successfuly imported on the Import Records Complete page (example: 0 of 1 Records Successfully Imported). Your record(s) will not import if you associate different field types. Failed Records Report You can download the failed records and their report to identify the problem with the import. The Failed Records Report will state which fields are required. If you did not match your field types correctly, the Failed Records Report may give you an error: {\"18\":\"Unable to determine error. This is usually caused by a structure issue in your CSV\\/XML\\/JSON, or an unexpected bug in kora.\"}. If this occurs, we recommend trying to import your record(s) again after checking how the fields should be matched. You can then try importing the record(s) again or view the successfully imported records using the buttons on the page. File Type Definitions: CSV is a simple file format that is used to store tabular data, such as a database or spreadsheet. CSV stands for \"comma-separated values.\" Files in CSV format can be imported and exported from programs that store data in tables such as Microsoft Excel, Apple Numbers, or Google Sheets. JSON is a file type that stores data in JavaScript Object Notation format, a standard data interchange format. It is commonly used to transmit data between a web application and a server. It serves as an alternative to XML, as it easy for humans to read and write, as well as machine-readable. XML is a file extension for an Extensible Markup Language (XML) file format. It stores data in a structure that is readable by machines and humans, as it stores data in plain text format. XML is similar to HTML.","title":"Importing a Record"},{"location":"records/importing_a_record/#importing-a-record","text":"A record is the metadata element that your data is entered into. You can import a record(s) into a single form via a CSV, JSON, or XML file. If you wish to import records into multiple forms , take a look at the documentation on importing records into multiple forms . Follow the steps below to import a record(s) into a single form: First, open your current project (You can find the list of your projects by clicking on the Projects button on the top menu). Choose the form you would like to import a record(s) into by clicking on the form name . This will open the form page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_1_annotated.png\" title=\"Select the Project Form\"> Click on the form name in the menu bar at the top of the page, this will open a dropdown menu. Choose the Import Records option in the dropdown menu. This will open the Import Records page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_2_annotated.png\" title=\"Select Import Records\"> On the Import Records page, under the Upload Record Files tab, you can either drag and drop or browse your computer for the XML/JSON/CSV file you would like to import in first (top) box. If you have files in a zipped format that correlate to the XML/JSON/CSV file first (top) box, you can either drag and drop or select the zipped files in the second (bottom) box. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_3_annotated.png\" title=\"Select Import Records\"> After you finish selecting your record file, click the Upload Record Import File button at the bottom of the page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_4_annotated.png\" title=\"Upload Record Import\"> This will bring you to the Field Matching tab on the Import Records page. This page allows you to associate the field names between the records you are uploading to the form you are importing the records to. Select fields if applicable on the right column of the page. You will want to associate or match fields based on type. If you need information about field types, visit the Understanding Field Types guide. * **Note**: If a field is *required* in the form you are importing records into, you must associate an incoming field to one that is being imported. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_5_annotated.png\" title=\"Field Matching\"> Click the Upload Records button at the bottom of the screen. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_6_annotated.png\" title=\"Upload Records\"> A loading page will open informing you that your import has begun. Depending on the number of records you are importing, it may take several minutes to complete. Do not close the page or browser until completion. When the import is complete, you will be automatically brought to the Import Records Complete page. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../records-img/importing_a_record_7_annotated.png\" title=\"Loading Page\"> On this page you can view how many records were successfully imported and have the option to view the imported records by clicking on the View Imported Records button. <img style=\"display:block;margin:auto;max-width:80%\" src=\"../records-img/importing_a_record_8_annotated.png\" title=\"Field Matching\">","title":"Importing a Record"},{"location":"records/importing_a_record/#failed-record-import","text":"There are several reasons a record import will fail. If a required field was not assoicated with an uploaded field (matched), you will be informed how many records out of the total were successfuly imported on the Import Records Complete page (example: 0 of 1 Records Successfully Imported). Your record(s) will not import if you associate different field types.","title":"Failed Record Import"},{"location":"records/importing_a_record/#failed-records-report","text":"You can download the failed records and their report to identify the problem with the import. The Failed Records Report will state which fields are required. If you did not match your field types correctly, the Failed Records Report may give you an error: {\"18\":\"Unable to determine error. This is usually caused by a structure issue in your CSV\\/XML\\/JSON, or an unexpected bug in kora.\"}. If this occurs, we recommend trying to import your record(s) again after checking how the fields should be matched. You can then try importing the record(s) again or view the successfully imported records using the buttons on the page.","title":"Failed Records Report"},{"location":"records/importing_a_record/#file-type-definitions","text":"CSV is a simple file format that is used to store tabular data, such as a database or spreadsheet. CSV stands for \"comma-separated values.\" Files in CSV format can be imported and exported from programs that store data in tables such as Microsoft Excel, Apple Numbers, or Google Sheets. JSON is a file type that stores data in JavaScript Object Notation format, a standard data interchange format. It is commonly used to transmit data between a web application and a server. It serves as an alternative to XML, as it easy for humans to read and write, as well as machine-readable. XML is a file extension for an Extensible Markup Language (XML) file format. It stores data in a structure that is readable by machines and humans, as it stores data in plain text format. XML is similar to HTML.","title":"File Type Definitions:"},{"location":"records/importing_multi_form_records/","text":"Importing Multi Form Records If you have records that you want to import into multiple forms, Kora provides a way to import all of those records at once. Rather than performing multiple imports to submit records into different forms, you may perform one multiform record import. This will require formatting your records in a particular way in a slightly different process from importing records into a single form . These records must be formatted into csv, json or xml files. Examples of the correct file formats are provided in the File Formatting section below. Navigating to the Import Page Navigating to Import Multi Form Records page can take place from either the dashboard or from a project's homepage. Either of these options will bring you to the Import Multi Form Records page where you can import multiple record files to multiple forms. Navigating from the Dashboard From the dashboard, you are able to navigate to the Import Multi Form Records page from a project block by clicking on the Quick Action icon. Navigating from your Project Homepage Alternatively, you may select Import MF Record Setup from the project homepage using the Kora menu. Preparing the Data Before you begin importing multiple records into multiple forms, you will have to prepare your data in a way that Kora will be able to understand. In order to make this process easier take the following into consideration for your data: Each form should have its own file containg records . For example, Form 1 will get a file containing all records for Form 1, while Form 2 will import a file containing all records for Form 2. Every single field column and datatype within an imported file should conform to the Kora datatype standard . These fields and data types can be found in the file formats section below. The names of the field types in the example files below will be replaced with the names of your field. For example, if you have a text field named \"field 1\", then \"text field\":\"Your text value\" will be changed to \"field 1\":\"Your text value\". Make sure that your associator Fileds are labled correclty . See the next section for details. Multi-field field types have to be imported as XML or JSON (not CSV) . A multi-field field, such as a combo list field , contains other fields within it. There is no way to format this using CSV, and records containing such a field must be formatted using XML or JSON. All attached files should be compressed into a zip file . If your imported records contain images or other files, then those files must be compressed into a zip file. If the files are within folders in that zip file, then the directory path must be included with the file/sheet of records in order for the connection to be made. An example of a call to a file is provided: Associatiors Associators are a useful field type that allow you to create associations between records. Correctly formatting Associator field columns will allow you to create associations with other imported records and records currently in Kora. To make sure that all of your records are associated correclty, consider the following: * The \"Associator\" field column will contain the name of the associator field for this record. Providing Kora IDs or \"kidConnection\" identifiers will create associations with those records in this associator field. * The \"reverseAssociations\" field column will allow you to create associations in other records that point towards this record. Other record's associators will therefore point towards this record. You will need the name of the associator field as well as the KID of the records that you want to to point to that record. * The \"kidConnection\" field column allows you to create a temporary identifier for an imported record. This is necessary since an imported record does not yet have a KID. This will allow associators to point towards an imported record by putting its \"kidConnection\" identifier in either the \"Associator\" or \"reverseAssociations\" field column. File Formats The files in this section provide the data structure that your imported records will have to conform to. Data not structured as in the files below will be unreadable to Kora. There are three formats that you are able to upload files: 1) .csv, 2) .json, and 3) .xml. Below you can view and download example files for each file type. CSV Format This file format uses Comma Separated Values to describe the fields you are attempting to import. CSVs are commonlly created in Microsoft Excel. You can go to the bottom of this section to download an example CSV file or use the following steps to start a new CSV file: In Excel go to the File menu and click Save As Identify a filename and location Select File Format: CSV UTF-8. Click Save You will see the following prompt: \u201cThis workbook cannot be saved in the selected file format because it contains multiple sheets. To save the entire workbook, click Cancel, and then save the workbook in another format. To keep the selected format and save only the active sheet\". Click OK . Then you'll see the following prompt: \"Some features in your workbook might be lost if you save it as CSV UTF-8 (Comma delimited) (.csv). Some features in your workbook might be lost if you save it as CSV UTF-8 (Comma delimited) (.csv)\u201d. Click Yes . Close the spread sheet.This file can now be used to create additional csv files and to add your records in. Note : Do not edit csv files in Microsoft Excel and do a regular save. This could potentially add extra Microsoft stuff into your file. Instead it is recommended to edit csv files only in a text editor such as Atom or Notepad++. Note : It is also reccomended that you open every single csv file in a text editor and do a general check. Especially check for: blank rows at the end of each document and the continued presence of special characters/diacritics ( make sure the file is UTF-8 encoded ). An example of the CSV format is embedded below. Follow the import_example_csv.csv link to github.com in order to download this file. JSON Format The JSON file format uses JavaScript Object Notation to describe the fields for the records you are attempting to import. You will need a text editor to create and edit JSON files. An example of the JSON format is embedded below. Follow the import_example_json.json link to github.com in order to download this file. XML Format The XML file format stands for Extensible Markup Language . It is a markup language designed to encode data that is both machine and human readable. You will need a text editor to create and edit XML files. An example of the XML format is embedded below. Follow the import_example_xml.xml link to github.com in order to download this file. Importing Once you have your records formatted correctly, navigate to the Import Multi Form Records page and begin importing your records into Kora. This will require 3 steps: uploading, matching fields and importing. Uploading records Upload correctly formatted record files by clicking the Add New File button. After clicking the button, you'll be able to select the files you want to upload from your computer. Once you've selected your files, select the forms that you want the records uploaded to by clicking on the Select Some Options bar. A dropdown menu will appear with the forms from your project. You will have to select your forms in the same order that your selected record files appear. If you have images or other types of files that you want put into records, they must be compressed into a zip file. Drag and drop that zipped files into the second box, or select the zipped file by clicking Or Select the Zipped File Here in the box. Files in the zip file can then be refered to in the imported record files. Once you have everything ready, press the Upload Record Import Files Field Matching Once you have uploaded the records and files that you want to import, you will be brought to the Field Matching tab on the Import Records page. This page allows you to associate the field names between the records you are uploading to the form you are importing the records to. Many of the fields will automatically map onto the correctly correlated field, but this is your opportunity to make sure everything is mapping correctly. Select fields if applicable on the right column of the page. * **Note**: If a field is *required* in the form you are importing records into, you must associate an incoming field to one that is being imported. Once everything looks correct, click the Upload Records button at the bottom of the screen. Import your records A loading page will open informing you that your import has begun. Depending on the number of records you are importing, it may take several minutes to complete. Do not close the page or browser until completion. When the import is complete, you will be automatically brought to the Import Records Complete page. Failed Record Import There are several reasons a record import will fail. If any of your records fail to import then a page will appear giving you a summary of the imported records. This page will tell you how many records were successfuly imported and give you a few options. Download Failed Records (JSON) : You may download the records that failed to import. This will download as a JSON. Downloading this along with the failed record repots will help to identify the problem(s) with the import. Download Failed Records Report : This will download a report with error messages telling you why particular records failed to import. The Failed Records Report will state which fields are required. If you did not match your field types correctly, the Failed Records Report may give you an error: {\"18\":\"Unable to determine error. This is usually caused by a structure issue in your CSV\\/XML\\/JSON, or an unexpected bug in kora.\"}. If this occurs, we recommend trying to import your record(s) again after checking how the fields should be matched. Try Importing Again : This allows you to try importing records again. Project Home : You may also give up on importing your records and go back to your project home.","title":"Importing Multiform Records"},{"location":"records/importing_multi_form_records/#importing-multi-form-records","text":"If you have records that you want to import into multiple forms, Kora provides a way to import all of those records at once. Rather than performing multiple imports to submit records into different forms, you may perform one multiform record import. This will require formatting your records in a particular way in a slightly different process from importing records into a single form . These records must be formatted into csv, json or xml files. Examples of the correct file formats are provided in the File Formatting section below.","title":"Importing Multi Form Records"},{"location":"records/importing_multi_form_records/#navigating-to-the-import-page","text":"Navigating to Import Multi Form Records page can take place from either the dashboard or from a project's homepage. Either of these options will bring you to the Import Multi Form Records page where you can import multiple record files to multiple forms.","title":"Navigating to the Import Page"},{"location":"records/importing_multi_form_records/#navigating-from-the-dashboard","text":"From the dashboard, you are able to navigate to the Import Multi Form Records page from a project block by clicking on the Quick Action icon.","title":"Navigating from the Dashboard"},{"location":"records/importing_multi_form_records/#navigating-from-your-project-homepage","text":"Alternatively, you may select Import MF Record Setup from the project homepage using the Kora menu.","title":"Navigating from your Project Homepage"},{"location":"records/importing_multi_form_records/#preparing-the-data","text":"Before you begin importing multiple records into multiple forms, you will have to prepare your data in a way that Kora will be able to understand. In order to make this process easier take the following into consideration for your data: Each form should have its own file containg records . For example, Form 1 will get a file containing all records for Form 1, while Form 2 will import a file containing all records for Form 2. Every single field column and datatype within an imported file should conform to the Kora datatype standard . These fields and data types can be found in the file formats section below. The names of the field types in the example files below will be replaced with the names of your field. For example, if you have a text field named \"field 1\", then \"text field\":\"Your text value\" will be changed to \"field 1\":\"Your text value\". Make sure that your associator Fileds are labled correclty . See the next section for details. Multi-field field types have to be imported as XML or JSON (not CSV) . A multi-field field, such as a combo list field , contains other fields within it. There is no way to format this using CSV, and records containing such a field must be formatted using XML or JSON. All attached files should be compressed into a zip file . If your imported records contain images or other files, then those files must be compressed into a zip file. If the files are within folders in that zip file, then the directory path must be included with the file/sheet of records in order for the connection to be made. An example of a call to a file is provided:","title":"Preparing the Data"},{"location":"records/importing_multi_form_records/#associatiors","text":"Associators are a useful field type that allow you to create associations between records. Correctly formatting Associator field columns will allow you to create associations with other imported records and records currently in Kora. To make sure that all of your records are associated correclty, consider the following: * The \"Associator\" field column will contain the name of the associator field for this record. Providing Kora IDs or \"kidConnection\" identifiers will create associations with those records in this associator field. * The \"reverseAssociations\" field column will allow you to create associations in other records that point towards this record. Other record's associators will therefore point towards this record. You will need the name of the associator field as well as the KID of the records that you want to to point to that record. * The \"kidConnection\" field column allows you to create a temporary identifier for an imported record. This is necessary since an imported record does not yet have a KID. This will allow associators to point towards an imported record by putting its \"kidConnection\" identifier in either the \"Associator\" or \"reverseAssociations\" field column.","title":"Associatiors"},{"location":"records/importing_multi_form_records/#file-formats","text":"The files in this section provide the data structure that your imported records will have to conform to. Data not structured as in the files below will be unreadable to Kora. There are three formats that you are able to upload files: 1) .csv, 2) .json, and 3) .xml. Below you can view and download example files for each file type.","title":"File Formats"},{"location":"records/importing_multi_form_records/#csv-format","text":"This file format uses Comma Separated Values to describe the fields you are attempting to import. CSVs are commonlly created in Microsoft Excel. You can go to the bottom of this section to download an example CSV file or use the following steps to start a new CSV file: In Excel go to the File menu and click Save As Identify a filename and location Select File Format: CSV UTF-8. Click Save You will see the following prompt: \u201cThis workbook cannot be saved in the selected file format because it contains multiple sheets. To save the entire workbook, click Cancel, and then save the workbook in another format. To keep the selected format and save only the active sheet\". Click OK . Then you'll see the following prompt: \"Some features in your workbook might be lost if you save it as CSV UTF-8 (Comma delimited) (.csv). Some features in your workbook might be lost if you save it as CSV UTF-8 (Comma delimited) (.csv)\u201d. Click Yes . Close the spread sheet.This file can now be used to create additional csv files and to add your records in. Note : Do not edit csv files in Microsoft Excel and do a regular save. This could potentially add extra Microsoft stuff into your file. Instead it is recommended to edit csv files only in a text editor such as Atom or Notepad++. Note : It is also reccomended that you open every single csv file in a text editor and do a general check. Especially check for: blank rows at the end of each document and the continued presence of special characters/diacritics ( make sure the file is UTF-8 encoded ). An example of the CSV format is embedded below. Follow the import_example_csv.csv link to github.com in order to download this file.","title":"CSV Format"},{"location":"records/importing_multi_form_records/#json-format","text":"The JSON file format uses JavaScript Object Notation to describe the fields for the records you are attempting to import. You will need a text editor to create and edit JSON files. An example of the JSON format is embedded below. Follow the import_example_json.json link to github.com in order to download this file.","title":"JSON Format"},{"location":"records/importing_multi_form_records/#xml-format","text":"The XML file format stands for Extensible Markup Language . It is a markup language designed to encode data that is both machine and human readable. You will need a text editor to create and edit XML files. An example of the XML format is embedded below. Follow the import_example_xml.xml link to github.com in order to download this file.","title":"XML Format"},{"location":"records/importing_multi_form_records/#importing","text":"Once you have your records formatted correctly, navigate to the Import Multi Form Records page and begin importing your records into Kora. This will require 3 steps: uploading, matching fields and importing.","title":"Importing"},{"location":"records/importing_multi_form_records/#uploading-records","text":"Upload correctly formatted record files by clicking the Add New File button. After clicking the button, you'll be able to select the files you want to upload from your computer. Once you've selected your files, select the forms that you want the records uploaded to by clicking on the Select Some Options bar. A dropdown menu will appear with the forms from your project. You will have to select your forms in the same order that your selected record files appear. If you have images or other types of files that you want put into records, they must be compressed into a zip file. Drag and drop that zipped files into the second box, or select the zipped file by clicking Or Select the Zipped File Here in the box. Files in the zip file can then be refered to in the imported record files. Once you have everything ready, press the Upload Record Import Files","title":"Uploading records"},{"location":"records/importing_multi_form_records/#field-matching","text":"Once you have uploaded the records and files that you want to import, you will be brought to the Field Matching tab on the Import Records page. This page allows you to associate the field names between the records you are uploading to the form you are importing the records to. Many of the fields will automatically map onto the correctly correlated field, but this is your opportunity to make sure everything is mapping correctly. Select fields if applicable on the right column of the page. * **Note**: If a field is *required* in the form you are importing records into, you must associate an incoming field to one that is being imported. Once everything looks correct, click the Upload Records button at the bottom of the screen.","title":"Field Matching"},{"location":"records/importing_multi_form_records/#import-your-records","text":"A loading page will open informing you that your import has begun. Depending on the number of records you are importing, it may take several minutes to complete. Do not close the page or browser until completion. When the import is complete, you will be automatically brought to the Import Records Complete page.","title":"Import your records"},{"location":"records/importing_multi_form_records/#failed-record-import","text":"There are several reasons a record import will fail. If any of your records fail to import then a page will appear giving you a summary of the imported records. This page will tell you how many records were successfuly imported and give you a few options. Download Failed Records (JSON) : You may download the records that failed to import. This will download as a JSON. Downloading this along with the failed record repots will help to identify the problem(s) with the import. Download Failed Records Report : This will download a report with error messages telling you why particular records failed to import. The Failed Records Report will state which fields are required. If you did not match your field types correctly, the Failed Records Report may give you an error: {\"18\":\"Unable to determine error. This is usually caused by a structure issue in your CSV\\/XML\\/JSON, or an unexpected bug in kora.\"}. If this occurs, we recommend trying to import your record(s) again after checking how the fields should be matched. Try Importing Again : This allows you to try importing records again. Project Home : You may also give up on importing your records and go back to your project home.","title":"Failed Record Import"},{"location":"records/searching_and_browsing_records/","text":"Searching and Browsing Records The records in your digital repository are easily discoverable using Kora through several techniques. How you search for a record will depend on how narrow you want your search parameters to be. You can cast a wide net and search for a record across an entire Kora installation, or you can look in a specific project. There were also be many cases where you want to look at all of the records from a single form. This documentation will walk you through the steps of conducting each type of these searches. Searching Across a Kora Installation At the navigation bar at the top of the page, is a magnifying glass icon. No matter what page you are on, this navigation bar and icon should be available. clicking on it will allow you to search for any records within the Kora Installation that you have access to. Follow these steps to search for a form using this method: Click on the magnifying glass icon in the top right corner within the navigation bar. A search bar will appear which will allow you to enter search terms associated with the record you are searching for. If you are able to enter the KID of your record, the option to Go to Record: will be made available under the search bar. Simply click on the record number to go to that record. The record number must be entered exactly to bring up this option. However, you may not know the exact KID of your record, in that case, you will have to enter keywords and data into the search bar that might be associated with that record and click the right-facing arrow in the search bar to perform a proper search. This search will examine records, forms, fields and projects for any results which may match your search. Kora will then display these results on the Search Kora page. Any records matching your search will be found in the Records() tab for you to browse. You can conduct another search using the Search Via Keyword(s) or KID box near the upper part of the page. Your new search can be filtered by selecting \u201cOr,\u201d \u201cAnd,\u201d or \u201cKID\u201d. The record search will automatically start off by searching through all projects, but it's possible to search through particular project by selecting them from the Search and Select Projects(s) to Filter Results box. Searching for a Record within a Project You can greatly narrow down the number of records you search through if you know what project a record may be in. You can select a project or projects to search through in the Search Kora page as mentioned in step 9 above. There is a way to search for specific records in a project from the project home page, however. Follow these steps: Navigate to the project home that you want to search through and open either of the menus shown below in the navigation bar. Select Project Records Search from the menu. This will bring you to the Project Records Search page. You may search for a particular record using the Search Via Keyword(s) or KID search bar. You may also filter your keywords by selecting \u201cOr,\u201d \u201cAnd,\u201d or \u201cKID\u201d. The record search will automatically start off by searching through all forms, but it's possible to search through particular forms by selecting them from the Search and Select Form(s) to Filter Results box. Searching and Browsing Records in a Form A form is where records are made. As such, all records for a particular form can be browsed from that form. It is also possible to navigate to a form and search for a particular record in that form. Navigate to the form home page . From here you may start searching for records by either pressing the Form Record & Search() button or one of the menu options. This will bring you to the Form Records and Search page where you may browse records within the form or perform a search using the Search Via Keyword(s) or KID box at the top. Select Jump to Form + and scroll through the possible forms. After locating your form, click on the name of your form to jump to that form. Keywords can be filtered by selecting \u201cOr,\u201d \u201cAnd,\u201d or \u201cKID\u201d. Another option for searching through form records is to perform an advanced search. Form Records Advanced Search Advanced searches can be conducted on form records to utilize specialized search tools that Kora offers. The advanced search option can be accessed from the Form Records and Search page as outlined in step 6 in the previous section, but it can also be accessed from the navigation bar. The options available for an advanced search will depend upon the fields that you have made advanced searchable while creating a field. You can edit whether or not a field is advanced searchable There are some standard options, however: An field that was made advanced searchable will display a space to enter a values on the advanced search page. Any records which match the values entered here in the corresponding field will match your search. Alternative Field Name - searches the alternative names of fields for your keywords. Negative - Can be checked in order to make records that do not fit your search be the results that show up instead. empty - returns results in which the fields for your keyword are empty.","title":"Searching and Browsing Records"},{"location":"records/searching_and_browsing_records/#searching-and-browsing-records","text":"The records in your digital repository are easily discoverable using Kora through several techniques. How you search for a record will depend on how narrow you want your search parameters to be. You can cast a wide net and search for a record across an entire Kora installation, or you can look in a specific project. There were also be many cases where you want to look at all of the records from a single form. This documentation will walk you through the steps of conducting each type of these searches.","title":"Searching and Browsing Records"},{"location":"records/searching_and_browsing_records/#searching-across-a-kora-installation","text":"At the navigation bar at the top of the page, is a magnifying glass icon. No matter what page you are on, this navigation bar and icon should be available. clicking on it will allow you to search for any records within the Kora Installation that you have access to. Follow these steps to search for a form using this method: Click on the magnifying glass icon in the top right corner within the navigation bar. A search bar will appear which will allow you to enter search terms associated with the record you are searching for. If you are able to enter the KID of your record, the option to Go to Record: will be made available under the search bar. Simply click on the record number to go to that record. The record number must be entered exactly to bring up this option. However, you may not know the exact KID of your record, in that case, you will have to enter keywords and data into the search bar that might be associated with that record and click the right-facing arrow in the search bar to perform a proper search. This search will examine records, forms, fields and projects for any results which may match your search. Kora will then display these results on the Search Kora page. Any records matching your search will be found in the Records() tab for you to browse. You can conduct another search using the Search Via Keyword(s) or KID box near the upper part of the page. Your new search can be filtered by selecting \u201cOr,\u201d \u201cAnd,\u201d or \u201cKID\u201d. The record search will automatically start off by searching through all projects, but it's possible to search through particular project by selecting them from the Search and Select Projects(s) to Filter Results box.","title":"Searching Across a Kora Installation"},{"location":"records/searching_and_browsing_records/#searching-for-a-record-within-a-project","text":"You can greatly narrow down the number of records you search through if you know what project a record may be in. You can select a project or projects to search through in the Search Kora page as mentioned in step 9 above. There is a way to search for specific records in a project from the project home page, however. Follow these steps: Navigate to the project home that you want to search through and open either of the menus shown below in the navigation bar. Select Project Records Search from the menu. This will bring you to the Project Records Search page. You may search for a particular record using the Search Via Keyword(s) or KID search bar. You may also filter your keywords by selecting \u201cOr,\u201d \u201cAnd,\u201d or \u201cKID\u201d. The record search will automatically start off by searching through all forms, but it's possible to search through particular forms by selecting them from the Search and Select Form(s) to Filter Results box.","title":"Searching for a Record within a Project"},{"location":"records/searching_and_browsing_records/#searching-and-browsing-records-in-a-form","text":"A form is where records are made. As such, all records for a particular form can be browsed from that form. It is also possible to navigate to a form and search for a particular record in that form. Navigate to the form home page . From here you may start searching for records by either pressing the Form Record & Search() button or one of the menu options. This will bring you to the Form Records and Search page where you may browse records within the form or perform a search using the Search Via Keyword(s) or KID box at the top. Select Jump to Form + and scroll through the possible forms. After locating your form, click on the name of your form to jump to that form. Keywords can be filtered by selecting \u201cOr,\u201d \u201cAnd,\u201d or \u201cKID\u201d. Another option for searching through form records is to perform an advanced search.","title":"Searching and Browsing Records in a Form"},{"location":"records/searching_and_browsing_records/#form-records-advanced-search","text":"Advanced searches can be conducted on form records to utilize specialized search tools that Kora offers. The advanced search option can be accessed from the Form Records and Search page as outlined in step 6 in the previous section, but it can also be accessed from the navigation bar. The options available for an advanced search will depend upon the fields that you have made advanced searchable while creating a field. You can edit whether or not a field is advanced searchable There are some standard options, however: An field that was made advanced searchable will display a space to enter a values on the advanced search page. Any records which match the values entered here in the corresponding field will match your search. Alternative Field Name - searches the alternative names of fields for your keywords. Negative - Can be checked in order to make records that do not fit your search be the results that show up instead. empty - returns results in which the fields for your keyword are empty.","title":"Form Records Advanced Search"},{"location":"records/using_record_presets/","text":"Using Record Presets Digitization is a time-consuming process, especially when you are trying to enter as thorough and useful metadata as possible. Record presets become an especially useful feature in this regard, when many objects from a collection have the same pattern of metadata. Record presets allow you to create a collection of preselected entries for any number of fields in a form . You can then give these presets a name, and easily assign them to new records that they contain. Creating a Record Preset When you finish creating a record , you have the option to create a record preset which records all of the data that you entered into the fields for that record. Any future records using this preset will then initially fill their fields with the same values. This is useful when you believe future records will have similar metadata as the record preset. Follow these steps to create record presets: After entering data into a record , you can create a record preset by checking the Create New Record Preset From this Record option at the bottom of the new record page. Enter a name for the record preset under Record Preset Name . It should be characteristic for the type of data that it holds(i.e. \"Site A Ceramic\"). Then select Create New Record to create the record and the record preset. Using a Record Preset Once you have created a record preset, you can use it for any future records within the form it was created for. Using a record preset will initially fill a record with the values saved from creating the original record. However, these values can be edited after the record preset has been selected. Follow these steps to use a record preset: When you first start creating a record, you have the option to use any record presets you've created by checking the Use a Record Preset option towards the top of the page. A box will appear directly below. Press Select a Record Preset to open up a drop-down menu of any record presets that you've made. Choose your record preset by clicking on the option from the drop-down menu you want. The examples below show how record presets will work. In this case, the \"Example Record Preset\" fills a text field with a value that was entered into a previous record (\"This is how you create a Record Preset!\"). Any field type can be filled with a preset value using record presets. The \"Example Record Preset\" also filled a gallery field with an image.","title":"Using Record Presets"},{"location":"records/using_record_presets/#using-record-presets","text":"Digitization is a time-consuming process, especially when you are trying to enter as thorough and useful metadata as possible. Record presets become an especially useful feature in this regard, when many objects from a collection have the same pattern of metadata. Record presets allow you to create a collection of preselected entries for any number of fields in a form . You can then give these presets a name, and easily assign them to new records that they contain.","title":"Using Record Presets"},{"location":"records/using_record_presets/#creating-a-record-preset","text":"When you finish creating a record , you have the option to create a record preset which records all of the data that you entered into the fields for that record. Any future records using this preset will then initially fill their fields with the same values. This is useful when you believe future records will have similar metadata as the record preset. Follow these steps to create record presets: After entering data into a record , you can create a record preset by checking the Create New Record Preset From this Record option at the bottom of the new record page. Enter a name for the record preset under Record Preset Name . It should be characteristic for the type of data that it holds(i.e. \"Site A Ceramic\"). Then select Create New Record to create the record and the record preset.","title":"Creating a Record Preset"},{"location":"records/using_record_presets/#using-a-record-preset","text":"Once you have created a record preset, you can use it for any future records within the form it was created for. Using a record preset will initially fill a record with the values saved from creating the original record. However, these values can be edited after the record preset has been selected. Follow these steps to use a record preset: When you first start creating a record, you have the option to use any record presets you've created by checking the Use a Record Preset option towards the top of the page. A box will appear directly below. Press Select a Record Preset to open up a drop-down menu of any record presets that you've made. Choose your record preset by clicking on the option from the drop-down menu you want. The examples below show how record presets will work. In this case, the \"Example Record Preset\" fills a text field with a value that was entered into a previous record (\"This is how you create a Record Preset!\"). Any field type can be filled with a preset value using record presets. The \"Example Record Preset\" also filled a gallery field with an image.","title":"Using a Record Preset"},{"location":"records/viewing_and_managing_record_revisions/","text":"Viewing and Managing Record Revisons A record )** is the metadata element. A record is generated by entering information into fields within a form. It is possible to edit previously created records, as well as keep track of each record revision. You may want to view and manage these record revisions, which is possible in a few short steps. First go to the form in which the record you wish to view resides. Click the Form Records & Search button. This will bring you to a page where you can view all records within that form. You have two options on how to get to view and manage record revisions: a) Scroll and find the record you wish to review and click the View Revisions option at the bottom of the record box. b) Or you can click the name of the record. If you click the name of the record, it will bring you to the records page. At the top of this page, click the View Revisions option. Either option will bring you to the Record Revisions page for that specific record. From here, you are able to view the edits that have been made to the record over its lifetime. Data about the day and time these edits where made as well as the users who made them is automatically tracked. Record revisions will display edits made to the record in the Edits Made section. What the record looked liked before the edits will be displayed in the Before section, allowing you to see what was changed at each revision point. You can sort the revisions by date and user using the text boxes at the top of the page. Restore Record to Before (aka to a Previous Version) It is possible restore your record to a previous version. To do this, find the version you would like to return the record to, and click Restore Field(s) to Before . A popup will appear asking if you would like to restore fields to before. Click the green button at the bottom of the page. This will Rollback your record to the previous version selected and document this change in the Record Revisions page for that record.","title":"Viewing and Managing Record Revisions"},{"location":"records/viewing_and_managing_record_revisions/#viewing-and-managing-record-revisons","text":"A record )** is the metadata element. A record is generated by entering information into fields within a form. It is possible to edit previously created records, as well as keep track of each record revision. You may want to view and manage these record revisions, which is possible in a few short steps. First go to the form in which the record you wish to view resides. Click the Form Records & Search button. This will bring you to a page where you can view all records within that form. You have two options on how to get to view and manage record revisions: a) Scroll and find the record you wish to review and click the View Revisions option at the bottom of the record box. b) Or you can click the name of the record. If you click the name of the record, it will bring you to the records page. At the top of this page, click the View Revisions option. Either option will bring you to the Record Revisions page for that specific record. From here, you are able to view the edits that have been made to the record over its lifetime. Data about the day and time these edits where made as well as the users who made them is automatically tracked. Record revisions will display edits made to the record in the Edits Made section. What the record looked liked before the edits will be displayed in the Before section, allowing you to see what was changed at each revision point. You can sort the revisions by date and user using the text boxes at the top of the page.","title":"Viewing and Managing Record Revisons"},{"location":"records/viewing_and_managing_record_revisions/#restore-record-to-before-aka-to-a-previous-version","text":"It is possible restore your record to a previous version. To do this, find the version you would like to return the record to, and click Restore Field(s) to Before . A popup will appear asking if you would like to restore fields to before. Click the green button at the bottom of the page. This will Rollback your record to the previous version selected and document this change in the Record Revisions page for that record.","title":"Restore Record to Before (aka to a Previous Version)"},{"location":"user-accounts/edit_user_account/","text":"Edit User Account Your user account holds a number of preferences while working in kora in addition to the profile information you have provided it. Follow the steps below to edit your user preferences: When you are logged into Kora, you can access your user preferences from anywhere. Click on the person icon in the top menu located in the top right corner of the page. This will open a dropdown menu. Choose the Edit My Profile option. On your Profile page, you are able to modify your kora user account profile information in addition to several preferences . This includes the ability to: Edit your User Name Change your email address Edit your first and last name Upload a profile image Change your Organization Select the language used Update Your Password Check out the sections below to view more information about each of these sections. Check out the Editing User Preferences documentation to see information on kora preferences. When you have finished making changes to your kora user account profile, click the Update Profile button at the bottom of the page to save the changes. Edit Your User Name You can edit your username by typing in the white box below the User Name sub-heading. Change Email Address You can edit your email address by typing in the white box below the Email Address sub-heading. Edit First and Last Name You can edit your first and last name by typing in the white box below the First Name & Last Name sub-heading. Upload a Profile Image You can upload or change your profile photo under the Profile Image sub-heading. To do this, you can either drag and drop a photo from your computer or click the Drag and Drop or Select a Photo here option. After you select and image or drag & drop a photo from your computer, it will upload and show the preview of the image within the circle. You have the option to delete this photo by clicking on the 'X' next to the image file name. You can also select a different photo by clicking the Select a Different Photo? option Edit Your Organization You can edit your organization by typing in the white box below the Organization sub-heading. Select Language Used Currently, English is the only supported language. Future versions of Kora will support other languages. To change the language used on Kora, click the white bar below the Language sub-heading, then select your desired language. Update Password You can update your kora user password under the Update Password sub-heading. You must first enter your new password in the white box under Enter New Password section. Then confirm your new password by typing the new password again in the white box under Confirm New Password . Link GitLab Account When GitLab integration is enabled, users who did not create their account through the GitLab option may still link their GitLab and Kora accounts. To do so, simply click the \"Add GitLab Account\" button under \"Assign OAuth Account.\" This will redirect to the GitLab login screen. Log into that GitLab instance with your personal account and click \"Authorize\" to complete the process. Once linked, you will be able to log into your Kora account through the GitLab option.","title":"Editing Your User Account"},{"location":"user-accounts/edit_user_account/#edit-user-account","text":"Your user account holds a number of preferences while working in kora in addition to the profile information you have provided it. Follow the steps below to edit your user preferences: When you are logged into Kora, you can access your user preferences from anywhere. Click on the person icon in the top menu located in the top right corner of the page. This will open a dropdown menu. Choose the Edit My Profile option. On your Profile page, you are able to modify your kora user account profile information in addition to several preferences . This includes the ability to: Edit your User Name Change your email address Edit your first and last name Upload a profile image Change your Organization Select the language used Update Your Password Check out the sections below to view more information about each of these sections. Check out the Editing User Preferences documentation to see information on kora preferences. When you have finished making changes to your kora user account profile, click the Update Profile button at the bottom of the page to save the changes.","title":"Edit User Account"},{"location":"user-accounts/edit_user_account/#edit-your-user-name","text":"You can edit your username by typing in the white box below the User Name sub-heading.","title":"Edit Your User Name"},{"location":"user-accounts/edit_user_account/#change-email-address","text":"You can edit your email address by typing in the white box below the Email Address sub-heading.","title":"Change Email Address"},{"location":"user-accounts/edit_user_account/#edit-first-and-last-name","text":"You can edit your first and last name by typing in the white box below the First Name & Last Name sub-heading.","title":"Edit First and Last Name"},{"location":"user-accounts/edit_user_account/#upload-a-profile-image","text":"You can upload or change your profile photo under the Profile Image sub-heading. To do this, you can either drag and drop a photo from your computer or click the Drag and Drop or Select a Photo here option. After you select and image or drag & drop a photo from your computer, it will upload and show the preview of the image within the circle. You have the option to delete this photo by clicking on the 'X' next to the image file name. You can also select a different photo by clicking the Select a Different Photo? option","title":"Upload a Profile Image"},{"location":"user-accounts/edit_user_account/#edit-your-organization","text":"You can edit your organization by typing in the white box below the Organization sub-heading.","title":"Edit Your Organization"},{"location":"user-accounts/edit_user_account/#select-language-used","text":"Currently, English is the only supported language. Future versions of Kora will support other languages. To change the language used on Kora, click the white bar below the Language sub-heading, then select your desired language.","title":"Select Language Used"},{"location":"user-accounts/edit_user_account/#update-password","text":"You can update your kora user password under the Update Password sub-heading. You must first enter your new password in the white box under Enter New Password section. Then confirm your new password by typing the new password again in the white box under Confirm New Password .","title":"Update Password"},{"location":"user-accounts/edit_user_account/#link-gitlab-account","text":"When GitLab integration is enabled, users who did not create their account through the GitLab option may still link their GitLab and Kora accounts. To do so, simply click the \"Add GitLab Account\" button under \"Assign OAuth Account.\" This will redirect to the GitLab login screen. Log into that GitLab instance with your personal account and click \"Authorize\" to complete the process. Once linked, you will be able to log into your Kora account through the GitLab option.","title":"Link GitLab Account"},{"location":"user-accounts/edit_user_preferences/","text":"Edit User Preferences You can edit your kora preferences to modify your user experience including the use of the dashboard and organization of projects . Follow the steps below to edit your user preferences: When you are logged into Kora, you can access your user preferences from anywhere. Click on the person icon in the top menu located in the top right corner of the page. This will open a dropdown menu. Choose the My Preferences option. On the My Preferences page, you are able to modify your kora preferences. You can view more information about each of these preferences in the next sections. There are four different preferences you can modify: Use Dashboard? Kora Home Target Projects Tab Selection Single Project Tab Selection You also have the option to reply the Kora Introduction , by pressing the * Replay Kora Introduction option at the bottom of the page. When you have finished making changes to your kora user preferences, click the Update Preferences button at the bottom of the page to save the changes. Use Dashboard This option allows you to choose whether you would like to use the dashboard or to turn off the dashboard entirely. Click the circle next to the option you would like to select, this will change the color of the circle and text and add a white checkmark within the circle. Kora Home Target Upon login, or when you select the kora logo in the top left corner, you can either be taken to the dashboard or your projects list. Click the circle next to the option you would like to select, this will change the color of the circle and text and add a white checkmark within the circle. Projects Tab Selection When you view your list of projects, you can chose to have them displayed alphabetically or in a custom order. Click the circle next to the option you would like to select, this will change the color of the circle and text to blue and add a white checkmark within the circle. Single Project Tab Selection When you view an individual project, you can chose to have the forms within that project displayed alphabetically or in a custom order. Click the circle next to the option you would like to select, this will change the color of the circle and text to blue and add a white checkmark within the circle.","title":"Editing User Preferences"},{"location":"user-accounts/edit_user_preferences/#edit-user-preferences","text":"You can edit your kora preferences to modify your user experience including the use of the dashboard and organization of projects . Follow the steps below to edit your user preferences: When you are logged into Kora, you can access your user preferences from anywhere. Click on the person icon in the top menu located in the top right corner of the page. This will open a dropdown menu. Choose the My Preferences option. On the My Preferences page, you are able to modify your kora preferences. You can view more information about each of these preferences in the next sections. There are four different preferences you can modify: Use Dashboard? Kora Home Target Projects Tab Selection Single Project Tab Selection You also have the option to reply the Kora Introduction , by pressing the * Replay Kora Introduction option at the bottom of the page. When you have finished making changes to your kora user preferences, click the Update Preferences button at the bottom of the page to save the changes.","title":"Edit User Preferences"},{"location":"user-accounts/edit_user_preferences/#use-dashboard","text":"This option allows you to choose whether you would like to use the dashboard or to turn off the dashboard entirely. Click the circle next to the option you would like to select, this will change the color of the circle and text and add a white checkmark within the circle.","title":"Use Dashboard"},{"location":"user-accounts/edit_user_preferences/#kora-home-target","text":"Upon login, or when you select the kora logo in the top left corner, you can either be taken to the dashboard or your projects list. Click the circle next to the option you would like to select, this will change the color of the circle and text and add a white checkmark within the circle.","title":"Kora Home Target"},{"location":"user-accounts/edit_user_preferences/#projects-tab-selection","text":"When you view your list of projects, you can chose to have them displayed alphabetically or in a custom order. Click the circle next to the option you would like to select, this will change the color of the circle and text to blue and add a white checkmark within the circle.","title":"Projects Tab Selection"},{"location":"user-accounts/edit_user_preferences/#single-project-tab-selection","text":"When you view an individual project, you can chose to have the forms within that project displayed alphabetically or in a custom order. Click the circle next to the option you would like to select, this will change the color of the circle and text to blue and add a white checkmark within the circle. <img style=\"display:block;margin:auto;max-width:100%\" src=\"../user-accounts-img/edit_user_preferences_9_annotated.png\" width=\"100%\" title=\"Single Project Tab Selection>","title":"Single Project Tab Selection"},{"location":"user-accounts/managing_users_in_a_kora_installation/","text":"Managing Users in a Kora installation Kora makes it easy for administrators to manage who is part of a Kora installation. This includes the ability to invite, edit and view users. Follow these steps to get to the User Management page. Management of users can start from anywhere in kora by going to the main navigation menu at the top right of the page. Select the Management option at the bottom of the page. After opening up the Management sub-menu, select User Management to bring you to the page for user management. You may search for users by using the Find a User search bar. You may also organize your users alphabetically or by the date they joined your Kora installation. Inviting New Users to a Kora installation Any number of new users can be added to the Kora installation. All that is required for new users is a valid email address to sign up for a new user account . Follow the steps below from the User Management page to add a new user to your Kora Installation: Select the Invite New User(s) button at the top of the page. An Invite User(s) pop-up will appear. Enter any number of emails for your users into the Enter Email(s) to Invite User(s) field. Emails must be separated by either a space or a comma. You have the option to include a personal message with your invite. Click Invite User(s) at the bottom of the pop-up. New users will receive an email invitation to join Kora. For directions on how to sign up for a new user account, check out the new user account documentation. Managing Permissions You may give a user administrative access by checking the box next to Admin . Administrators are able to grant or remove admin access to other users within your Kora installation. Admins will have the ability to manage users, create projects, manage API tokens, and perform other high level actions. Care should be taken with who is given administrative action since they will have a lot of power to change the organization of data within a Kora installation. You are also able to mark users as active or inactive. Active users will be able to login and work on your Kora installation, while inactive users will no longer be able to sign into their Kora accounts. Viewing User Profiles Administrators are able to view the profiles of any user within a Kora installation by selecting View User Profile . Administrators are able to view the same account information that users can view of themselves . This includes their profile information, permissions and record history. Editing User Profiles As an administrator, you have the ability to update any user's profile information by selecting Edit User Profile for a user. This allows you to edit the same profile information as a user editing their own account . This includes their name, username, email, profile image, organization, language, and password. Manual User Confirmations/Activations and Password Resets For installations of Kora without working email servers, it will be necessary to manually activate any new accounts, whether they were created by a user themselves, or via an invitation by an administrator. To activate a user account that has been created but not yet confirmed, simply check the Active box for that user. For invited accounts, notify the user of their new username. If the user account was created via invitation, or if a user requires a password reset, you will additionally need to set a temporary password and then manually notify the user of it. To temporarily set a password, select Edit User Profile for the desired account, type in the temporary password, retype it to confirm, and hit Update User Profile . When relaying this temporary password to the owner of the account, warn them that their password is not safe and they should change it themselves immediately after logging in. They can do so by following the instructions in the article \" Edit User Account \"","title":"Managing Users in a Kora Installation"},{"location":"user-accounts/managing_users_in_a_kora_installation/#managing-users-in-a-kora-installation","text":"Kora makes it easy for administrators to manage who is part of a Kora installation. This includes the ability to invite, edit and view users. Follow these steps to get to the User Management page. Management of users can start from anywhere in kora by going to the main navigation menu at the top right of the page. Select the Management option at the bottom of the page. After opening up the Management sub-menu, select User Management to bring you to the page for user management. You may search for users by using the Find a User search bar. You may also organize your users alphabetically or by the date they joined your Kora installation.","title":"Managing Users in a Kora installation"},{"location":"user-accounts/managing_users_in_a_kora_installation/#inviting-new-users-to-a-kora-installation","text":"Any number of new users can be added to the Kora installation. All that is required for new users is a valid email address to sign up for a new user account . Follow the steps below from the User Management page to add a new user to your Kora Installation: Select the Invite New User(s) button at the top of the page. An Invite User(s) pop-up will appear. Enter any number of emails for your users into the Enter Email(s) to Invite User(s) field. Emails must be separated by either a space or a comma. You have the option to include a personal message with your invite. Click Invite User(s) at the bottom of the pop-up. New users will receive an email invitation to join Kora. For directions on how to sign up for a new user account, check out the new user account documentation.","title":"Inviting New Users to a Kora installation"},{"location":"user-accounts/managing_users_in_a_kora_installation/#managing-permissions","text":"You may give a user administrative access by checking the box next to Admin . Administrators are able to grant or remove admin access to other users within your Kora installation. Admins will have the ability to manage users, create projects, manage API tokens, and perform other high level actions. Care should be taken with who is given administrative action since they will have a lot of power to change the organization of data within a Kora installation. You are also able to mark users as active or inactive. Active users will be able to login and work on your Kora installation, while inactive users will no longer be able to sign into their Kora accounts.","title":"Managing Permissions"},{"location":"user-accounts/managing_users_in_a_kora_installation/#viewing-user-profiles","text":"Administrators are able to view the profiles of any user within a Kora installation by selecting View User Profile . Administrators are able to view the same account information that users can view of themselves . This includes their profile information, permissions and record history.","title":"Viewing User Profiles"},{"location":"user-accounts/managing_users_in_a_kora_installation/#editing-user-profiles","text":"As an administrator, you have the ability to update any user's profile information by selecting Edit User Profile for a user. This allows you to edit the same profile information as a user editing their own account . This includes their name, username, email, profile image, organization, language, and password.","title":"Editing User Profiles"},{"location":"user-accounts/managing_users_in_a_kora_installation/#manual-user-confirmationsactivations-and-password-resets","text":"For installations of Kora without working email servers, it will be necessary to manually activate any new accounts, whether they were created by a user themselves, or via an invitation by an administrator. To activate a user account that has been created but not yet confirmed, simply check the Active box for that user. For invited accounts, notify the user of their new username. If the user account was created via invitation, or if a user requires a password reset, you will additionally need to set a temporary password and then manually notify the user of it. To temporarily set a password, select Edit User Profile for the desired account, type in the temporary password, retype it to confirm, and hit Update User Profile . When relaying this temporary password to the owner of the account, warn them that their password is not safe and they should change it themselves immediately after logging in. They can do so by following the instructions in the article \" Edit User Account \"","title":"Manual User Confirmations/Activations and Password Resets"},{"location":"user-accounts/resetting_your_password/","text":"Resetting your Account Password Users are able to reset their own password from the login screen. Users are also able to reset their passwords from their user accounts . Administrators are also able to reset passwords for other users by managing user accounts . Resetting your Password from the Login screen Follow these steps to reset your account from the Kora login screen: Select Forgot Password? A pop-up will appear asking you to enter the email address for your Kora account. After entering your email address, press Select Password Reset Link . A notification will appear at the top-right of the page confirming the password reset link has been sent. Select the password reset link in your email. Enter a new password that you will remember and that is secure. Then press the Set New Password button to reset your password. Resetting your Password While Logged In. Follow these steps if you want to update your password while logged into Kora: Go to the Edit My Profile option from the Person Icon at the top-right of the page. This will bring you to the page to edit your account . Scroll down to Update Password . Enter a new secure password that you will remember. Press the Update Profile button floating at the bottom of the page. Resetting Another Users Password as an Admin If you are an administrator, then you are able to update the passwords of other Kora users. Follow these directions to change another user's password: Navigate to the User Management page. Scroll down the User Management page to the user whose password you want to edit, and click Edit User Profile Then follow the same process as steps 2 through 4 in the previous section. Scroll down to Update Password , enter a new secure password and press the Update Profile button floating at the bottom of the page.","title":"Resetting your Kora Password"},{"location":"user-accounts/resetting_your_password/#resetting-your-account-password","text":"Users are able to reset their own password from the login screen. Users are also able to reset their passwords from their user accounts . Administrators are also able to reset passwords for other users by managing user accounts .","title":"Resetting your Account Password"},{"location":"user-accounts/resetting_your_password/#resetting-your-password-from-the-login-screen","text":"Follow these steps to reset your account from the Kora login screen: Select Forgot Password? A pop-up will appear asking you to enter the email address for your Kora account. After entering your email address, press Select Password Reset Link . A notification will appear at the top-right of the page confirming the password reset link has been sent. Select the password reset link in your email. Enter a new password that you will remember and that is secure. Then press the Set New Password button to reset your password.","title":"Resetting your Password from the Login screen"},{"location":"user-accounts/resetting_your_password/#resetting-your-password-while-logged-in","text":"Follow these steps if you want to update your password while logged into Kora: Go to the Edit My Profile option from the Person Icon at the top-right of the page. This will bring you to the page to edit your account . Scroll down to Update Password . Enter a new secure password that you will remember. Press the Update Profile button floating at the bottom of the page.","title":"Resetting your Password While Logged In."},{"location":"user-accounts/resetting_your_password/#resetting-another-users-password-as-an-admin","text":"If you are an administrator, then you are able to update the passwords of other Kora users. Follow these directions to change another user's password: Navigate to the User Management page. Scroll down the User Management page to the user whose password you want to edit, and click Edit User Profile Then follow the same process as steps 2 through 4 in the previous section. Scroll down to Update Password , enter a new secure password and press the Update Profile button floating at the bottom of the page.","title":"Resetting Another Users Password as an Admin"},{"location":"user-accounts/signing_up_for_a_user_account/","text":"Signing Up for a User account After being invited to a Kora installation by an administrator , you will be able to sign up for a user account. Follow these instructions to create a user account: Accept the email invite from an administrator for the Kora installation. This will take you to a page to create a new Kora account. Fill in your information to create an account. When you're finished entering your information click Sign Up . This will open up a new page thanking you for signing up with Kora. Welcome by the way! We have sent you a new email which provides a final link for activating your account. Alternatively you may activate your account by entering the token which is also provided in the email. Once you've activated your account you'll be directed to a page welcoming you to Kora. If this is your first time using Kora, then we highly recommend going through our introduction. The introduction will walk you through the basics of Kora , and end by asking you which projects you would like permissions for .","title":"Signing up for a User Account"},{"location":"user-accounts/signing_up_for_a_user_account/#signing-up-for-a-user-account","text":"After being invited to a Kora installation by an administrator , you will be able to sign up for a user account. Follow these instructions to create a user account: Accept the email invite from an administrator for the Kora installation. This will take you to a page to create a new Kora account. Fill in your information to create an account. When you're finished entering your information click Sign Up . This will open up a new page thanking you for signing up with Kora. Welcome by the way! We have sent you a new email which provides a final link for activating your account. Alternatively you may activate your account by entering the token which is also provided in the email. Once you've activated your account you'll be directed to a page welcoming you to Kora. If this is your first time using Kora, then we highly recommend going through our introduction. The introduction will walk you through the basics of Kora , and end by asking you which projects you would like permissions for .","title":"Signing Up for a User account"},{"location":"user-accounts/view_your_project_permissions/","text":"View Your Project Permissions On the Projects Permissions page, you have the ability to add and remove users in the Admin Group and the Default Group . Follow the steps below to view your project permissions. When you are on the main page of your project, click the name of the project in the top menu bar. This will open a dropdown menu. Click on the Projects Permissions option. This will bring you to the Projects Permissions page. If you wish to learn how to add or remove users on a project, visit the Adding Users to Projects documentation.","title":"Viewing Your Project Permissions"},{"location":"user-accounts/view_your_project_permissions/#view-your-project-permissions","text":"On the Projects Permissions page, you have the ability to add and remove users in the Admin Group and the Default Group . Follow the steps below to view your project permissions. When you are on the main page of your project, click the name of the project in the top menu bar. This will open a dropdown menu. Click on the Projects Permissions option. This will bring you to the Projects Permissions page. If you wish to learn how to add or remove users on a project, visit the Adding Users to Projects documentation.","title":"View Your Project Permissions"},{"location":"user-accounts/viewing_your_user_account/","text":"Viewing Your User Account Every Kora user has a user account. Their user account contains profile information, permissions information and a record history that can be viewed by the users themselves and administrators. In order to view your user account information, follow these directions: Click on the Person Icon at the top-right of the page in the navigation bar. Select View My Profile from the menu. This will bring you to your user account where you can view your profile information, permissions and record history. Profile information A user's profile information will contain all of the information entered into their profile when creating and editing that account. This includes first name, last name, username, email, and organization. Permissions The permissions section of your profile will display the project and form permissions that you have been granted within a Kora installation. Record History A user's record history displays recently modified records and records that they have created.","title":"Viewing your User Account"},{"location":"user-accounts/viewing_your_user_account/#viewing-your-user-account","text":"Every Kora user has a user account. Their user account contains profile information, permissions information and a record history that can be viewed by the users themselves and administrators. In order to view your user account information, follow these directions: Click on the Person Icon at the top-right of the page in the navigation bar. Select View My Profile from the menu. This will bring you to your user account where you can view your profile information, permissions and record history.","title":"Viewing Your User Account"},{"location":"user-accounts/viewing_your_user_account/#profile-information","text":"A user's profile information will contain all of the information entered into their profile when creating and editing that account. This includes first name, last name, username, email, and organization.","title":"Profile information"},{"location":"user-accounts/viewing_your_user_account/#permissions","text":"The permissions section of your profile will display the project and form permissions that you have been granted within a Kora installation.","title":"Permissions"},{"location":"user-accounts/viewing_your_user_account/#record-history","text":"A user's record history displays recently modified records and records that they have created.","title":"Record History"}]}